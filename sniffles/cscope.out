cscope 15 $HOME/sniffles/sniffles               0000371466
	@pcre.h

39 #i‚de‡
_PCRE_H


40 
	#_PCRE_H


	)

44 
	#PCRE_MAJOR
 8

	)

45 
	#PCRE_MINOR
 37

	)

46 
	#PCRE_PRERELEASE


	)

47 
	#PCRE_DATE
 2015-04-28

	)

52 #i‚de‡
PCRE_EXP_DECL


53 #ifde‡
__˝lu•lus


54 
	#PCRE_EXP_DECL
 "C"

	)

56 
	#PCRE_EXP_DECL
 

	)

60 #ifde‡
__˝lu•lus


61 #i‚de‡
PCRECPP_EXP_DECL


62 
	#PCRECPP_EXP_DECL
 

	)

64 #i‚de‡
PCRECPP_EXP_DEFN


65 
	#PCRECPP_EXP_DEFN


	)

72 
	~<°dlib.h
>

76 #ifde‡
__˝lu•lus


109 
	#PCRE_CASELESS
 0x00000001

	)

110 
	#PCRE_MULTILINE
 0x00000002

	)

111 
	#PCRE_DOTALL
 0x00000004

	)

112 
	#PCRE_EXTENDED
 0x00000008

	)

113 
	#PCRE_ANCHORED
 0x00000010

	)

114 
	#PCRE_DOLLAR_ENDONLY
 0x00000020

	)

115 
	#PCRE_EXTRA
 0x00000040

	)

116 
	#PCRE_NOTBOL
 0x00000080

	)

117 
	#PCRE_NOTEOL
 0x00000100

	)

118 
	#PCRE_UNGREEDY
 0x00000200

	)

119 
	#PCRE_NOTEMPTY
 0x00000400

	)

120 
	#PCRE_UTF8
 0x00000800

	)

121 
	#PCRE_UTF16
 0x00000800

	)

122 
	#PCRE_UTF32
 0x00000800

	)

123 
	#PCRE_NO_AUTO_CAPTURE
 0x00001000

	)

124 
	#PCRE_NO_UTF8_CHECK
 0x00002000

	)

125 
	#PCRE_NO_UTF16_CHECK
 0x00002000

	)

126 
	#PCRE_NO_UTF32_CHECK
 0x00002000

	)

127 
	#PCRE_AUTO_CALLOUT
 0x00004000

	)

128 
	#PCRE_PARTIAL_SOFT
 0x00008000

	)

129 
	#PCRE_PARTIAL
 0x00008000

	)

132 
	#PCRE_NEVER_UTF
 0x00010000

	)

133 
	#PCRE_DFA_SHORTEST
 0x00010000

	)

136 
	#PCRE_NO_AUTO_POSSESS
 0x00020000

	)

137 
	#PCRE_DFA_RESTART
 0x00020000

	)

139 
	#PCRE_FIRSTLINE
 0x00040000

	)

140 
	#PCRE_DUPNAMES
 0x00080000

	)

141 
	#PCRE_NEWLINE_CR
 0x00100000

	)

142 
	#PCRE_NEWLINE_LF
 0x00200000

	)

143 
	#PCRE_NEWLINE_CRLF
 0x00300000

	)

144 
	#PCRE_NEWLINE_ANY
 0x00400000

	)

145 
	#PCRE_NEWLINE_ANYCRLF
 0x00500000

	)

146 
	#PCRE_BSR_ANYCRLF
 0x00800000

	)

147 
	#PCRE_BSR_UNICODE
 0x01000000

	)

148 
	#PCRE_JAVASCRIPT_COMPAT
 0x02000000

	)

149 
	#PCRE_NO_START_OPTIMIZE
 0x04000000

	)

150 
	#PCRE_NO_START_OPTIMISE
 0x04000000

	)

151 
	#PCRE_PARTIAL_HARD
 0x08000000

	)

152 
	#PCRE_NOTEMPTY_ATSTART
 0x10000000

	)

153 
	#PCRE_UCP
 0x20000000

	)

157 
	#PCRE_ERROR_NOMATCH
 (-1)

	)

158 
	#PCRE_ERROR_NULL
 (-2)

	)

159 
	#PCRE_ERROR_BADOPTION
 (-3)

	)

160 
	#PCRE_ERROR_BADMAGIC
 (-4)

	)

161 
	#PCRE_ERROR_UNKNOWN_OPCODE
 (-5)

	)

162 
	#PCRE_ERROR_UNKNOWN_NODE
 (-5Ë

	)

163 
	#PCRE_ERROR_NOMEMORY
 (-6)

	)

164 
	#PCRE_ERROR_NOSUBSTRING
 (-7)

	)

165 
	#PCRE_ERROR_MATCHLIMIT
 (-8)

	)

166 
	#PCRE_ERROR_CALLOUT
 (-9Ë

	)

167 
	#PCRE_ERROR_BADUTF8
 (-10Ë

	)

168 
	#PCRE_ERROR_BADUTF16
 (-10Ë

	)

169 
	#PCRE_ERROR_BADUTF32
 (-10Ë

	)

170 
	#PCRE_ERROR_BADUTF8_OFFSET
 (-11Ë

	)

171 
	#PCRE_ERROR_BADUTF16_OFFSET
 (-11Ë

	)

172 
	#PCRE_ERROR_PARTIAL
 (-12)

	)

173 
	#PCRE_ERROR_BADPARTIAL
 (-13)

	)

174 
	#PCRE_ERROR_INTERNAL
 (-14)

	)

175 
	#PCRE_ERROR_BADCOUNT
 (-15)

	)

176 
	#PCRE_ERROR_DFA_UITEM
 (-16)

	)

177 
	#PCRE_ERROR_DFA_UCOND
 (-17)

	)

178 
	#PCRE_ERROR_DFA_UMLIMIT
 (-18)

	)

179 
	#PCRE_ERROR_DFA_WSSIZE
 (-19)

	)

180 
	#PCRE_ERROR_DFA_RECURSE
 (-20)

	)

181 
	#PCRE_ERROR_RECURSIONLIMIT
 (-21)

	)

182 
	#PCRE_ERROR_NULLWSLIMIT
 (-22Ë

	)

183 
	#PCRE_ERROR_BADNEWLINE
 (-23)

	)

184 
	#PCRE_ERROR_BADOFFSET
 (-24)

	)

185 
	#PCRE_ERROR_SHORTUTF8
 (-25)

	)

186 
	#PCRE_ERROR_SHORTUTF16
 (-25Ë

	)

187 
	#PCRE_ERROR_RECURSELOOP
 (-26)

	)

188 
	#PCRE_ERROR_JIT_STACKLIMIT
 (-27)

	)

189 
	#PCRE_ERROR_BADMODE
 (-28)

	)

190 
	#PCRE_ERROR_BADENDIANNESS
 (-29)

	)

191 
	#PCRE_ERROR_DFA_BADRESTART
 (-30)

	)

192 
	#PCRE_ERROR_JIT_BADOPTION
 (-31)

	)

193 
	#PCRE_ERROR_BADLENGTH
 (-32)

	)

194 
	#PCRE_ERROR_UNSET
 (-33)

	)

198 
	#PCRE_UTF8_ERR0
 0

	)

199 
	#PCRE_UTF8_ERR1
 1

	)

200 
	#PCRE_UTF8_ERR2
 2

	)

201 
	#PCRE_UTF8_ERR3
 3

	)

202 
	#PCRE_UTF8_ERR4
 4

	)

203 
	#PCRE_UTF8_ERR5
 5

	)

204 
	#PCRE_UTF8_ERR6
 6

	)

205 
	#PCRE_UTF8_ERR7
 7

	)

206 
	#PCRE_UTF8_ERR8
 8

	)

207 
	#PCRE_UTF8_ERR9
 9

	)

208 
	#PCRE_UTF8_ERR10
 10

	)

209 
	#PCRE_UTF8_ERR11
 11

	)

210 
	#PCRE_UTF8_ERR12
 12

	)

211 
	#PCRE_UTF8_ERR13
 13

	)

212 
	#PCRE_UTF8_ERR14
 14

	)

213 
	#PCRE_UTF8_ERR15
 15

	)

214 
	#PCRE_UTF8_ERR16
 16

	)

215 
	#PCRE_UTF8_ERR17
 17

	)

216 
	#PCRE_UTF8_ERR18
 18

	)

217 
	#PCRE_UTF8_ERR19
 19

	)

218 
	#PCRE_UTF8_ERR20
 20

	)

219 
	#PCRE_UTF8_ERR21
 21

	)

220 
	#PCRE_UTF8_ERR22
 22

	)

224 
	#PCRE_UTF16_ERR0
 0

	)

225 
	#PCRE_UTF16_ERR1
 1

	)

226 
	#PCRE_UTF16_ERR2
 2

	)

227 
	#PCRE_UTF16_ERR3
 3

	)

228 
	#PCRE_UTF16_ERR4
 4

	)

232 
	#PCRE_UTF32_ERR0
 0

	)

233 
	#PCRE_UTF32_ERR1
 1

	)

234 
	#PCRE_UTF32_ERR2
 2

	)

235 
	#PCRE_UTF32_ERR3
 3

	)

239 
	#PCRE_INFO_OPTIONS
 0

	)

240 
	#PCRE_INFO_SIZE
 1

	)

241 
	#PCRE_INFO_CAPTURECOUNT
 2

	)

242 
	#PCRE_INFO_BACKREFMAX
 3

	)

243 
	#PCRE_INFO_FIRSTBYTE
 4

	)

244 
	#PCRE_INFO_FIRSTCHAR
 4

	)

245 
	#PCRE_INFO_FIRSTTABLE
 5

	)

246 
	#PCRE_INFO_LASTLITERAL
 6

	)

247 
	#PCRE_INFO_NAMEENTRYSIZE
 7

	)

248 
	#PCRE_INFO_NAMECOUNT
 8

	)

249 
	#PCRE_INFO_NAMETABLE
 9

	)

250 
	#PCRE_INFO_STUDYSIZE
 10

	)

251 
	#PCRE_INFO_DEFAULT_TABLES
 11

	)

252 
	#PCRE_INFO_OKPARTIAL
 12

	)

253 
	#PCRE_INFO_JCHANGED
 13

	)

254 
	#PCRE_INFO_HASCRORLF
 14

	)

255 
	#PCRE_INFO_MINLENGTH
 15

	)

256 
	#PCRE_INFO_JIT
 16

	)

257 
	#PCRE_INFO_JITSIZE
 17

	)

258 
	#PCRE_INFO_MAXLOOKBEHIND
 18

	)

259 
	#PCRE_INFO_FIRSTCHARACTER
 19

	)

260 
	#PCRE_INFO_FIRSTCHARACTERFLAGS
 20

	)

261 
	#PCRE_INFO_REQUIREDCHAR
 21

	)

262 
	#PCRE_INFO_REQUIREDCHARFLAGS
 22

	)

263 
	#PCRE_INFO_MATCHLIMIT
 23

	)

264 
	#PCRE_INFO_RECURSIONLIMIT
 24

	)

265 
	#PCRE_INFO_MATCH_EMPTY
 25

	)

270 
	#PCRE_CONFIG_UTF8
 0

	)

271 
	#PCRE_CONFIG_NEWLINE
 1

	)

272 
	#PCRE_CONFIG_LINK_SIZE
 2

	)

273 
	#PCRE_CONFIG_POSIX_MALLOC_THRESHOLD
 3

	)

274 
	#PCRE_CONFIG_MATCH_LIMIT
 4

	)

275 
	#PCRE_CONFIG_STACKRECURSE
 5

	)

276 
	#PCRE_CONFIG_UNICODE_PROPERTIES
 6

	)

277 
	#PCRE_CONFIG_MATCH_LIMIT_RECURSION
 7

	)

278 
	#PCRE_CONFIG_BSR
 8

	)

279 
	#PCRE_CONFIG_JIT
 9

	)

280 
	#PCRE_CONFIG_UTF16
 10

	)

281 
	#PCRE_CONFIG_JITTARGET
 11

	)

282 
	#PCRE_CONFIG_UTF32
 12

	)

283 
	#PCRE_CONFIG_PARENS_LIMIT
 13

	)

288 
	#PCRE_STUDY_JIT_COMPILE
 0x0001

	)

289 
	#PCRE_STUDY_JIT_PARTIAL_SOFT_COMPILE
 0x0002

	)

290 
	#PCRE_STUDY_JIT_PARTIAL_HARD_COMPILE
 0x0004

	)

291 
	#PCRE_STUDY_EXTRA_NEEDED
 0x0008

	)

296 
	#PCRE_EXTRA_STUDY_DATA
 0x0001

	)

297 
	#PCRE_EXTRA_MATCH_LIMIT
 0x0002

	)

298 
	#PCRE_EXTRA_CALLOUT_DATA
 0x0004

	)

299 
	#PCRE_EXTRA_TABLES
 0x0008

	)

300 
	#PCRE_EXTRA_MATCH_LIMIT_RECURSION
 0x0010

	)

301 
	#PCRE_EXTRA_MARK
 0x0020

	)

302 
	#PCRE_EXTRA_EXECUTABLE_JIT
 0x0040

	)

306 
ªÆ_p¸e
;

307 
ªÆ_p¸e
 
	tp¸e
;

309 
ªÆ_p¸e16
;

310 
ªÆ_p¸e16
 
	tp¸e16
;

315 #i‚de‡
PCRE_UCHAR16


316 
	#PCRE_UCHAR16
 

	)

319 #i‚de‡
PCRE_SPTR16


320 
	#PCRE_SPTR16
 c⁄° 
PCRE_UCHAR16
 *

	)

327 #i‚de‡
PCRE_SPTR


328 
	#PCRE_SPTR
 c⁄° *

	)

335 
	sp¸e_exåa
 {

336 
Êags
;

337 *
°udy_d©a
;

338 
m©ch_limô
;

339 *
ˇŒout_d©a
;

340 c⁄° *
èbÀs
;

341 
m©ch_limô_ªcursi⁄
;

342 **
m¨k
;

343 *
execuèbÀ_jô
;

344 } 
	tp¸e_exåa
;

348 
	sp¸e16_exåa
 {

349 
Êags
;

350 *
°udy_d©a
;

351 
m©ch_limô
;

352 *
ˇŒout_d©a
;

353 c⁄° *
èbÀs
;

354 
m©ch_limô_ªcursi⁄
;

355 
PCRE_UCHAR16
 **
m¨k
;

356 *
execuèbÀ_jô
;

357 } 
	tp¸e16_exåa
;

365 
	sp¸e_ˇŒout_block
 {

366 
vîsi⁄
;

368 
ˇŒout_numbî
;

369 *
off£t_ve˘‹
;

370 
PCRE_SPTR
 
subje˘
;

371 
subje˘_Àngth
;

372 
°¨t_m©ch
;

373 
cuºít_posôi⁄
;

374 
ˇ±uª_t›
;

375 
ˇ±uª_œ°
;

376 *
ˇŒout_d©a
;

378 
∑âîn_posôi⁄
;

379 
√xt_ôem_Àngth
;

381 c⁄° *
m¨k
;

383 } 
	tp¸e_ˇŒout_block
;

387 
	sp¸e16_ˇŒout_block
 {

388 
vîsi⁄
;

390 
ˇŒout_numbî
;

391 *
off£t_ve˘‹
;

392 
PCRE_SPTR16
 
subje˘
;

393 
subje˘_Àngth
;

394 
°¨t_m©ch
;

395 
cuºít_posôi⁄
;

396 
ˇ±uª_t›
;

397 
ˇ±uª_œ°
;

398 *
ˇŒout_d©a
;

400 
∑âîn_posôi⁄
;

401 
√xt_ôem_Àngth
;

403 c⁄° 
PCRE_UCHAR16
 *
m¨k
;

405 } 
	tp¸e16_ˇŒout_block
;

413 #i‚de‡
VPCOMPAT


414 
PCRE_EXP_DECL
 *(*
p¸e_mÆloc
)(
size_t
);

415 
PCRE_EXP_DECL
 (*
p¸e_‰ì
)(*);

416 
PCRE_EXP_DECL
 *(*
p¸e_°ack_mÆloc
)(
size_t
);

417 
PCRE_EXP_DECL
 (*
p¸e_°ack_‰ì
)(*);

418 
PCRE_EXP_DECL
 (*
p¸e_ˇŒout
)(
p¸e_ˇŒout_block
 *);

419 
PCRE_EXP_DECL
 (*
p¸e_°ack_gu¨d
)();

421 
PCRE_EXP_DECL
 *(*
p¸e16_mÆloc
)(
size_t
);

422 
PCRE_EXP_DECL
 (*
p¸e16_‰ì
)(*);

423 
PCRE_EXP_DECL
 *(*
p¸e16_°ack_mÆloc
)(
size_t
);

424 
PCRE_EXP_DECL
 (*
p¸e16_°ack_‰ì
)(*);

425 
PCRE_EXP_DECL
 (*
p¸e16_ˇŒout
)(
p¸e16_ˇŒout_block
 *);

426 
PCRE_EXP_DECL
 (*
p¸e16_°ack_gu¨d
)();

429 
PCRE_EXP_DECL
 *
p¸e_mÆloc
(
size_t
);

430 
PCRE_EXP_DECL
 
p¸e_‰ì
(*);

431 
PCRE_EXP_DECL
 *
p¸e_°ack_mÆloc
(
size_t
);

432 
PCRE_EXP_DECL
 
p¸e_°ack_‰ì
(*);

433 
PCRE_EXP_DECL
 
p¸e_ˇŒout
(
p¸e_ˇŒout_block
 *);

434 
PCRE_EXP_DECL
 
p¸e_°ack_gu¨d
();

436 
PCRE_EXP_DECL
 *
p¸e16_mÆloc
(
size_t
);

437 
PCRE_EXP_DECL
 
p¸e16_‰ì
(*);

438 
PCRE_EXP_DECL
 *
p¸e16_°ack_mÆloc
(
size_t
);

439 
PCRE_EXP_DECL
 
p¸e16_°ack_‰ì
(*);

440 
PCRE_EXP_DECL
 
p¸e16_ˇŒout
(
p¸e16_ˇŒout_block
 *);

441 
PCRE_EXP_DECL
 
p¸e16_°ack_gu¨d
();

447 
PCRE_EXP_DECL
 
p¸e
 *
p¸e_compûe
(const *, , const **, *,

449 
PCRE_EXP_DECL
 
p¸e16
 *
p¸e16_compûe
(
PCRE_SPTR16
, , const **, *,

451 
PCRE_EXP_DECL
 
p¸e
 *
p¸e_compûe2
(const *, , *, const **,

453 
PCRE_EXP_DECL
 
p¸e16
 *
p¸e16_compûe2
(
PCRE_SPTR16
, , *, const **,

455 
PCRE_EXP_DECL
 
p¸e_c⁄fig
(, *);

456 
PCRE_EXP_DECL
 
p¸e16_c⁄fig
(, *);

457 
PCRE_EXP_DECL
 
p¸e_c›y_«med_sub°rög
(c⁄° 
p¸e
 *, const *,

459 
PCRE_EXP_DECL
 
p¸e16_c›y_«med_sub°rög
(c⁄° 
p¸e16
 *, 
PCRE_SPTR16
,

460 *, , 
PCRE_SPTR16
, 
PCRE_UCHAR16
 *, );

461 
PCRE_EXP_DECL
 
p¸e_c›y_sub°rög
(const *, *, , ,

463 
PCRE_EXP_DECL
 
p¸e16_c›y_sub°rög
(
PCRE_SPTR16
, *, , ,

464 
PCRE_UCHAR16
 *, );

465 
PCRE_EXP_DECL
 
p¸e_dÁ_exec
(c⁄° 
p¸e
 *, c⁄° 
p¸e_exåa
 *,

467 
PCRE_EXP_DECL
 
p¸e16_dÁ_exec
(c⁄° 
p¸e16
 *, c⁄° 
p¸e16_exåa
 *,

468 
PCRE_SPTR16
, , , , *, , *, );

469 
PCRE_EXP_DECL
 
p¸e_exec
(c⁄° 
p¸e
 *, c⁄° 
p¸e_exåa
 *, 
PCRE_SPTR
,

471 
PCRE_EXP_DECL
 
p¸e16_exec
(c⁄° 
p¸e16
 *, c⁄° 
p¸e16_exåa
 *,

472 
PCRE_SPTR16
, , , , *, );
PCRE_EXP_DECL
 
p¸e_‰ì_sub°rög
(const *);

473 
PCRE_EXP_DECL
 
p¸e16_‰ì_sub°rög
(
PCRE_SPTR16
);

474 
PCRE_EXP_DECL
 
p¸e_‰ì_sub°rög_li°
(const **);

475 
PCRE_EXP_DECL
 
p¸e16_‰ì_sub°rög_li°
(
PCRE_SPTR16
 *);

476 
PCRE_EXP_DECL
 
p¸e_fuŒöfo
(c⁄° 
p¸e
 *, c⁄° 
p¸e_exåa
 *, ,

478 
PCRE_EXP_DECL
 
p¸e16_fuŒöfo
(c⁄° 
p¸e16
 *, c⁄° 
p¸e16_exåa
 *, ,

480 
PCRE_EXP_DECL
 
p¸e_gë_«med_sub°rög
(c⁄° 
p¸e
 *, const *,

482 
PCRE_EXP_DECL
 
p¸e16_gë_«med_sub°rög
(c⁄° 
p¸e16
 *, 
PCRE_SPTR16
,

483 *, , 
PCRE_SPTR16
, PCRE_SPTR16 *);

484 
PCRE_EXP_DECL
 
p¸e_gë_°rögnumbî
(c⁄° 
p¸e
 *, const *);

485 
PCRE_EXP_DECL
 
p¸e16_gë_°rögnumbî
(c⁄° 
p¸e16
 *, 
PCRE_SPTR16
);

486 
PCRE_EXP_DECL
 
p¸e_gë_°rögèbÀ_íåõs
(c⁄° 
p¸e
 *, const *,

488 
PCRE_EXP_DECL
 
p¸e16_gë_°rögèbÀ_íåõs
(c⁄° 
p¸e16
 *, 
PCRE_SPTR16
,

489 
PCRE_UCHAR16
 **, PCRE_UCHAR16 **);

490 
PCRE_EXP_DECL
 
p¸e_gë_sub°rög
(const *, *, , ,

492 
PCRE_EXP_DECL
 
p¸e16_gë_sub°rög
(
PCRE_SPTR16
, *, , ,

493 
PCRE_SPTR16
 *);

494 
PCRE_EXP_DECL
 
p¸e_gë_sub°rög_li°
(const *, *, ,

496 
PCRE_EXP_DECL
 
p¸e16_gë_sub°rög_li°
(
PCRE_SPTR16
, *, ,

497 
PCRE_SPTR16
 **);

498 
PCRE_EXP_DECL
 c⁄° *
p¸e_makëabÀs
();

499 
PCRE_EXP_DECL
 c⁄° *
p¸e16_makëabÀs
();

500 
PCRE_EXP_DECL
 
p¸e_ªfcou¡
(
p¸e
 *, );

501 
PCRE_EXP_DECL
 
p¸e16_ªfcou¡
(
p¸e16
 *, );

502 
PCRE_EXP_DECL
 
p¸e_exåa
 *
p¸e_°udy
(c⁄° 
p¸e
 *, , const **);

503 
PCRE_EXP_DECL
 
p¸e16_exåa
 *
p¸e16_°udy
(c⁄° 
p¸e16
 *, , const **);

504 
PCRE_EXP_DECL
 
p¸e_‰ì_°udy
(
p¸e_exåa
 *);

505 
PCRE_EXP_DECL
 
p¸e16_‰ì_°udy
(
p¸e16_exåa
 *);

506 
PCRE_EXP_DECL
 c⁄° *
p¸e_vîsi⁄
();

507 
PCRE_EXP_DECL
 c⁄° *
p¸e16_vîsi⁄
();

510 
PCRE_EXP_DECL
 
p¸e_∑âîn_to_ho°_byã_‹dî
(
p¸e
 *, 
p¸e_exåa
 *,

512 
PCRE_EXP_DECL
 
p¸e16_∑âîn_to_ho°_byã_‹dî
(
p¸e16
 *, 
p¸e16_exåa
 *,

514 
PCRE_EXP_DECL
 
p¸e16_utf16_to_ho°_byã_‹dî
(
PCRE_UCHAR16
 *,

515 
PCRE_SPTR16
, , *, );

517 #ifde‡
__˝lu•lus


	@pcre_chartables.c

23 #ifde‡
HAVE_CONFIG_H


24 
	~"c⁄fig.h
"

27 
	~"p¸e_öã∫Æ.h
"

29 c⁄° 
p¸e_uöt8
 
PRIV
(
deÁu…_èbÀs
)[] = {

	@pcre_compile.c

45 #ifde‡
HAVE_CONFIG_H


46 
	~"c⁄fig.h
"

49 
	#NLBLOCK
 
cd


	)

50 
	#PSSTART
 
°¨t_∑âîn


	)

51 
	#PSEND
 
íd_∑âîn


	)

53 
	~"p¸e_öã∫Æ.h
"

61 #ifde‡
PCRE_DEBUG


63 
	#PCRE_INCLUDED


	)

64 
	~"p¸e_¥ötöt.c
"

65 #unde‡
PCRE_INCLUDED


71 
	#SETBIT
(
a
,
b
Ëa[(b)/8] |(1 << ((b)&7))

	)

78 
	#OFLOW_MAX
 (
INT_MAX
 - 20)

	)

83 
add_li°_to_˛ass
(
p¸e_uöt8
 *, 
p¸e_uch¨
 **, , 
compûe_d©a
 *,

84 c⁄° 
p¸e_uöt32
 *, );

86 
BOOL


87 
compûe_ªgex
(, 
p¸e_uch¨
 **, c⁄°Ö¸e_uch¨ **, *, 
BOOL
, BOOL, , ,

88 
p¸e_uöt32
 *, 
p¸e_öt32
 *,Ö¸e_uöt32 *,Ö¸e_öt32 *, 
bønch_chaö
 *,

89 
compûe_d©a
 *, *);

115 
	#COMPILE_WORK_SIZE
 (2048*
LINK_SIZE
)

	)

116 
	#COMPILE_WORK_SIZE_MAX
 (100*
COMPILE_WORK_SIZE
)

	)

123 
	#NAMED_GROUP_LIST_SIZE
 20

	)

128 
	#WORK_SIZE_SAFETY_MARGIN
 (100)

	)

132 
	#REQ_CASELESS
 (1 << 0Ë

	)

133 
	#REQ_VARY
 (1 << 1Ë

	)

135 
	#REQ_UNSET
 (-2)

	)

136 
	#REQ_NONE
 (-1)

	)

140 
	#UTF_LENGTH
 0x10000000»

	)

147 #i‚de‡
EBCDIC


152 c⁄° 
	gesˇ≥s
[] = {

158 
CHAR_COLON
, 
CHAR_SEMICOLON
,

159 
CHAR_LESS_THAN_SIGN
, 
CHAR_EQUALS_SIGN
,

160 
CHAR_GREATER_THAN_SIGN
, 
CHAR_QUESTION_MARK
,

161 
CHAR_COMMERCIAL_AT
, -
ESC_A
,

162 -
ESC_B
, -
ESC_C
,

163 -
ESC_D
, -
ESC_E
,

164 0, -
ESC_G
,

165 -
ESC_H
, 0,

166 0, -
ESC_K
,

168 -
ESC_N
, 0,

169 -
ESC_P
, -
ESC_Q
,

170 -
ESC_R
, -
ESC_S
,

172 -
ESC_V
, -
ESC_W
,

173 -
ESC_X
, 0,

174 -
ESC_Z
, 
CHAR_LEFT_SQUARE_BRACKET
,

175 
CHAR_BACKSLASH
, 
CHAR_RIGHT_SQUARE_BRACKET
,

176 
CHAR_CIRCUMFLEX_ACCENT
, 
CHAR_UNDERSCORE
,

177 
CHAR_GRAVE_ACCENT
, 7,

178 -
ESC_b
, 0,

179 -
ESC_d
, 
ESC_e
,

180 
ESC_f
, 0,

181 -
ESC_h
, 0,

182 0, -
ESC_k
,

184 
ESC_n
, 0,

185 -
ESC_p
, 0,

186 
ESC_r
, -
ESC_s
,

187 
ESC_ãe
, 0,

188 -
ESC_v
, -
ESC_w
,

190 -
ESC_z


197 c⁄° 
	gesˇ≥s
[] = {

205  0, 7, -
ESC_b
, 0, -
ESC_d
, 
ESC_e
, 
ESC_f
, 0,

206  -
ESC_h
, 0, 0, '{', 0, 0, 0, 0,

207  0, 0, -
ESC_k
, 'l', 0, 
ESC_n
, 0, -
ESC_p
,

208  0, 
ESC_r
, 0, '}', 0, 0, 0, 0,

209  0, '~', -
ESC_s
, 
ESC_ãe
, 0,-
ESC_v
, -
ESC_w
, 0,

210  0,-
ESC_z
, 0, 0, 0, '[', 0, 0,

213  '{',-
ESC_A
, -
ESC_B
, -
ESC_C
, -
ESC_D
,-
ESC_E
, 0, -
ESC_G
,

214  -
ESC_H
, 0, 0, 0, 0, 0, 0, 0,

215  '}', 0, -
ESC_K
, 0, 0,-
ESC_N
, 0, -
ESC_P
,

216  -
ESC_Q
,-
ESC_R
, 0, 0, 0, 0, 0, 0,

217  '\\', 0, -
ESC_S
, 0, 0,-
ESC_V
, -
ESC_W
, -
ESC_X
,

218  0,-
ESC_Z
, 0, 0, 0, 0, 0, 0,

231 
	svîbôem
 {

232 
	mÀn
;

233 
	m›
;

234 
	m›_¨g
;

235 } 
	tvîbôem
;

237 c⁄° 
	gvîb«mes
[] =

239 
STRING_MARK0


240 
STRING_ACCEPT0


241 
STRING_COMMIT0


242 
STRING_F0


243 
STRING_FAIL0


244 
STRING_PRUNE0


245 
STRING_SKIP0


246 
STRING_THEN
;

248 c⁄° 
vîbôem
 
	gvîbs
[] = {

249 { 0, -1, 
OP_MARK
 },

250 { 4, -1, 
OP_MARK
 },

251 { 6, 
OP_ACCEPT
, -1 },

252 { 6, 
OP_COMMIT
, -1 },

253 { 1, 
OP_FAIL
, -1 },

254 { 4, 
OP_FAIL
, -1 },

255 { 5, 
OP_PRUNE
, 
OP_PRUNE_ARG
 },

256 { 4, 
OP_SKIP
, 
OP_SKIP_ARG
 },

257 { 4, 
OP_THEN
, 
OP_THEN_ARG
 }

260 c⁄° 
	gvîbcou¡
 = (
vîbs
)/(
vîbôem
);

266 c⁄° 
p¸e_uch¨
 
	gsub_°¨t_of_w‹d
[] = {

267 
CHAR_BACKSLASH
, 
CHAR_b
, 
CHAR_LEFT_PARENTHESIS
, 
CHAR_QUESTION_MARK
,

268 
CHAR_EQUALS_SIGN
, 
CHAR_BACKSLASH
, 
CHAR_w
, 
CHAR_RIGHT_PARENTHESIS
, '\0' };

270 c⁄° 
p¸e_uch¨
 
	gsub_íd_of_w‹d
[] = {

271 
CHAR_BACKSLASH
, 
CHAR_b
, 
CHAR_LEFT_PARENTHESIS
, 
CHAR_QUESTION_MARK
,

272 
CHAR_LESS_THAN_SIGN
, 
CHAR_EQUALS_SIGN
, 
CHAR_BACKSLASH
, 
CHAR_w
,

273 
CHAR_RIGHT_PARENTHESIS
, '\0' };

283 c⁄° 
	gposix_«mes
[] =

284 
STRING_Æpha0
 
STRING_lowî0
 
STRING_uµî0
 
STRING_Ænum0


285 
STRING_ascii0
 
STRING_bœnk0
 
STRING_˙ål0
 
STRING_digô0


286 
STRING_gøph0
 
STRING_¥öt0
 
STRING_pun˘0
 
STRING_•a˚0


287 
STRING_w‹d0
 
STRING_xdigô
;

289 c⁄° 
p¸e_uöt8
 
	gposix_«me_Àngths
[] = {

292 
	#PC_GRAPH
 8

	)

293 
	#PC_PRINT
 9

	)

294 
	#PC_PUNCT
 10

	)

307 c⁄° 
	gposix_˛ass_m≠s
[] = {

308 
cbô_w‹d
, 
cbô_digô
, -2,

309 
cbô_lowî
, -1, 0,

310 
cbô_uµî
, -1, 0,

311 
cbô_w‹d
, -1, 2,

312 
cbô_¥öt
, 
cbô_˙ål
, 0,

313 
cbô_•a˚
, -1, 1,

314 
cbô_˙ål
, -1, 0,

315 
cbô_digô
, -1, 0,

316 
cbô_gøph
, -1, 0,

317 
cbô_¥öt
, -1, 0,

318 
cbô_pun˘
, -1, 0,

319 
cbô_•a˚
, -1, 0,

320 
cbô_w‹d
, -1, 0,

321 
cbô_xdigô
,-1, 0

327 #ifde‡
SUPPORT_UCP


328 c⁄° 
p¸e_uch¨
 
	g°rög_PNd
[] = {

329 
CHAR_BACKSLASH
, 
CHAR_P
, 
CHAR_LEFT_CURLY_BRACKET
,

330 
CHAR_N
, 
CHAR_d
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

331 c⁄° 
p¸e_uch¨
 
	g°rög_pNd
[] = {

332 
CHAR_BACKSLASH
, 
CHAR_p
, 
CHAR_LEFT_CURLY_BRACKET
,

333 
CHAR_N
, 
CHAR_d
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

334 c⁄° 
p¸e_uch¨
 
	g°rög_PX•
[] = {

335 
CHAR_BACKSLASH
, 
CHAR_P
, 
CHAR_LEFT_CURLY_BRACKET
,

336 
CHAR_X
, 
CHAR_s
, 
CHAR_p
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

337 c⁄° 
p¸e_uch¨
 
	g°rög_pX•
[] = {

338 
CHAR_BACKSLASH
, 
CHAR_p
, 
CHAR_LEFT_CURLY_BRACKET
,

339 
CHAR_X
, 
CHAR_s
, 
CHAR_p
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

340 c⁄° 
p¸e_uch¨
 
	g°rög_PXwd
[] = {

341 
CHAR_BACKSLASH
, 
CHAR_P
, 
CHAR_LEFT_CURLY_BRACKET
,

342 
CHAR_X
, 
CHAR_w
, 
CHAR_d
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

343 c⁄° 
p¸e_uch¨
 
	g°rög_pXwd
[] = {

344 
CHAR_BACKSLASH
, 
CHAR_p
, 
CHAR_LEFT_CURLY_BRACKET
,

345 
CHAR_X
, 
CHAR_w
, 
CHAR_d
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

347 c⁄° 
p¸e_uch¨
 *
	gsub°ôuãs
[] = {

348 
°rög_PNd
,

349 
°rög_pNd
,

350 
°rög_PX•
,

351 
°rög_pX•
,

352 
°rög_PXwd
,

353 
°rög_pXwd


362 c⁄° 
p¸e_uch¨
 
	g°rög_pL
[] = {

363 
CHAR_BACKSLASH
, 
CHAR_p
, 
CHAR_LEFT_CURLY_BRACKET
,

364 
CHAR_L
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

365 c⁄° 
p¸e_uch¨
 
	g°rög_pLl
[] = {

366 
CHAR_BACKSLASH
, 
CHAR_p
, 
CHAR_LEFT_CURLY_BRACKET
,

367 
CHAR_L
, 
CHAR_l
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

368 c⁄° 
p¸e_uch¨
 
	g°rög_pLu
[] = {

369 
CHAR_BACKSLASH
, 
CHAR_p
, 
CHAR_LEFT_CURLY_BRACKET
,

370 
CHAR_L
, 
CHAR_u
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

371 c⁄° 
p¸e_uch¨
 
	g°rög_pX™
[] = {

372 
CHAR_BACKSLASH
, 
CHAR_p
, 
CHAR_LEFT_CURLY_BRACKET
,

373 
CHAR_X
, 
CHAR_a
, 
CHAR_n
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

374 c⁄° 
p¸e_uch¨
 
	g°rög_h
[] = {

375 
CHAR_BACKSLASH
, 
CHAR_h
, '\0' };

376 c⁄° 
p¸e_uch¨
 
	g°rög_pXps
[] = {

377 
CHAR_BACKSLASH
, 
CHAR_p
, 
CHAR_LEFT_CURLY_BRACKET
,

378 
CHAR_X
, 
CHAR_p
, 
CHAR_s
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

379 c⁄° 
p¸e_uch¨
 
	g°rög_PL
[] = {

380 
CHAR_BACKSLASH
, 
CHAR_P
, 
CHAR_LEFT_CURLY_BRACKET
,

381 
CHAR_L
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

382 c⁄° 
p¸e_uch¨
 
	g°rög_PLl
[] = {

383 
CHAR_BACKSLASH
, 
CHAR_P
, 
CHAR_LEFT_CURLY_BRACKET
,

384 
CHAR_L
, 
CHAR_l
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

385 c⁄° 
p¸e_uch¨
 
	g°rög_PLu
[] = {

386 
CHAR_BACKSLASH
, 
CHAR_P
, 
CHAR_LEFT_CURLY_BRACKET
,

387 
CHAR_L
, 
CHAR_u
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

388 c⁄° 
p¸e_uch¨
 
	g°rög_PX™
[] = {

389 
CHAR_BACKSLASH
, 
CHAR_P
, 
CHAR_LEFT_CURLY_BRACKET
,

390 
CHAR_X
, 
CHAR_a
, 
CHAR_n
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

391 c⁄° 
p¸e_uch¨
 
	g°rög_H
[] = {

392 
CHAR_BACKSLASH
, 
CHAR_H
, '\0' };

393 c⁄° 
p¸e_uch¨
 
	g°rög_PXps
[] = {

394 
CHAR_BACKSLASH
, 
CHAR_P
, 
CHAR_LEFT_CURLY_BRACKET
,

395 
CHAR_X
, 
CHAR_p
, 
CHAR_s
, 
CHAR_RIGHT_CURLY_BRACKET
, '\0' };

397 c⁄° 
p¸e_uch¨
 *
	gposix_sub°ôuãs
[] = {

398 
°rög_pL
,

399 
°rög_pLl
,

400 
°rög_pLu
,

401 
°rög_pX™
,

402 
NULL
,

403 
°rög_h
,

404 
NULL
,

405 
°rög_pNd
,

406 
NULL
,

407 
NULL
,

408 
NULL
,

409 
°rög_pXps
,

410 
°rög_pXwd
,

411 
NULL
,

413 
°rög_PL
,

414 
°rög_PLl
,

415 
°rög_PLu
,

416 
°rög_PX™
,

417 
NULL
,

418 
°rög_H
,

419 
NULL
,

420 
°rög_PNd
,

421 
NULL
,

422 
NULL
,

423 
NULL
,

424 
°rög_PXps
,

425 
°rög_PXwd
,

426 
NULL


428 
	#POSIX_SUBSIZE
 ((
posix_sub°ôuãs
Ë/ (
p¸e_uch¨
 *))

	)

431 
	#STRING
(
a
Ë#a

	)

432 
	#XSTRING
(
s
Ë
	`STRING
(s)

	)

448 c⁄° 
	gîr‹_ãxts
[] =

506 "sub∑âî¿«mêi†toÿl⁄g (maximum " 
XSTRING
(
MAX_NAME_SIZE
) " characters)\0"

507 "toÿm™yÇamed sub∑âîn†(maximum " 
XSTRING
(
MAX_NAME_COUNT
) ")\0"

575 
	#IS_DIGIT
(
x
Ë((xË>
CHAR_0
 && (xË<
CHAR_9
)

	)

577 #i‚de‡
EBCDIC


582 c⁄° 
p¸e_uöt8
 
	gdigôab
[] =

621 c⁄° 
p¸e_uöt8
 
	gdigôab
[] =

656 c⁄° 
p¸e_uöt8
 
	gebcdic_ch¨èb
[] = {

705 
	#APTROWS
 (
LAST_AUTOTAB_LEFT_OP
 - 
FIRST_AUTOTAB_OP
 + 1)

	)

706 
	#APTCOLS
 (
LAST_AUTOTAB_RIGHT_OP
 - 
FIRST_AUTOTAB_OP
 + 1)

	)

708 c⁄° 
p¸e_uöt8
 
	gaut›os°ab
[
APTROWS
][
APTCOLS
] = {

760 c⁄° 
p¸e_uöt8
 
	g¥›pos°ab
[
PT_TABSIZE
][PT_TABSIZE] = {

782 c⁄° 
p¸e_uöt8
 
	gˇços°ab
[7][30] = {

804 c⁄° 
p¸e_uöt8
 
	gpos•r›°ab
[3][4] = {

805 { 
u˝_L
, 
u˝_N
, u˝_N, 
u˝_Nl
 },

806 { 
u˝_Z
, u˝_Z, 
u˝_C
, 
u˝_Cc
 },

807 { 
u˝_L
, 
u˝_N
, 
u˝_P
, 
u˝_Po
 }

816 c⁄° 
p¸e_uöt8
 
	g›code_pos£ssify
[] = {

821 
OP_POSSTAR
, 0,

822 
OP_POSPLUS
, 0,

823 
OP_POSQUERY
, 0,

824 
OP_POSUPTO
, 0,

828 
OP_POSSTARI
, 0,

829 
OP_POSPLUSI
, 0,

830 
OP_POSQUERYI
, 0,

831 
OP_POSUPTOI
, 0,

835 
OP_NOTPOSSTAR
, 0,

836 
OP_NOTPOSPLUS
, 0,

837 
OP_NOTPOSQUERY
, 0,

838 
OP_NOTPOSUPTO
, 0,

842 
OP_NOTPOSSTARI
, 0,

843 
OP_NOTPOSPLUSI
, 0,

844 
OP_NOTPOSQUERYI
, 0,

845 
OP_NOTPOSUPTOI
, 0,

849 
OP_TYPEPOSSTAR
, 0,

850 
OP_TYPEPOSPLUS
, 0,

851 
OP_TYPEPOSQUERY
, 0,

852 
OP_TYPEPOSUPTO
, 0,

856 
OP_CRPOSSTAR
, 0,

857 
OP_CRPOSPLUS
, 0,

858 
OP_CRPOSQUERY
, 0,

859 
OP_CRPOSRANGE
, 0,

884 
	$föd_îr‹_ãxt
(
n
)

886 c⁄° *
s
 = 
îr‹_ãxts
;

887 ; 
n
 > 0;Ç--)

889 *
s
++ !
CHAR_NULL
) {};

890 i‡(*
s
 =
CHAR_NULL
)  "ErrorÅextÇot found (pleaseÑeport)";

892  
s
;

893 
	}
}

911 
	$ex∑nd_w‹k•a˚
(
compûe_d©a
 *
cd
)

913 
p¸e_uch¨
 *
√w•a˚
;

914 
√wsize
 = 
cd
->
w‹k•a˚_size
 * 2;

916 i‡(
√wsize
 > 
COMPILE_WORK_SIZE_MAX
)Çewsize = COMPILE_WORK_SIZE_MAX;

917 i‡(
cd
->
w‹k•a˚_size
 >
COMPILE_WORK_SIZE_MAX
 ||

918 
√wsize
 - 
cd
->
w‹k•a˚_size
 < 
WORK_SIZE_SAFETY_MARGIN
)

919  
ERR72
;

921 
√w•a˚
 = (
	`PUBL
(
mÆloc
))(
	`IN_UCHARS
(
√wsize
));

922 i‡(
√w•a˚
 =
NULL
Ë 
ERR21
;

923 
	`mem˝y
(
√w•a˚
, 
cd
->
°¨t_w‹k•a˚
, cd->
w‹k•a˚_size
 * (
p¸e_uch¨
));

924 
cd
->
hwm
 = (
p¸e_uch¨
 *)
√w•a˚
 + (cd->hwm - cd->
°¨t_w‹k•a˚
);

925 i‡(
cd
->
w‹k•a˚_size
 > 
COMPILE_WORK_SIZE
)

926 (
	`PUBL
(
‰ì
))((*)
cd
->
°¨t_w‹k•a˚
);

927 
cd
->
°¨t_w‹k•a˚
 = 
√w•a˚
;

928 
cd
->
w‹k•a˚_size
 = 
√wsize
;

930 
	}
}

949 
BOOL


950 
	$is_cou¡ed_ª≥©
(c⁄° 
p¸e_uch¨
 *
p
)

952 i‡(!
	`IS_DIGIT
(*
p
)Ë 
FALSE
;

953 
p
++;

954 
	`IS_DIGIT
(*
p
))Ö++;

955 i‡(*
p
 =
CHAR_RIGHT_CURLY_BRACKET
Ë 
TRUE
;

957 i‡(*
p
++ !
CHAR_COMMA
Ë 
FALSE
;

958 i‡(*
p
 =
CHAR_RIGHT_CURLY_BRACKET
Ë 
TRUE
;

960 i‡(!
	`IS_DIGIT
(*
p
)Ë 
FALSE
;

961 
p
++;

962 
	`IS_DIGIT
(*
p
))Ö++;

964  (*
p
 =
CHAR_RIGHT_CURLY_BRACKET
);

965 
	}
}

995 
	$check_esˇ≥
(c⁄° 
p¸e_uch¨
 **
±Ωå
, 
p¸e_uöt32
 *
ch±r
, *
îr‹codïå
,

996 
bøcou¡
, 
›ti⁄s
, 
BOOL
 
is˛ass
)

999 
BOOL
 
utf
 = (
›ti⁄s
 & 
PCRE_UTF8
) != 0;

1000 c⁄° 
p¸e_uch¨
 *
±r
 = *
±Ωå
 + 1;

1001 
p¸e_uöt32
 
c
;

1002 
esˇ≥
 = 0;

1003 
i
;

1005 
	`GETCHARINCTEST
(
c
, 
±r
);

1006 
±r
--;

1010 i‡(
c
 =
CHAR_NULL
Ë*
îr‹codïå
 = 
ERR1
;

1016 #i‚de‡
EBCDIC


1018 i‡(
c
 < 
CHAR_0
 || c > 
CHAR_z
) {}

1019 i‡((
i
 = 
esˇ≥s
[
c
 - 
CHAR_0
]) != 0)

1020 { i‡(
i
 > 0Ë
c
 = (
p¸e_uöt32
)i; 
esˇ≥
 = -i; }

1024 i‡(
c
 < 
CHAR_a
 || (!
	`MAX_255
(cË|| (
ebcdic_ch¨èb
[c] & 0x0E) == 0)) {}

1025 i‡((
i
 = 
esˇ≥s
[
c
 - 0x48]Ë!0Ë{ i‡(ò> 0Ë¯(
p¸e_uöt32
)i; 
esˇ≥
 = -i; }

1032 c⁄° 
p¸e_uch¨
 *
ﬁd±r
;

1033 
BOOL
 
bø˚d
, 
√g©ed
, 
ovîÊow
;

1034 
s
;

1036 
c
)

1041 
CHAR_l
:

1042 
CHAR_L
:

1043 *
îr‹codïå
 = 
ERR37
;

1046 
CHAR_u
:

1047 i‡((
›ti⁄s
 & 
PCRE_JAVASCRIPT_COMPAT
) != 0)

1051 i‡(
	`MAX_255
(
±r
[1]Ë&& (
digôab
[±r[1]] & 
˘y≥_xdigô
) != 0

1052 && 
	`MAX_255
(
±r
[2]Ë&& (
digôab
[±r[2]] & 
˘y≥_xdigô
) != 0

1053 && 
	`MAX_255
(
±r
[3]Ë&& (
digôab
[±r[3]] & 
˘y≥_xdigô
) != 0

1054 && 
	`MAX_255
(
±r
[4]Ë&& (
digôab
[±r[4]] & 
˘y≥_xdigô
) != 0)

1056 
c
 = 0;

1057 
i
 = 0; i < 4; ++i)

1059 
p¸e_uöt32
 
cc
 = *(++
±r
);

1060 #i‚de‡
EBCDIC


1061 i‡(
cc
 >
CHAR_a
) cc -= 32;

1062 
c
 = (¯<< 4Ë+ 
cc
 - ((c¯< 
CHAR_A
)? 
CHAR_0
 : (CHAR_A - 10));

1064 i‡(
cc
 >
CHAR_a
 && c¯<
CHAR_z
) cc += 64;

1065 
c
 = (¯<< 4Ë+ 
cc
 - ((c¯>
CHAR_0
)? CHAR_0 : (
CHAR_A
 - 10));

1069 #i‡
deföed
 
COMPILE_PCRE8


1070 i‡(
c
 > (
utf
 ? 0x10ffffU : 0xffU))

1071 #ñi‡
deföed
 
COMPILE_PCRE16


1072 i‡(
c
 > (
utf
 ? 0x10ffffU : 0xffffU))

1073 #ñi‡
deföed
 
COMPILE_PCRE32


1074 i‡(
utf
 && 
c
 > 0x10ffffU)

1077 *
îr‹codïå
 = 
ERR76
;

1079 i‡(
utf
 && 
c
 >0xd800 && c <0xdfffË*
îr‹codïå
 = 
ERR73
;

1083 *
îr‹codïå
 = 
ERR37
;

1086 
CHAR_U
:

1088 i‡((
›ti⁄s
 & 
PCRE_JAVASCRIPT_COMPAT
Ë=0Ë*
îr‹codïå
 = 
ERR37
;

1108 
CHAR_g
:

1109 i‡(
is˛ass
) ;

1110 i‡(
±r
[1] =
CHAR_LESS_THAN_SIGN
 ||Öå[1] =
CHAR_APOSTROPHE
)

1112 
esˇ≥
 = 
ESC_g
;

1118 i‡(
±r
[1] =
CHAR_LEFT_CURLY_BRACKET
)

1120 c⁄° 
p¸e_uch¨
 *
p
;

1121 
p
 = 
±r
+2; *∞!
CHAR_NULL
 && *∞!
CHAR_RIGHT_CURLY_BRACKET
;Ö++)

1122 i‡(*
p
 !
CHAR_MINUS
 && !
	`IS_DIGIT
(*p)) ;

1123 i‡(*
p
 !
CHAR_NULL
 && *∞!
CHAR_RIGHT_CURLY_BRACKET
)

1125 
esˇ≥
 = 
ESC_k
;

1128 
bø˚d
 = 
TRUE
;

1129 
±r
++;

1131 
bø˚d
 = 
FALSE
;

1133 i‡(
±r
[1] =
CHAR_MINUS
)

1135 
√g©ed
 = 
TRUE
;

1136 
±r
++;

1138 
√g©ed
 = 
FALSE
;

1141 
s
 = 0;

1142 
ovîÊow
 = 
FALSE
;

1143 
	`IS_DIGIT
(
±r
[1]))

1145 i‡(
s
 > 
INT_MAX
 / 10 - 1)

1147 
ovîÊow
 = 
TRUE
;

1150 
s
 = s * 10 + ()(*(++
±r
Ë- 
CHAR_0
);

1152 i‡(
ovîÊow
)

1154 
	`IS_DIGIT
(
±r
[1]))

1155 
±r
++;

1156 *
îr‹codïå
 = 
ERR61
;

1160 i‡(
bø˚d
 && *(++
±r
Ë!
CHAR_RIGHT_CURLY_BRACKET
)

1162 *
îr‹codïå
 = 
ERR57
;

1166 i‡(
s
 == 0)

1168 *
îr‹codïå
 = 
ERR58
;

1172 i‡(
√g©ed
)

1174 i‡(
s
 > 
bøcou¡
)

1176 *
îr‹codïå
 = 
ERR15
;

1179 
s
 = 
bøcou¡
 - (s - 1);

1182 
esˇ≥
 = -
s
;

1201 
CHAR_1
: 
CHAR_2
: 
CHAR_3
: 
CHAR_4
: 
CHAR_5
:

1202 
CHAR_6
: 
CHAR_7
: 
CHAR_8
: 
CHAR_9
:

1204 i‡(!
is˛ass
)

1206 
ﬁd±r
 = 
±r
;

1208 
s
 = ()(
c
 -
CHAR_0
);

1209 
ovîÊow
 = 
FALSE
;

1210 
	`IS_DIGIT
(
±r
[1]))

1212 i‡(
s
 > 
INT_MAX
 / 10 - 1)

1214 
ovîÊow
 = 
TRUE
;

1217 
s
 = s * 10 + ()(*(++
±r
Ë- 
CHAR_0
);

1219 i‡(
ovîÊow
)

1221 
	`IS_DIGIT
(
±r
[1]))

1222 
±r
++;

1223 *
îr‹codïå
 = 
ERR61
;

1226 i‡(
s
 < 8 || s <
bøcou¡
)

1228 
esˇ≥
 = -
s
;

1231 
±r
 = 
ﬁd±r
;

1239 i‡((
c
 = *
±r
Ë>
CHAR_8
) ;

1249 
CHAR_0
:

1250 
c
 -
CHAR_0
;

1251 
i
++ < 2 && 
±r
[1] >
CHAR_0
 &&Öå[1] <
CHAR_7
)

1252 
c
 = c * 8 + *(++
±r
Ë- 
CHAR_0
;

1253 #ifde‡
COMPILE_PCRE8


1254 i‡(!
utf
 && 
c
 > 0xffË*
îr‹codïå
 = 
ERR51
;

1261 
CHAR_o
:

1262 i‡(
±r
[1] !
CHAR_LEFT_CURLY_BRACKET
Ë*
îr‹codïå
 = 
ERR81
; 

1263 i‡(
±r
[2] =
CHAR_RIGHT_CURLY_BRACKET
Ë*
îr‹codïå
 = 
ERR86
; 

1265 
±r
 += 2;

1266 
c
 = 0;

1267 
ovîÊow
 = 
FALSE
;

1268 *
±r
 >
CHAR_0
 && *±∏<
CHAR_7
)

1270 
p¸e_uöt32
 
cc
 = *
±r
++;

1271 i‡(
c
 =0 && 
cc
 =
CHAR_0
) ;

1272 #ifde‡
COMPILE_PCRE32


1273 i‡(
c
 >0x20000000lË{ 
ovîÊow
 = 
TRUE
; ; }

1275 
c
 = (¯<< 3Ë+ 
cc
 - 
CHAR_0
 ;

1276 #i‡
deföed
 
COMPILE_PCRE8


1277 i‡(
c
 > (
utf
 ? 0x10ffffU : 0xffU)Ë{ 
ovîÊow
 = 
TRUE
; ; }

1278 #ñi‡
deföed
 
COMPILE_PCRE16


1279 i‡(
c
 > (
utf
 ? 0x10ffffU : 0xffffU)Ë{ 
ovîÊow
 = 
TRUE
; ; }

1280 #ñi‡
deföed
 
COMPILE_PCRE32


1281 i‡(
utf
 && 
c
 > 0x10ffffUË{ 
ovîÊow
 = 
TRUE
; ; }

1284 i‡(
ovîÊow
)

1286 *
±r
 >
CHAR_0
 && *±∏<
CHAR_7
)Ötr++;

1287 *
îr‹codïå
 = 
ERR34
;

1289 i‡(*
±r
 =
CHAR_RIGHT_CURLY_BRACKET
)

1291 i‡(
utf
 && 
c
 >0xd800 && c <0xdfffË*
îr‹codïå
 = 
ERR73
;

1293 *
îr‹codïå
 = 
ERR80
;

1300 
CHAR_x
:

1301 i‡((
›ti⁄s
 & 
PCRE_JAVASCRIPT_COMPAT
) != 0)

1303 i‡(
	`MAX_255
(
±r
[1]Ë&& (
digôab
[±r[1]] & 
˘y≥_xdigô
) != 0

1304 && 
	`MAX_255
(
±r
[2]Ë&& (
digôab
[±r[2]] & 
˘y≥_xdigô
) != 0)

1306 
c
 = 0;

1307 
i
 = 0; i < 2; ++i)

1309 
p¸e_uöt32
 
cc
 = *(++
±r
);

1310 #i‚de‡
EBCDIC


1311 i‡(
cc
 >
CHAR_a
) cc -= 32;

1312 
c
 = (¯<< 4Ë+ 
cc
 - ((c¯< 
CHAR_A
)? 
CHAR_0
 : (CHAR_A - 10));

1314 i‡(
cc
 >
CHAR_a
 && c¯<
CHAR_z
) cc += 64;

1315 
c
 = (¯<< 4Ë+ 
cc
 - ((c¯>
CHAR_0
)? CHAR_0 : (
CHAR_A
 - 10));

1330 i‡(
±r
[1] =
CHAR_LEFT_CURLY_BRACKET
)

1332 
±r
 += 2;

1333 i‡(*
±r
 =
CHAR_RIGHT_CURLY_BRACKET
)

1335 *
îr‹codïå
 = 
ERR86
;

1338 
c
 = 0;

1339 
ovîÊow
 = 
FALSE
;

1340 
	`MAX_255
(*
±r
Ë&& (
digôab
[*±r] & 
˘y≥_xdigô
) != 0)

1342 
p¸e_uöt32
 
cc
 = *
±r
++;

1343 i‡(
c
 =0 && 
cc
 =
CHAR_0
) ;

1345 #ifde‡
COMPILE_PCRE32


1346 i‡(
c
 >0x10000000lË{ 
ovîÊow
 = 
TRUE
; ; }

1349 #i‚de‡
EBCDIC


1350 i‡(
cc
 >
CHAR_a
) cc -= 32;

1351 
c
 = (¯<< 4Ë+ 
cc
 - ((c¯< 
CHAR_A
)? 
CHAR_0
 : (CHAR_A - 10));

1353 i‡(
cc
 >
CHAR_a
 && c¯<
CHAR_z
) cc += 64;

1354 
c
 = (¯<< 4Ë+ 
cc
 - ((c¯>
CHAR_0
)? CHAR_0 : (
CHAR_A
 - 10));

1357 #i‡
deföed
 
COMPILE_PCRE8


1358 i‡(
c
 > (
utf
 ? 0x10ffffU : 0xffU)Ë{ 
ovîÊow
 = 
TRUE
; ; }

1359 #ñi‡
deföed
 
COMPILE_PCRE16


1360 i‡(
c
 > (
utf
 ? 0x10ffffU : 0xffffU)Ë{ 
ovîÊow
 = 
TRUE
; ; }

1361 #ñi‡
deföed
 
COMPILE_PCRE32


1362 i‡(
utf
 && 
c
 > 0x10ffffUË{ 
ovîÊow
 = 
TRUE
; ; }

1366 i‡(
ovîÊow
)

1368 
	`MAX_255
(*
±r
Ë&& (
digôab
[*±r] & 
˘y≥_xdigô
) != 0)Ötr++;

1369 *
îr‹codïå
 = 
ERR34
;

1372 i‡(*
±r
 =
CHAR_RIGHT_CURLY_BRACKET
)

1374 i‡(
utf
 && 
c
 >0xd800 && c <0xdfffË*
îr‹codïå
 = 
ERR73
;

1382 *
îr‹codïå
 = 
ERR79
;

1389 
c
 = 0;

1390 
i
++ < 2 && 
	`MAX_255
(
±r
[1]Ë&& (
digôab
[±r[1]] & 
˘y≥_xdigô
) != 0)

1392 
p¸e_uöt32
 
cc
;

1393 
cc
 = *(++
±r
);

1394 #i‚de‡
EBCDIC


1395 i‡(
cc
 >
CHAR_a
) cc -= 32;

1396 
c
 = c * 16 + 
cc
 - ((c¯< 
CHAR_A
)? 
CHAR_0
 : (CHAR_A - 10));

1398 i‡(
cc
 <
CHAR_z
) cc += 64;

1399 
c
 = c * 16 + 
cc
 - ((c¯>
CHAR_0
)? CHAR_0 : (
CHAR_A
 - 10));

1411 
CHAR_c
:

1412 
c
 = *(++
±r
);

1413 i‡(
c
 =
CHAR_NULL
)

1415 *
îr‹codïå
 = 
ERR2
;

1418 #i‚de‡
EBCDIC


1419 i‡(
c
 > 127)

1421 *
îr‹codïå
 = 
ERR68
;

1424 i‡(
c
 >
CHAR_a
 && c <
CHAR_z
) c -= 32;

1425 
c
 ^= 0x40;

1427 i‡(
c
 >
CHAR_a
 && c <
CHAR_z
) c += 64;

1428 
c
 ^= 0xC0;

1439 i‡((
›ti⁄s
 & 
PCRE_EXTRA
Ë!0Ë
c
)

1442 *
îr‹codïå
 = 
ERR3
;

1453 i‡(
esˇ≥
 =
ESC_N
 && 
±r
[1] =
CHAR_LEFT_CURLY_BRACKET
 &&

1454 !
	`is_cou¡ed_ª≥©
(
±r
+2))

1455 *
îr‹codïå
 = 
ERR37
;

1459 i‡((
›ti⁄s
 & 
PCRE_UCP
Ë!0 && 
esˇ≥
 >
ESC_D
 &&Ésˇ≥ <
ESC_w
)

1460 
esˇ≥
 +(
ESC_DU
 - 
ESC_D
);

1464 *
±Ωå
 = 
±r
;

1465 *
ch±r
 = 
c
;

1466  
esˇ≥
;

1467 
	}
}

1471 #ifde‡
SUPPORT_UCP


1491 
BOOL


1492 
	$gë_u˝
(c⁄° 
p¸e_uch¨
 **
±Ωå
, 
BOOL
 *
√g±r
, *
±y≥±r
,

1493 *
pd©≠å
, *
îr‹codïå
)

1495 
p¸e_uch¨
 
c
;

1496 
i
, 
bŸ
, 
t›
;

1497 c⁄° 
p¸e_uch¨
 *
±r
 = *
±Ωå
;

1498 
p¸e_uch¨
 
«me
[32];

1500 
c
 = *(++
±r
);

1501 i‡(
c
 =
CHAR_NULL
Ë
ERROR_RETURN
;

1503 *
√g±r
 = 
FALSE
;

1508 i‡(
c
 =
CHAR_LEFT_CURLY_BRACKET
)

1510 i‡(
±r
[1] =
CHAR_CIRCUMFLEX_ACCENT
)

1512 *
√g±r
 = 
TRUE
;

1513 
±r
++;

1515 
i
 = 0; i < ()((
«me
Ë/ (
p¸e_uch¨
)) - 1; i++)

1517 
c
 = *(++
±r
);

1518 i‡(
c
 =
CHAR_NULL
Ë
ERROR_RETURN
;

1519 i‡(
c
 =
CHAR_RIGHT_CURLY_BRACKET
) ;

1520 
«me
[
i
] = 
c
;

1522 i‡(
c
 !
CHAR_RIGHT_CURLY_BRACKET
Ë
ERROR_RETURN
;

1523 
«me
[
i
] = 0;

1530 
«me
[0] = 
c
;

1531 
«me
[1] = 0;

1534 *
±Ωå
 = 
±r
;

1538 
bŸ
 = 0;

1539 
t›
 = 
	`PRIV
(
uâ_size
);

1541 
bŸ
 < 
t›
)

1543 
r
;

1544 
i
 = (
bŸ
 + 
t›
) >> 1;

1545 
r
 = 
	`STRCMP_UC_C8
(
«me
, 
	`PRIV
(
uâ_«mes
Ë+ PRIV(
uâ
)[
i
].
«me_off£t
);

1546 i‡(
r
 == 0)

1548 *
±y≥±r
 = 
	`PRIV
(
uâ
)[
i
].
ty≥
;

1549 *
pd©≠å
 = 
	`PRIV
(
uâ
)[
i
].
vÆue
;

1550  
TRUE
;

1552 i‡(
r
 > 0Ë
bŸ
 = 
i
 + 1; 
t›
 = i;

1555 *
îr‹codïå
 = 
ERR47
;

1556 *
±Ωå
 = 
±r
;

1557  
FALSE
;

1559 
ERROR_RETURN
:

1560 *
îr‹codïå
 = 
ERR46
;

1561 *
±Ωå
 = 
±r
;

1562  
FALSE
;

1563 
	}
}

1587 c⁄° 
p¸e_uch¨
 *

1588 
	$ªad_ª≥©_cou¡s
(c⁄° 
p¸e_uch¨
 *
p
, *
möp
, *
maxp
, *
îr‹codïå
)

1590 
mö
 = 0;

1591 
max
 = -1;

1593 
	`IS_DIGIT
(*
p
))

1595 
mö
 = mö * 10 + ()(*
p
++ - 
CHAR_0
);

1596 i‡(
mö
 > 65535)

1598 *
îr‹codïå
 = 
ERR5
;

1599  
p
;

1603 i‡(*
p
 =
CHAR_RIGHT_CURLY_BRACKET
Ë
max
 = 
mö
; 

1605 i‡(*(++
p
Ë!
CHAR_RIGHT_CURLY_BRACKET
)

1607 
max
 = 0;

1608 
	`IS_DIGIT
(*
p
))

1610 
max
 = max * 10 + ()(*
p
++ - 
CHAR_0
);

1611 i‡(
max
 > 65535)

1613 *
îr‹codïå
 = 
ERR5
;

1614  
p
;

1617 i‡(
max
 < 
mö
)

1619 *
îr‹codïå
 = 
ERR4
;

1620  
p
;

1625 *
möp
 = 
mö
;

1626 *
maxp
 = 
max
;

1627  
p
;

1628 
	}
}

1649 c⁄° 
p¸e_uch¨
*

1650 
	$fú°_signifiˇ¡_code
(c⁄° 
p¸e_uch¨
 *
code
, 
BOOL
 
skùas£π
)

1654 ()*
code
)

1656 
OP_ASSERT_NOT
:

1657 
OP_ASSERTBACK
:

1658 
OP_ASSERTBACK_NOT
:

1659 i‡(!
skùas£π
Ë 
code
;

1660 dÿ
code
 +
	`GET
(code, 1); *codê=
OP_ALT
);

1661 
code
 +
	`PRIV
(
OP_Àngths
)[*code];

1664 
OP_WORD_BOUNDARY
:

1665 
OP_NOT_WORD_BOUNDARY
:

1666 i‡(!
skùas£π
Ë 
code
;

1669 
OP_CALLOUT
:

1670 
OP_CREF
:

1671 
OP_DNCREF
:

1672 
OP_RREF
:

1673 
OP_DNRREF
:

1674 
OP_DEF
:

1675 
code
 +
	`PRIV
(
OP_Àngths
)[*code];

1679  
code
;

1683 
	}
}

1717 
	$föd_fixedÀngth
(
p¸e_uch¨
 *
code
, 
BOOL
 
utf
, BOOL 
©íd
, 
compûe_d©a
 *
cd
,

1718 
ªcur£_check
 *
ªcur£s
)

1720 
Àngth
 = -1;

1721 
ªcur£_check
 
this_ªcur£
;

1722 
bønchÀngth
 = 0;

1723 
p¸e_uch¨
 *
cc
 = 
code
 + 1 + 
LINK_SIZE
;

1730 
d
;

1731 
p¸e_uch¨
 *
˚
, *
cs
;

1732 
p¸e_uch¨
 
›
 = *
cc
;

1734 
›
)

1741 
OP_CBRA
:

1742 
OP_BRA
:

1743 
OP_ONCE
:

1744 
OP_ONCE_NC
:

1745 
OP_COND
:

1746 
d
 = 
	`föd_fixedÀngth
(
cc
 + ((
›
 =
OP_CBRA
)? 
IMM2_SIZE
 : 0), 
utf
, 
©íd
, 
cd
,

1747 
ªcur£s
);

1748 i‡(
d
 < 0)  d;

1749 
bønchÀngth
 +
d
;

1750 dÿ
cc
 +
	`GET
(cc, 1); *c¯=
OP_ALT
);

1751 
cc
 +1 + 
LINK_SIZE
;

1760 
OP_ALT
:

1761 
OP_KET
:

1762 
OP_END
:

1763 
OP_ACCEPT
:

1764 
OP_ASSERT_ACCEPT
:

1765 i‡(
Àngth
 < 0ËÀngth = 
bønchÀngth
;

1766 i‡(
Àngth
 !
bønchÀngth
)  -1;

1767 i‡(*
cc
 !
OP_ALT
Ë 
Àngth
;

1768 
cc
 +1 + 
LINK_SIZE
;

1769 
bønchÀngth
 = 0;

1776 
OP_RECURSE
:

1777 i‡(!
©íd
)  -3;

1778 
cs
 = 
˚
 = (
p¸e_uch¨
 *)
cd
->
°¨t_code
 + 
	`GET
(
cc
, 1);

1779 dÿ
˚
 +
	`GET
(˚, 1); *˚ =
OP_ALT
);

1780 i‡(
cc
 > 
cs
 && c¯< 
˚
)  -1;

1783 
ªcur£_check
 *
r
 = 
ªcur£s
;

1784 
r
 = 
ªcur£s
;Ñ !
NULL
;Ñ =Ñ->
¥ev
Ëi‡‘->
group
 =
cs
) ;

1785 i‡(
r
 !
NULL
)  -1;

1787 
this_ªcur£
.
¥ev
 = 
ªcur£s
;

1788 
this_ªcur£
.
group
 = 
cs
;

1789 
d
 = 
	`föd_fixedÀngth
(
cs
 + 
IMM2_SIZE
, 
utf
, 
©íd
, 
cd
, &
this_ªcur£
);

1790 i‡(
d
 < 0)  d;

1791 
bønchÀngth
 +
d
;

1792 
cc
 +1 + 
LINK_SIZE
;

1797 
OP_ASSERT
:

1798 
OP_ASSERT_NOT
:

1799 
OP_ASSERTBACK
:

1800 
OP_ASSERTBACK_NOT
:

1801 dÿ
cc
 +
	`GET
(cc, 1); *c¯=
OP_ALT
);

1802 
cc
 +
	`PRIV
(
OP_Àngths
)[*cc];

1807 
OP_MARK
:

1808 
OP_PRUNE_ARG
:

1809 
OP_SKIP_ARG
:

1810 
OP_THEN_ARG
:

1811 
cc
 +cc[1] + 
	`PRIV
(
OP_Àngths
)[*cc];

1814 
OP_CALLOUT
:

1815 
OP_CIRC
:

1816 
OP_CIRCM
:

1817 
OP_CLOSE
:

1818 
OP_COMMIT
:

1819 
OP_CREF
:

1820 
OP_DEF
:

1821 
OP_DNCREF
:

1822 
OP_DNRREF
:

1823 
OP_DOLL
:

1824 
OP_DOLLM
:

1825 
OP_EOD
:

1826 
OP_EODN
:

1827 
OP_FAIL
:

1828 
OP_NOT_WORD_BOUNDARY
:

1829 
OP_PRUNE
:

1830 
OP_REVERSE
:

1831 
OP_RREF
:

1832 
OP_SET_SOM
:

1833 
OP_SKIP
:

1834 
OP_SOD
:

1835 
OP_SOM
:

1836 
OP_THEN
:

1837 
OP_WORD_BOUNDARY
:

1838 
cc
 +
	`PRIV
(
OP_Àngths
)[*cc];

1843 
OP_CHAR
:

1844 
OP_CHARI
:

1845 
OP_NOT
:

1846 
OP_NOTI
:

1847 
bønchÀngth
++;

1848 
cc
 += 2;

1849 #ifde‡
SUPPORT_UTF


1850 i‡(
utf
 && 
	`HAS_EXTRALEN
(
cc
[-1])Ëc¯+
	`GET_EXTRALEN
(cc[-1]);

1857 
OP_EXACT
:

1858 
OP_EXACTI
:

1859 
OP_NOTEXACT
:

1860 
OP_NOTEXACTI
:

1861 
bønchÀngth
 +()
	`GET2
(
cc
,1);

1862 
cc
 +2 + 
IMM2_SIZE
;

1863 #ifde‡
SUPPORT_UTF


1864 i‡(
utf
 && 
	`HAS_EXTRALEN
(
cc
[-1])Ëc¯+
	`GET_EXTRALEN
(cc[-1]);

1868 
OP_TYPEEXACT
:

1869 
bønchÀngth
 +
	`GET2
(
cc
,1);

1870 i‡(
cc
[1 + 
IMM2_SIZE
] =
OP_PROP
 || cc[1 + IMM2_SIZE] =
OP_NOTPROP
)

1871 
cc
 += 2;

1872 
cc
 +1 + 
IMM2_SIZE
 + 1;

1877 
OP_PROP
:

1878 
OP_NOTPROP
:

1879 
cc
 += 2;

1882 
OP_HSPACE
:

1883 
OP_VSPACE
:

1884 
OP_NOT_HSPACE
:

1885 
OP_NOT_VSPACE
:

1886 
OP_NOT_DIGIT
:

1887 
OP_DIGIT
:

1888 
OP_NOT_WHITESPACE
:

1889 
OP_WHITESPACE
:

1890 
OP_NOT_WORDCHAR
:

1891 
OP_WORDCHAR
:

1892 
OP_ANY
:

1893 
OP_ALLANY
:

1894 
bønchÀngth
++;

1895 
cc
++;

1901 
OP_ANYBYTE
:

1906 
OP_CLASS
:

1907 
OP_NCLASS
:

1908 #i‡
deföed
 
SUPPORT_UTF
 || deföed 
COMPILE_PCRE16
 || deföed 
COMPILE_PCRE32


1909 
OP_XCLASS
:

1912 i‡(
›
 =
OP_XCLASS
)

1913 
cc
 +
	`GET
(cc, 1);

1915 
cc
 +
	`PRIV
(
OP_Àngths
)[
OP_CLASS
];

1917 
cc
 +
	`PRIV
(
OP_Àngths
)[
OP_CLASS
];

1920 *
cc
)

1922 
OP_CRSTAR
:

1923 
OP_CRMINSTAR
:

1924 
OP_CRPLUS
:

1925 
OP_CRMINPLUS
:

1926 
OP_CRQUERY
:

1927 
OP_CRMINQUERY
:

1928 
OP_CRPOSSTAR
:

1929 
OP_CRPOSPLUS
:

1930 
OP_CRPOSQUERY
:

1933 
OP_CRRANGE
:

1934 
OP_CRMINRANGE
:

1935 
OP_CRPOSRANGE
:

1936 i‡(
	`GET2
(
cc
,1Ë!GET2(cc,1+
IMM2_SIZE
))  -1;

1937 
bønchÀngth
 +()
	`GET2
(
cc
,1);

1938 
cc
 +1 + 2 * 
IMM2_SIZE
;

1942 
bønchÀngth
++;

1948 
OP_ANYNL
:

1949 
OP_BRAMINZERO
:

1950 
OP_BRAPOS
:

1951 
OP_BRAPOSZERO
:

1952 
OP_BRAZERO
:

1953 
OP_CBRAPOS
:

1954 
OP_EXTUNI
:

1955 
OP_KETRMAX
:

1956 
OP_KETRMIN
:

1957 
OP_KETRPOS
:

1958 
OP_MINPLUS
:

1959 
OP_MINPLUSI
:

1960 
OP_MINQUERY
:

1961 
OP_MINQUERYI
:

1962 
OP_MINSTAR
:

1963 
OP_MINSTARI
:

1964 
OP_MINUPTO
:

1965 
OP_MINUPTOI
:

1966 
OP_NOTMINPLUS
:

1967 
OP_NOTMINPLUSI
:

1968 
OP_NOTMINQUERY
:

1969 
OP_NOTMINQUERYI
:

1970 
OP_NOTMINSTAR
:

1971 
OP_NOTMINSTARI
:

1972 
OP_NOTMINUPTO
:

1973 
OP_NOTMINUPTOI
:

1974 
OP_NOTPLUS
:

1975 
OP_NOTPLUSI
:

1976 
OP_NOTPOSPLUS
:

1977 
OP_NOTPOSPLUSI
:

1978 
OP_NOTPOSQUERY
:

1979 
OP_NOTPOSQUERYI
:

1980 
OP_NOTPOSSTAR
:

1981 
OP_NOTPOSSTARI
:

1982 
OP_NOTPOSUPTO
:

1983 
OP_NOTPOSUPTOI
:

1984 
OP_NOTQUERY
:

1985 
OP_NOTQUERYI
:

1986 
OP_NOTSTAR
:

1987 
OP_NOTSTARI
:

1988 
OP_NOTUPTO
:

1989 
OP_NOTUPTOI
:

1990 
OP_PLUS
:

1991 
OP_PLUSI
:

1992 
OP_POSPLUS
:

1993 
OP_POSPLUSI
:

1994 
OP_POSQUERY
:

1995 
OP_POSQUERYI
:

1996 
OP_POSSTAR
:

1997 
OP_POSSTARI
:

1998 
OP_POSUPTO
:

1999 
OP_POSUPTOI
:

2000 
OP_QUERY
:

2001 
OP_QUERYI
:

2002 
OP_REF
:

2003 
OP_REFI
:

2004 
OP_DNREF
:

2005 
OP_DNREFI
:

2006 
OP_SBRA
:

2007 
OP_SBRAPOS
:

2008 
OP_SCBRA
:

2009 
OP_SCBRAPOS
:

2010 
OP_SCOND
:

2011 
OP_SKIPZERO
:

2012 
OP_STAR
:

2013 
OP_STARI
:

2014 
OP_TYPEMINPLUS
:

2015 
OP_TYPEMINQUERY
:

2016 
OP_TYPEMINSTAR
:

2017 
OP_TYPEMINUPTO
:

2018 
OP_TYPEPLUS
:

2019 
OP_TYPEPOSPLUS
:

2020 
OP_TYPEPOSQUERY
:

2021 
OP_TYPEPOSSTAR
:

2022 
OP_TYPEPOSUPTO
:

2023 
OP_TYPEQUERY
:

2024 
OP_TYPESTAR
:

2025 
OP_TYPEUPTO
:

2026 
OP_UPTO
:

2027 
OP_UPTOI
:

2038 
	}
}

2060 c⁄° 
p¸e_uch¨
 *

2061 
	$PRIV
(
föd_bøckë
)(c⁄° 
p¸e_uch¨
 *
code
, 
BOOL
 
utf
, 
numbî
)

2065 
p¸e_uch¨
 
c
 = *
code
;

2067 i‡(
c
 =
OP_END
Ë 
NULL
;

2073 i‡(
c
 =
OP_XCLASS
Ë
code
 +
	`GET
(code, 1);

2077 i‡(
c
 =
OP_REVERSE
)

2079 i‡(
numbî
 < 0Ë (
p¸e_uch¨
 *)
code
;

2080 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

2085 i‡(
c
 =
OP_CBRA
 || c =
OP_SCBRA
 ||

2086 
c
 =
OP_CBRAPOS
 || c =
OP_SCBRAPOS
)

2088 
n
 = ()
	`GET2
(
code
, 1+
LINK_SIZE
);

2089 i‡(
n
 =
numbî
Ë (
p¸e_uch¨
 *)
code
;

2090 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

2100 
c
)

2102 
OP_TYPESTAR
:

2103 
OP_TYPEMINSTAR
:

2104 
OP_TYPEPLUS
:

2105 
OP_TYPEMINPLUS
:

2106 
OP_TYPEQUERY
:

2107 
OP_TYPEMINQUERY
:

2108 
OP_TYPEPOSSTAR
:

2109 
OP_TYPEPOSPLUS
:

2110 
OP_TYPEPOSQUERY
:

2111 i‡(
code
[1] =
OP_PROP
 || code[1] =
OP_NOTPROP
) code += 2;

2114 
OP_TYPEUPTO
:

2115 
OP_TYPEMINUPTO
:

2116 
OP_TYPEEXACT
:

2117 
OP_TYPEPOSUPTO
:

2118 i‡(
code
[1 + 
IMM2_SIZE
] =
OP_PROP
 || code[1 + IMM2_SIZE] =
OP_NOTPROP
)

2119 
code
 += 2;

2122 
OP_MARK
:

2123 
OP_PRUNE_ARG
:

2124 
OP_SKIP_ARG
:

2125 
OP_THEN_ARG
:

2126 
code
 += code[1];

2132 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

2138 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


2139 i‡(
utf
Ë
c
)

2141 
OP_CHAR
:

2142 
OP_CHARI
:

2143 
OP_NOT
:

2144 
OP_NOTI
:

2145 
OP_EXACT
:

2146 
OP_EXACTI
:

2147 
OP_NOTEXACT
:

2148 
OP_NOTEXACTI
:

2149 
OP_UPTO
:

2150 
OP_UPTOI
:

2151 
OP_NOTUPTO
:

2152 
OP_NOTUPTOI
:

2153 
OP_MINUPTO
:

2154 
OP_MINUPTOI
:

2155 
OP_NOTMINUPTO
:

2156 
OP_NOTMINUPTOI
:

2157 
OP_POSUPTO
:

2158 
OP_POSUPTOI
:

2159 
OP_NOTPOSUPTO
:

2160 
OP_NOTPOSUPTOI
:

2161 
OP_STAR
:

2162 
OP_STARI
:

2163 
OP_NOTSTAR
:

2164 
OP_NOTSTARI
:

2165 
OP_MINSTAR
:

2166 
OP_MINSTARI
:

2167 
OP_NOTMINSTAR
:

2168 
OP_NOTMINSTARI
:

2169 
OP_POSSTAR
:

2170 
OP_POSSTARI
:

2171 
OP_NOTPOSSTAR
:

2172 
OP_NOTPOSSTARI
:

2173 
OP_PLUS
:

2174 
OP_PLUSI
:

2175 
OP_NOTPLUS
:

2176 
OP_NOTPLUSI
:

2177 
OP_MINPLUS
:

2178 
OP_MINPLUSI
:

2179 
OP_NOTMINPLUS
:

2180 
OP_NOTMINPLUSI
:

2181 
OP_POSPLUS
:

2182 
OP_POSPLUSI
:

2183 
OP_NOTPOSPLUS
:

2184 
OP_NOTPOSPLUSI
:

2185 
OP_QUERY
:

2186 
OP_QUERYI
:

2187 
OP_NOTQUERY
:

2188 
OP_NOTQUERYI
:

2189 
OP_MINQUERY
:

2190 
OP_MINQUERYI
:

2191 
OP_NOTMINQUERY
:

2192 
OP_NOTMINQUERYI
:

2193 
OP_POSQUERY
:

2194 
OP_POSQUERYI
:

2195 
OP_NOTPOSQUERY
:

2196 
OP_NOTPOSQUERYI
:

2197 i‡(
	`HAS_EXTRALEN
(
code
[-1])Ëcodê+
	`GET_EXTRALEN
(code[-1]);

2201 ()(
utf
);

2205 
	}
}

2223 c⁄° 
p¸e_uch¨
 *

2224 
	$föd_ªcur£
(c⁄° 
p¸e_uch¨
 *
code
, 
BOOL
 
utf
)

2228 
p¸e_uch¨
 
c
 = *
code
;

2229 i‡(
c
 =
OP_END
Ë 
NULL
;

2230 i‡(
c
 =
OP_RECURSE
Ë 
code
;

2236 i‡(
c
 =
OP_XCLASS
Ë
code
 +
	`GET
(code, 1);

2245 
c
)

2247 
OP_TYPESTAR
:

2248 
OP_TYPEMINSTAR
:

2249 
OP_TYPEPLUS
:

2250 
OP_TYPEMINPLUS
:

2251 
OP_TYPEQUERY
:

2252 
OP_TYPEMINQUERY
:

2253 
OP_TYPEPOSSTAR
:

2254 
OP_TYPEPOSPLUS
:

2255 
OP_TYPEPOSQUERY
:

2256 i‡(
code
[1] =
OP_PROP
 || code[1] =
OP_NOTPROP
) code += 2;

2259 
OP_TYPEPOSUPTO
:

2260 
OP_TYPEUPTO
:

2261 
OP_TYPEMINUPTO
:

2262 
OP_TYPEEXACT
:

2263 i‡(
code
[1 + 
IMM2_SIZE
] =
OP_PROP
 || code[1 + IMM2_SIZE] =
OP_NOTPROP
)

2264 
code
 += 2;

2267 
OP_MARK
:

2268 
OP_PRUNE_ARG
:

2269 
OP_SKIP_ARG
:

2270 
OP_THEN_ARG
:

2271 
code
 += code[1];

2277 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

2283 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


2284 i‡(
utf
Ë
c
)

2286 
OP_CHAR
:

2287 
OP_CHARI
:

2288 
OP_NOT
:

2289 
OP_NOTI
:

2290 
OP_EXACT
:

2291 
OP_EXACTI
:

2292 
OP_NOTEXACT
:

2293 
OP_NOTEXACTI
:

2294 
OP_UPTO
:

2295 
OP_UPTOI
:

2296 
OP_NOTUPTO
:

2297 
OP_NOTUPTOI
:

2298 
OP_MINUPTO
:

2299 
OP_MINUPTOI
:

2300 
OP_NOTMINUPTO
:

2301 
OP_NOTMINUPTOI
:

2302 
OP_POSUPTO
:

2303 
OP_POSUPTOI
:

2304 
OP_NOTPOSUPTO
:

2305 
OP_NOTPOSUPTOI
:

2306 
OP_STAR
:

2307 
OP_STARI
:

2308 
OP_NOTSTAR
:

2309 
OP_NOTSTARI
:

2310 
OP_MINSTAR
:

2311 
OP_MINSTARI
:

2312 
OP_NOTMINSTAR
:

2313 
OP_NOTMINSTARI
:

2314 
OP_POSSTAR
:

2315 
OP_POSSTARI
:

2316 
OP_NOTPOSSTAR
:

2317 
OP_NOTPOSSTARI
:

2318 
OP_PLUS
:

2319 
OP_PLUSI
:

2320 
OP_NOTPLUS
:

2321 
OP_NOTPLUSI
:

2322 
OP_MINPLUS
:

2323 
OP_MINPLUSI
:

2324 
OP_NOTMINPLUS
:

2325 
OP_NOTMINPLUSI
:

2326 
OP_POSPLUS
:

2327 
OP_POSPLUSI
:

2328 
OP_NOTPOSPLUS
:

2329 
OP_NOTPOSPLUSI
:

2330 
OP_QUERY
:

2331 
OP_QUERYI
:

2332 
OP_NOTQUERY
:

2333 
OP_NOTQUERYI
:

2334 
OP_MINQUERY
:

2335 
OP_MINQUERYI
:

2336 
OP_NOTMINQUERY
:

2337 
OP_NOTMINQUERYI
:

2338 
OP_POSQUERY
:

2339 
OP_POSQUERYI
:

2340 
OP_NOTPOSQUERY
:

2341 
OP_NOTPOSQUERYI
:

2342 i‡(
	`HAS_EXTRALEN
(
code
[-1])Ëcodê+
	`GET_EXTRALEN
(code[-1]);

2346 ()(
utf
);

2350 
	}
}

2376 
BOOL


2377 
	$could_be_em±y_bønch
(c⁄° 
p¸e_uch¨
 *
code
, c⁄°Ö¸e_uch¨ *
ídcode
,

2378 
BOOL
 
utf
, 
compûe_d©a
 *
cd
, 
ªcur£_check
 *
ªcur£s
)

2380 
p¸e_uch¨
 
c
;

2381 
ªcur£_check
 
this_ªcur£
;

2383 
code
 = 
	`fú°_signifiˇ¡_code
(codê+ 
	`PRIV
(
OP_Àngths
)[*code], 
TRUE
);

2384 
code
 < 
ídcode
;

2385 
code
 = 
	`fú°_signifiˇ¡_code
(codê+ 
	`PRIV
(
OP_Àngths
)[
c
], 
TRUE
))

2387 c⁄° 
p¸e_uch¨
 *
ccode
;

2389 
c
 = *
code
;

2394 i‡(
c
 =
OP_ASSERT
)

2396 dÿ
code
 +
	`GET
(code, 1); *codê=
OP_ALT
);

2397 
c
 = *
code
;

2408 i‡(
c
 =
OP_RECURSE
)

2410 c⁄° 
p¸e_uch¨
 *
scode
 = 
cd
->
°¨t_code
 + 
	`GET
(
code
, 1);

2411 c⁄° 
p¸e_uch¨
 *
ídgroup
 = 
scode
;

2412 
BOOL
 
em±y_bønch
;

2418 i‡(
cd
->
°¨t_w‹k•a˚
 !
NULL
)

2420 c⁄° 
p¸e_uch¨
 *
tcode
;

2421 
tcode
 = 
cd
->
°¨t_w‹k•a˚
;Åcodê< cd->
hwm
;Åcodê+
LINK_SIZE
)

2422 i‡(()
	`GET
(
tcode
, 0Ë=()(
code
 + 1 - 
cd
->
°¨t_code
)Ë 
TRUE
;

2423 i‡(
	`GET
(
scode
, 1Ë=0Ë 
TRUE
;

2431 dÿ
ídgroup
 +
	`GET
”ndgroup, 1); *ídgrou∞=
OP_ALT
);

2432 i‡(
code
 >
scode
 && codê<
ídgroup
) ;

2435 
ªcur£_check
 *
r
 = 
ªcur£s
;

2436 
r
 = 
ªcur£s
;Ñ !
NULL
;Ñ =Ñ->
¥ev
)

2437 i‡(
r
->
group
 =
scode
) ;

2438 i‡(
r
 !
NULL
) ;

2444 
em±y_bønch
 = 
FALSE
;

2445 
this_ªcur£
.
¥ev
 = 
ªcur£s
;

2446 
this_ªcur£
.
group
 = 
scode
;

2450 i‡(
	`could_be_em±y_bønch
(
scode
, 
ídcode
, 
utf
, 
cd
, &
this_ªcur£
))

2452 
em±y_bønch
 = 
TRUE
;

2455 
scode
 +
	`GET
(scode, 1);

2457 *
scode
 =
OP_ALT
);

2459 i‡(!
em±y_bønch
Ë 
FALSE
;

2465 i‡(
c
 =
OP_BRAZERO
 || c =
OP_BRAMINZERO
 || c =
OP_SKIPZERO
 ||

2466 
c
 =
OP_BRAPOSZERO
)

2468 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

2469 dÿ
code
 +
	`GET
(code, 1); *codê=
OP_ALT
);

2470 
c
 = *
code
;

2477 i‡(
c
 =
OP_SBRA
 || c =
OP_SBRAPOS
 ||

2478 
c
 =
OP_SCBRA
 || c =
OP_SCBRAPOS
)

2480 dÿ
code
 +
	`GET
(code, 1); *codê=
OP_ALT
);

2481 
c
 = *
code
;

2487 i‡(
c
 =
OP_BRA
 || c =
OP_BRAPOS
 ||

2488 
c
 =
OP_CBRA
 || c =
OP_CBRAPOS
 ||

2489 
c
 =
OP_ONCE
 || c =
OP_ONCE_NC
 ||

2490 
c
 =
OP_COND
)

2492 
BOOL
 
em±y_bønch
;

2493 i‡(
	`GET
(
code
, 1Ë=0Ë 
TRUE
;

2499 i‡(
c
 =
OP_COND
 && 
code
[
	`GET
(code, 1)] !
OP_ALT
)

2500 
code
 +
	`GET
(code, 1);

2503 
em±y_bønch
 = 
FALSE
;

2506 i‡(!
em±y_bønch
 && 
	`could_be_em±y_bønch
(
code
, 
ídcode
, 
utf
, 
cd
,

2507 
ªcur£s
)Ë
em±y_bønch
 = 
TRUE
;

2508 
code
 +
	`GET
(code, 1);

2510 *
code
 =
OP_ALT
);

2511 i‡(!
em±y_bønch
Ë 
FALSE
;

2514 
c
 = *
code
;

2520 
c
)

2528 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


2529 
OP_XCLASS
:

2530 
ccode
 = 
code
 +
	`GET
(code, 1);

2531 
CHECK_CLASS_REPEAT
;

2534 
OP_CLASS
:

2535 
OP_NCLASS
:

2536 
ccode
 = 
code
 + 
	`PRIV
(
OP_Àngths
)[
OP_CLASS
];

2538 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


2539 
CHECK_CLASS_REPEAT
:

2542 *
ccode
)

2544 
OP_CRSTAR
:

2545 
OP_CRMINSTAR
:

2546 
OP_CRQUERY
:

2547 
OP_CRMINQUERY
:

2548 
OP_CRPOSSTAR
:

2549 
OP_CRPOSQUERY
:

2553 
OP_CRPLUS
:

2554 
OP_CRMINPLUS
:

2555 
OP_CRPOSPLUS
:

2556  
FALSE
;

2558 
OP_CRRANGE
:

2559 
OP_CRMINRANGE
:

2560 
OP_CRPOSRANGE
:

2561 i‡(
	`GET2
(
ccode
, 1Ë> 0Ë 
FALSE
;

2568 
OP_ANY
:

2569 
OP_ALLANY
:

2570 
OP_ANYBYTE
:

2572 
OP_PROP
:

2573 
OP_NOTPROP
:

2574 
OP_ANYNL
:

2576 
OP_NOT_HSPACE
:

2577 
OP_HSPACE
:

2578 
OP_NOT_VSPACE
:

2579 
OP_VSPACE
:

2580 
OP_EXTUNI
:

2582 
OP_NOT_DIGIT
:

2583 
OP_DIGIT
:

2584 
OP_NOT_WHITESPACE
:

2585 
OP_WHITESPACE
:

2586 
OP_NOT_WORDCHAR
:

2587 
OP_WORDCHAR
:

2589 
OP_CHAR
:

2590 
OP_CHARI
:

2591 
OP_NOT
:

2592 
OP_NOTI
:

2594 
OP_PLUS
:

2595 
OP_PLUSI
:

2596 
OP_MINPLUS
:

2597 
OP_MINPLUSI
:

2599 
OP_NOTPLUS
:

2600 
OP_NOTPLUSI
:

2601 
OP_NOTMINPLUS
:

2602 
OP_NOTMINPLUSI
:

2604 
OP_POSPLUS
:

2605 
OP_POSPLUSI
:

2606 
OP_NOTPOSPLUS
:

2607 
OP_NOTPOSPLUSI
:

2609 
OP_EXACT
:

2610 
OP_EXACTI
:

2611 
OP_NOTEXACT
:

2612 
OP_NOTEXACTI
:

2614 
OP_TYPEPLUS
:

2615 
OP_TYPEMINPLUS
:

2616 
OP_TYPEPOSPLUS
:

2617 
OP_TYPEEXACT
:

2619  
FALSE
;

2624 
OP_TYPESTAR
:

2625 
OP_TYPEMINSTAR
:

2626 
OP_TYPEPOSSTAR
:

2627 
OP_TYPEQUERY
:

2628 
OP_TYPEMINQUERY
:

2629 
OP_TYPEPOSQUERY
:

2630 i‡(
code
[1] =
OP_PROP
 || code[1] =
OP_NOTPROP
) code += 2;

2635 
OP_TYPEUPTO
:

2636 
OP_TYPEMINUPTO
:

2637 
OP_TYPEPOSUPTO
:

2638 i‡(
code
[1 + 
IMM2_SIZE
] =
OP_PROP
 || code[1 + IMM2_SIZE] =
OP_NOTPROP
)

2639 
code
 += 2;

2644 
OP_KET
:

2645 
OP_KETRMAX
:

2646 
OP_KETRMIN
:

2647 
OP_KETRPOS
:

2648 
OP_ALT
:

2649  
TRUE
;

2655 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


2656 
OP_STAR
:

2657 
OP_STARI
:

2658 
OP_NOTSTAR
:

2659 
OP_NOTSTARI
:

2661 
OP_MINSTAR
:

2662 
OP_MINSTARI
:

2663 
OP_NOTMINSTAR
:

2664 
OP_NOTMINSTARI
:

2666 
OP_POSSTAR
:

2667 
OP_POSSTARI
:

2668 
OP_NOTPOSSTAR
:

2669 
OP_NOTPOSSTARI
:

2671 
OP_QUERY
:

2672 
OP_QUERYI
:

2673 
OP_NOTQUERY
:

2674 
OP_NOTQUERYI
:

2676 
OP_MINQUERY
:

2677 
OP_MINQUERYI
:

2678 
OP_NOTMINQUERY
:

2679 
OP_NOTMINQUERYI
:

2681 
OP_POSQUERY
:

2682 
OP_POSQUERYI
:

2683 
OP_NOTPOSQUERY
:

2684 
OP_NOTPOSQUERYI
:

2686 i‡(
utf
 && 
	`HAS_EXTRALEN
(
code
[1])Ëcodê+
	`GET_EXTRALEN
(code[1]);

2689 
OP_UPTO
:

2690 
OP_UPTOI
:

2691 
OP_NOTUPTO
:

2692 
OP_NOTUPTOI
:

2694 
OP_MINUPTO
:

2695 
OP_MINUPTOI
:

2696 
OP_NOTMINUPTO
:

2697 
OP_NOTMINUPTOI
:

2699 
OP_POSUPTO
:

2700 
OP_POSUPTOI
:

2701 
OP_NOTPOSUPTO
:

2702 
OP_NOTPOSUPTOI
:

2704 i‡(
utf
 && 
	`HAS_EXTRALEN
(
code
[1 + 
IMM2_SIZE
])Ëcodê+
	`GET_EXTRALEN
(code[1 + IMM2_SIZE]);

2711 
OP_MARK
:

2712 
OP_PRUNE_ARG
:

2713 
OP_SKIP_ARG
:

2714 
OP_THEN_ARG
:

2715 
code
 += code[1];

2725  
TRUE
;

2726 
	}
}

2751 
BOOL


2752 
	$could_be_em±y
(c⁄° 
p¸e_uch¨
 *
code
, c⁄°Ö¸e_uch¨ *
ídcode
,

2753 
bønch_chaö
 *
b˝å
, 
BOOL
 
utf
, 
compûe_d©a
 *
cd
)

2755 
b˝å
 !
NULL
 && b˝å->
cuºít_bønch
 >
code
)

2757 i‡(!
	`could_be_em±y_bønch
(
b˝å
->
cuºít_bønch
, 
ídcode
, 
utf
, 
cd
, 
NULL
))

2758  
FALSE
;

2759 
b˝å
 = b˝å->
ouãr
;

2761  
TRUE
;

2762 
	}
}

2777 
p¸e_uch¨


2778 
	$gë_ª≥©_ba£
(
p¸e_uch¨
 
c
)

2780  (
c
 > 
OP_TYPEPOSUPTO
)? c :

2781 (
c
 >
OP_TYPESTAR
)? OP_TYPESTAR :

2782 (
c
 >
OP_NOTSTARI
)? OP_NOTSTARI :

2783 (
c
 >
OP_NOTSTAR
)? OP_NOTSTAR :

2784 (
c
 >
OP_STARI
)? OP_STARI :

2785 
OP_STAR
;

2786 
	}
}

2790 #ifde‡
SUPPORT_UCP


2807 
BOOL


2808 
	$check_ch¨_¥›
(
p¸e_uöt32
 
c
, 
±y≥
, 
pd©a
,

2809 
BOOL
 
√g©ed
)

2811 c⁄° 
p¸e_uöt32
 *
p
;

2812 c⁄° 
ucd_ªc‹d
 *
¥›
 = 
	`GET_UCD
(
c
);

2814 
±y≥
)

2816 
PT_LAMP
:

2817  (
¥›
->
ch¨ty≥
 =
u˝_Lu
 ||

2818 
¥›
->
ch¨ty≥
 =
u˝_Ll
 ||

2819 
¥›
->
ch¨ty≥
 =
u˝_Lt
Ë=
√g©ed
;

2821 
PT_GC
:

2822  (
pd©a
 =
	`PRIV
(
u˝_gíty≥
)[
¥›
->
ch¨ty≥
]Ë=
√g©ed
;

2824 
PT_PC
:

2825  (
pd©a
 =
¥›
->
ch¨ty≥
Ë=
√g©ed
;

2827 
PT_SC
:

2828  (
pd©a
 =
¥›
->
s¸ùt
Ë=
√g©ed
;

2832 
PT_ALNUM
:

2833  (
	`PRIV
(
u˝_gíty≥
)[
¥›
->
ch¨ty≥
] =
u˝_L
 ||

2834 
	`PRIV
(
u˝_gíty≥
)[
¥›
->
ch¨ty≥
] =
u˝_N
Ë=
√g©ed
;

2840 
PT_SPACE
:

2841 
PT_PXSPACE
:

2842 
c
)

2844 
HSPACE_CASES
:

2845 
VSPACE_CASES
:

2846  
√g©ed
;

2849  (
	`PRIV
(
u˝_gíty≥
)[
¥›
->
ch¨ty≥
] =
u˝_Z
Ë=
√g©ed
;

2853 
PT_WORD
:

2854  (
	`PRIV
(
u˝_gíty≥
)[
¥›
->
ch¨ty≥
] =
u˝_L
 ||

2855 
	`PRIV
(
u˝_gíty≥
)[
¥›
->
ch¨ty≥
] =
u˝_N
 ||

2856 
c
 =
CHAR_UNDERSCORE
Ë=
√g©ed
;

2858 
PT_CLIST
:

2859 
p
 = 
	`PRIV
(
ucd_ˇ£Àss_£ts
Ë+ 
¥›
->
ˇ££t
;

2862 i‡(
c
 < *
p
Ë !
√g©ed
;

2863 i‡(
c
 =*
p
++Ë 
√g©ed
;

2868  
FALSE
;

2869 
	}
}

2895 c⁄° 
p¸e_uch¨
 *

2896 
	$gë_chr_¥›îty_li°
(c⁄° 
p¸e_uch¨
 *
code
, 
BOOL
 
utf
,

2897 c⁄° 
p¸e_uöt8
 *
fcc
, 
p¸e_uöt32
 *
li°
)

2899 
p¸e_uch¨
 
c
 = *
code
;

2900 
p¸e_uch¨
 
ba£
;

2901 c⁄° 
p¸e_uch¨
 *
íd
;

2902 
p¸e_uöt32
 
chr
;

2904 #ifde‡
SUPPORT_UCP


2905 
p¸e_uöt32
 *
˛i°_de°
;

2906 c⁄° 
p¸e_uöt32
 *
˛i°_§c
;

2908 
utf
 = utf;

2911 
li°
[0] = 
c
;

2912 
li°
[1] = 
FALSE
;

2913 
code
++;

2915 i‡(
c
 >
OP_STAR
 && c <
OP_TYPEPOSUPTO
)

2917 
ba£
 = 
	`gë_ª≥©_ba£
(
c
);

2918 
c
 -(
ba£
 - 
OP_STAR
);

2920 i‡(
c
 =
OP_UPTO
 || c =
OP_MINUPTO
 || c =
OP_EXACT
 || c =
OP_POSUPTO
)

2921 
code
 +
IMM2_SIZE
;

2923 
li°
[1] = (
c
 !
OP_PLUS
 && c !
OP_MINPLUS
 && c !
OP_EXACT
 && c !
OP_POSPLUS
);

2925 
ba£
)

2927 
OP_STAR
:

2928 
li°
[0] = 
OP_CHAR
;

2931 
OP_STARI
:

2932 
li°
[0] = 
OP_CHARI
;

2935 
OP_NOTSTAR
:

2936 
li°
[0] = 
OP_NOT
;

2939 
OP_NOTSTARI
:

2940 
li°
[0] = 
OP_NOTI
;

2943 
OP_TYPESTAR
:

2944 
li°
[0] = *
code
;

2945 
code
++;

2948 
c
 = 
li°
[0];

2951 
c
)

2953 
OP_NOT_DIGIT
:

2954 
OP_DIGIT
:

2955 
OP_NOT_WHITESPACE
:

2956 
OP_WHITESPACE
:

2957 
OP_NOT_WORDCHAR
:

2958 
OP_WORDCHAR
:

2959 
OP_ANY
:

2960 
OP_ALLANY
:

2961 
OP_ANYNL
:

2962 
OP_NOT_HSPACE
:

2963 
OP_HSPACE
:

2964 
OP_NOT_VSPACE
:

2965 
OP_VSPACE
:

2966 
OP_EXTUNI
:

2967 
OP_EODN
:

2968 
OP_EOD
:

2969 
OP_DOLL
:

2970 
OP_DOLLM
:

2971  
code
;

2973 
OP_CHAR
:

2974 
OP_NOT
:

2975 
	`GETCHARINCTEST
(
chr
, 
code
);

2976 
li°
[2] = 
chr
;

2977 
li°
[3] = 
NOTACHAR
;

2978  
code
;

2980 
OP_CHARI
:

2981 
OP_NOTI
:

2982 
li°
[0] = (
c
 =
OP_CHARI
Ë? 
OP_CHAR
 : 
OP_NOT
;

2983 
	`GETCHARINCTEST
(
chr
, 
code
);

2984 
li°
[2] = 
chr
;

2986 #ifde‡
SUPPORT_UCP


2987 i‡(
chr
 < 128 || (ch∏< 256 && !
utf
))

2988 
li°
[3] = 
fcc
[
chr
];

2990 
li°
[3] = 
	`UCD_OTHERCASE
(
chr
);

2991 #ñi‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


2992 
li°
[3] = (
chr
 < 256Ë? 
fcc
[chr] : chr;

2994 
li°
[3] = 
fcc
[
chr
];

2999 i‡(
chr
 =
li°
[3])

3000 
li°
[3] = 
NOTACHAR
;

3002 
li°
[4] = 
NOTACHAR
;

3003  
code
;

3005 #ifde‡
SUPPORT_UCP


3006 
OP_PROP
:

3007 
OP_NOTPROP
:

3008 i‡(
code
[0] !
PT_CLIST
)

3010 
li°
[2] = 
code
[0];

3011 
li°
[3] = 
code
[1];

3012  
code
 + 2;

3017 
˛i°_§c
 = 
	`PRIV
(
ucd_ˇ£Àss_£ts
Ë+ 
code
[1];

3018 
˛i°_de°
 = 
li°
 + 2;

3019 
code
 += 2;

3022 i‡(
˛i°_de°
 >
li°
 + 8)

3026 
li°
[2] = 
code
[0];

3027 
li°
[3] = 
code
[1];

3028  
code
;

3030 *
˛i°_de°
++ = *
˛i°_§c
;

3032 *
˛i°_§c
++ !
NOTACHAR
);

3037 
li°
[0] = (
c
 =
OP_PROP
Ë? 
OP_CHAR
 : 
OP_NOT
;

3038  
code
;

3041 
OP_NCLASS
:

3042 
OP_CLASS
:

3043 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


3044 
OP_XCLASS
:

3045 i‡(
c
 =
OP_XCLASS
)

3046 
íd
 = 
code
 + 
	`GET
(code, 0) - 1;

3049 
íd
 = 
code
 + 32 / (
p¸e_uch¨
);

3051 *
íd
)

3053 
OP_CRSTAR
:

3054 
OP_CRMINSTAR
:

3055 
OP_CRQUERY
:

3056 
OP_CRMINQUERY
:

3057 
OP_CRPOSSTAR
:

3058 
OP_CRPOSQUERY
:

3059 
li°
[1] = 
TRUE
;

3060 
íd
++;

3063 
OP_CRPLUS
:

3064 
OP_CRMINPLUS
:

3065 
OP_CRPOSPLUS
:

3066 
íd
++;

3069 
OP_CRRANGE
:

3070 
OP_CRMINRANGE
:

3071 
OP_CRPOSRANGE
:

3072 
li°
[1] = (
	`GET2
(
íd
, 1) == 0);

3073 
íd
 +1 + 2 * 
IMM2_SIZE
;

3076 
li°
[2] = (
p¸e_uöt32
)(
íd
 - 
code
);

3077  
íd
;

3079  
NULL
;

3080 
	}
}

3100 
BOOL


3101 
	$com∑ª_›codes
(c⁄° 
p¸e_uch¨
 *
code
, 
BOOL
 
utf
, c⁄° 
compûe_d©a
 *
cd
,

3102 c⁄° 
p¸e_uöt32
 *
ba£_li°
, c⁄° 
p¸e_uch¨
 *
ba£_íd
, *
ªc_limô
)

3104 
p¸e_uch¨
 
c
;

3105 
p¸e_uöt32
 
li°
[8];

3106 c⁄° 
p¸e_uöt32
 *
chr_±r
;

3107 c⁄° 
p¸e_uöt32
 *
ochr_±r
;

3108 c⁄° 
p¸e_uöt32
 *
li°_±r
;

3109 c⁄° 
p¸e_uch¨
 *
√xt_code
;

3110 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


3111 c⁄° 
p¸e_uch¨
 *
x˛ass_Êags
;

3113 c⁄° 
p¸e_uöt8
 *
˛ass_bô£t
;

3114 c⁄° 
p¸e_uöt8
 *
£t1
, *
£t2
, *
£t_íd
;

3115 
p¸e_uöt32
 
chr
;

3116 
BOOL
 
ac˚±ed
, 
övît_bôs
;

3117 
BOOL
 
íãªd_a_group
 = 
FALSE
;

3119 i‡(*
ªc_limô
 =0Ë 
FALSE
;

3120 --(*
ªc_limô
);

3132 
c
 = *
code
;

3136 i‡(
c
 =
OP_CALLOUT
)

3138 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

3142 i‡(
c
 =
OP_ALT
)

3144 dÿ
code
 +
	`GET
(code, 1); *codê=
OP_ALT
);

3145 
c
 = *
code
;

3148 
c
)

3150 
OP_END
:

3151 
OP_KETRPOS
:

3156  
ba£_li°
[1] != 0;

3158 
OP_KET
:

3163 i‡(
ba£_li°
[1] =0Ë 
FALSE
;

3165 *(
code
 - 
	`GET
(code, 1)))

3167 
OP_ASSERT
:

3168 
OP_ASSERT_NOT
:

3169 
OP_ASSERTBACK
:

3170 
OP_ASSERTBACK_NOT
:

3171 
OP_ONCE
:

3172 
OP_ONCE_NC
:

3177  !
íãªd_a_group
;

3180 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

3183 
OP_ONCE
:

3184 
OP_ONCE_NC
:

3185 
OP_BRA
:

3186 
OP_CBRA
:

3187 
√xt_code
 = 
code
 + 
	`GET
(code, 1);

3188 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

3190 *
√xt_code
 =
OP_ALT
)

3192 i‡(!
	`com∑ª_›codes
(
code
, 
utf
, 
cd
, 
ba£_li°
, 
ba£_íd
, 
ªc_limô
))

3193  
FALSE
;

3194 
code
 = 
√xt_code
 + 1 + 
LINK_SIZE
;

3195 
√xt_code
 +
	`GET
(next_code, 1);

3198 
íãªd_a_group
 = 
TRUE
;

3201 
OP_BRAZERO
:

3202 
OP_BRAMINZERO
:

3204 
√xt_code
 = 
code
 + 1;

3205 i‡(*
√xt_code
 !
OP_BRA
 && *√xt_codê!
OP_CBRA


3206 && *
√xt_code
 !
OP_ONCE
 && *√xt_codê!
OP_ONCE_NC
Ë 
FALSE
;

3208 dÿ
√xt_code
 +
	`GET
“ext_code, 1); *√xt_codê=
OP_ALT
);

3212 
√xt_code
 +1 + 
LINK_SIZE
;

3213 i‡(!
	`com∑ª_›codes
(
√xt_code
, 
utf
, 
cd
, 
ba£_li°
, 
ba£_íd
, 
ªc_limô
))

3214  
FALSE
;

3216 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

3225 
code
 = 
	`gë_chr_¥›îty_li°
(code, 
utf
, 
cd
->
fcc
, 
li°
);

3226 i‡(
code
 =
NULL
Ë 
FALSE
;

3231 i‡(
ba£_li°
[0] =
OP_CHAR
)

3233 
chr_±r
 = 
ba£_li°
 + 2;

3234 
li°_±r
 = 
li°
;

3236 i‡(
li°
[0] =
OP_CHAR
)

3238 
chr_±r
 = 
li°
 + 2;

3239 
li°_±r
 = 
ba£_li°
;

3244 i‡(
ba£_li°
[0] =
OP_CLASS
 || 
li°
[0] == OP_CLASS

3245 #ifde‡
COMPILE_PCRE8


3247 || (!
utf
 && (
ba£_li°
[0] =
OP_NCLASS
 || 
li°
[0] == OP_NCLASS))

3251 #ifde‡
COMPILE_PCRE8


3252 i‡(
ba£_li°
[0] =
OP_CLASS
 || (!
utf
 && ba£_li°[0] =
OP_NCLASS
))

3254 i‡(
ba£_li°
[0] =
OP_CLASS
)

3257 
£t1
 = (
p¸e_uöt8
 *)(
ba£_íd
 - 
ba£_li°
[2]);

3258 
li°_±r
 = 
li°
;

3262 
£t1
 = (
p¸e_uöt8
 *)(
code
 - 
li°
[2]);

3263 
li°_±r
 = 
ba£_li°
;

3266 
övît_bôs
 = 
FALSE
;

3267 
li°_±r
[0])

3269 
OP_CLASS
:

3270 
OP_NCLASS
:

3271 
£t2
 = (
p¸e_uöt8
 *)

3272 ((
li°_±r
 =
li°
 ? 
code
 : 
ba£_íd
) -Üist_ptr[2]);

3275 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


3276 
OP_XCLASS
:

3277 
x˛ass_Êags
 = (
li°_±r
 =
li°
 ? 
code
 : 
ba£_íd
Ë-Üi°_±r[2] + 
LINK_SIZE
;

3278 i‡((*
x˛ass_Êags
 & 
XCL_HASPROP
Ë!0Ë 
FALSE
;

3279 i‡((*
x˛ass_Êags
 & 
XCL_MAP
) == 0)

3282 i‡(
li°
[1] =0Ë 
TRUE
;

3286 
£t2
 = (
p¸e_uöt8
 *)(
x˛ass_Êags
 + 1);

3290 
OP_NOT_DIGIT
:

3291 
övît_bôs
 = 
TRUE
;

3293 
OP_DIGIT
:

3294 
£t2
 = (
p¸e_uöt8
 *)(
cd
->
cbôs
 + 
cbô_digô
);

3297 
OP_NOT_WHITESPACE
:

3298 
övît_bôs
 = 
TRUE
;

3300 
OP_WHITESPACE
:

3301 
£t2
 = (
p¸e_uöt8
 *)(
cd
->
cbôs
 + 
cbô_•a˚
);

3304 
OP_NOT_WORDCHAR
:

3305 
övît_bôs
 = 
TRUE
;

3307 
OP_WORDCHAR
:

3308 
£t2
 = (
p¸e_uöt8
 *)(
cd
->
cbôs
 + 
cbô_w‹d
);

3312  
FALSE
;

3317 
£t_íd
 = 
£t1
 + 32;

3318 i‡(
övît_bôs
)

3322 i‡((*
£t1
++ & ~(*
£t2
++)Ë!0Ë 
FALSE
;

3324 
£t1
 < 
£t_íd
);

3330 i‡((*
£t1
++ & *
£t2
++Ë!0Ë 
FALSE
;

3332 
£t1
 < 
£t_íd
);

3335 i‡(
li°
[1] =0Ë 
TRUE
;

3345 
p¸e_uöt32
 
À·›
, 
right›
;

3347 
À·›
 = 
ba£_li°
[0];

3348 
right›
 = 
li°
[0];

3350 #ifde‡
SUPPORT_UCP


3351 
ac˚±ed
 = 
FALSE
;

3352 i‡(
À·›
 =
OP_PROP
 ||Üe·› =
OP_NOTPROP
)

3354 i‡(
right›
 =
OP_EOD
)

3355 
ac˚±ed
 = 
TRUE
;

3356 i‡(
right›
 =
OP_PROP
 ||Ñight› =
OP_NOTPROP
)

3358 
n
;

3359 c⁄° 
p¸e_uöt8
 *
p
;

3360 
BOOL
 
ßme
 = 
À·›
 =
right›
;

3361 
BOOL
 
li•r›
 = 
À·›
 =
OP_PROP
;

3362 
BOOL
 
ri•r›
 = 
right›
 =
OP_PROP
;

3363 
BOOL
 
bŸh¥›
 = 
li•r›
 && 
ri•r›
;

3374 
n
 = 
¥›pos°ab
[
ba£_li°
[2]][
li°
[2]];

3375 
n
)

3378 1: 
ac˚±ed
 = 
bŸh¥›
; ;

3379 2: 
ac˚±ed
 = (
ba£_li°
[3] =
li°
[3]Ë!
ßme
; ;

3380 3: 
ac˚±ed
 = !
ßme
; ;

3383 
ac˚±ed
 = 
ri•r›
 && 
ˇços°ab
[
ba£_li°
[3]][
li°
[3]] =
ßme
;

3387 
ac˚±ed
 = 
li•r›
 && 
ˇços°ab
[
li°
[3]][
ba£_li°
[3]] =
ßme
;

3412 
p
 = 
pos•r›°ab
[
n
-6];

3413 
ac˚±ed
 = 
ri•r›
 && 
li•r›
 ==

3414 (
li°
[3] !
p
[0] &&

3415 
li°
[3] !
p
[1] &&

3416 (
li°
[3] !
p
[2] || !
li•r›
));

3422 
p
 = 
pos•r›°ab
[
n
-9];

3423 
ac˚±ed
 = 
li•r›
 && 
ri•r›
 ==

3424 (
ba£_li°
[3] !
p
[0] &&

3425 
ba£_li°
[3] !
p
[1] &&

3426 (
ba£_li°
[3] !
p
[2] || !
ri•r›
));

3432 
p
 = 
pos•r›°ab
[
n
-12];

3433 
ac˚±ed
 = 
ri•r›
 && 
li•r›
 ==

3434 (
ˇços°ab
[
p
[0]][
li°
[3]] &&

3435 
ˇços°ab
[
p
[1]][
li°
[3]] &&

3436 (
li°
[3] !
p
[3] || !
li•r›
));

3442 
p
 = 
pos•r›°ab
[
n
-15];

3443 
ac˚±ed
 = 
li•r›
 && 
ri•r›
 ==

3444 (
ˇços°ab
[
p
[0]][
ba£_li°
[3]] &&

3445 
ˇços°ab
[
p
[1]][
ba£_li°
[3]] &&

3446 (
ba£_li°
[3] !
p
[3] || !
ri•r›
));

3455 
ac˚±ed
 = 
À·›
 >
FIRST_AUTOTAB_OP
 &&Üe·› <
LAST_AUTOTAB_LEFT_OP
 &&

3456 
right›
 >
FIRST_AUTOTAB_OP
 &&Ñight› <
LAST_AUTOTAB_RIGHT_OP
 &&

3457 
aut›os°ab
[
À·›
 - 
FIRST_AUTOTAB_OP
][
right›
 - FIRST_AUTOTAB_OP];

3459 i‡(!
ac˚±ed
Ë 
FALSE
;

3461 i‡(
li°
[1] =0Ë 
TRUE
;

3471 
chr
 = *
chr_±r
;

3473 
li°_±r
[0])

3475 
OP_CHAR
:

3476 
ochr_±r
 = 
li°_±r
 + 2;

3479 i‡(
chr
 =*
ochr_±r
Ë 
FALSE
;

3480 
ochr_±r
++;

3482 *
ochr_±r
 !
NOTACHAR
);

3485 
OP_NOT
:

3486 
ochr_±r
 = 
li°_±r
 + 2;

3489 i‡(
chr
 =*
ochr_±r
)

3491 
ochr_±r
++;

3493 *
ochr_±r
 !
NOTACHAR
);

3494 i‡(*
ochr_±r
 =
NOTACHAR
Ë 
FALSE
;

3500 
OP_DIGIT
:

3501 i‡(
chr
 < 256 && (
cd
->
˘y≥s
[chr] & 
˘y≥_digô
Ë!0Ë 
FALSE
;

3504 
OP_NOT_DIGIT
:

3505 i‡(
chr
 > 255 || (
cd
->
˘y≥s
[chr] & 
˘y≥_digô
Ë=0Ë 
FALSE
;

3508 
OP_WHITESPACE
:

3509 i‡(
chr
 < 256 && (
cd
->
˘y≥s
[chr] & 
˘y≥_•a˚
Ë!0Ë 
FALSE
;

3512 
OP_NOT_WHITESPACE
:

3513 i‡(
chr
 > 255 || (
cd
->
˘y≥s
[chr] & 
˘y≥_•a˚
Ë=0Ë 
FALSE
;

3516 
OP_WORDCHAR
:

3517 i‡(
chr
 < 255 && (
cd
->
˘y≥s
[chr] & 
˘y≥_w‹d
Ë!0Ë 
FALSE
;

3520 
OP_NOT_WORDCHAR
:

3521 i‡(
chr
 > 255 || (
cd
->
˘y≥s
[chr] & 
˘y≥_w‹d
Ë=0Ë 
FALSE
;

3524 
OP_HSPACE
:

3525 
chr
)

3527 
HSPACE_CASES
:  
FALSE
;

3532 
OP_NOT_HSPACE
:

3533 
chr
)

3535 
HSPACE_CASES
: ;

3536 :  
FALSE
;

3540 
OP_ANYNL
:

3541 
OP_VSPACE
:

3542 
chr
)

3544 
VSPACE_CASES
:  
FALSE
;

3549 
OP_NOT_VSPACE
:

3550 
chr
)

3552 
VSPACE_CASES
: ;

3553 :  
FALSE
;

3557 
OP_DOLL
:

3558 
OP_EODN
:

3559 
chr
)

3561 
CHAR_CR
:

3562 
CHAR_LF
:

3563 
CHAR_VT
:

3564 
CHAR_FF
:

3565 
CHAR_NEL
:

3566 #i‚de‡
EBCDIC


3570  
FALSE
;

3574 
OP_EOD
:

3577 #ifde‡
SUPPORT_UCP


3578 
OP_PROP
:

3579 
OP_NOTPROP
:

3580 i‡(!
	`check_ch¨_¥›
(
chr
, 
li°_±r
[2],Üist_ptr[3],

3581 
li°_±r
[0] =
OP_NOTPROP
))

3582  
FALSE
;

3586 
OP_NCLASS
:

3587 i‡(
chr
 > 255Ë 
FALSE
;

3590 
OP_CLASS
:

3591 i‡(
chr
 > 255) ;

3592 
˛ass_bô£t
 = (
p¸e_uöt8
 *)

3593 ((
li°_±r
 =
li°
 ? 
code
 : 
ba£_íd
) -Üist_ptr[2]);

3594 i‡((
˛ass_bô£t
[
chr
 >> 3] & (1 << (ch∏& 7))Ë!0Ë 
FALSE
;

3597 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


3598 
OP_XCLASS
:

3599 i‡(
	`PRIV
(
x˛ass
)(
chr
, (
li°_±r
 =
li°
 ? 
code
 : 
ba£_íd
) -

3600 
li°_±r
[2] + 
LINK_SIZE
, 
utf
)Ë 
FALSE
;

3605  
FALSE
;

3608 
chr_±r
++;

3610 *
chr_±r
 !
NOTACHAR
);

3614 i‡(
li°
[1] =0Ë 
TRUE
;

3620 
	}
}

3640 
	$auto_pos£ssify
(
p¸e_uch¨
 *
code
, 
BOOL
 
utf
, c⁄° 
compûe_d©a
 *
cd
)

3642 
p¸e_uch¨
 
c
;

3643 c⁄° 
p¸e_uch¨
 *
íd
;

3644 
p¸e_uch¨
 *
ª≥©_›code
;

3645 
p¸e_uöt32
 
li°
[8];

3646 
ªc_limô
;

3650 
c
 = *
code
;

3658 i‡(
c
 >
OP_TABLE_LENGTH
) ;

3660 i‡(
c
 >
OP_STAR
 && c <
OP_TYPEPOSUPTO
)

3662 
c
 -
	`gë_ª≥©_ba£
(cË- 
OP_STAR
;

3663 
íd
 = (
c
 <
OP_MINUPTO
) ?

3664 
	`gë_chr_¥›îty_li°
(
code
, 
utf
, 
cd
->
fcc
, 
li°
Ë: 
NULL
;

3665 
li°
[1] = 
c
 =
OP_STAR
 || c =
OP_PLUS
 || c =
OP_QUERY
 || c =
OP_UPTO
;

3667 
ªc_limô
 = 1000;

3668 i‡(
íd
 !
NULL
 && 
	`com∑ª_›codes
”nd, 
utf
, 
cd
, 
li°
,Énd, &
ªc_limô
))

3670 
c
)

3672 
OP_STAR
:

3673 *
code
 +
OP_POSSTAR
 - 
OP_STAR
;

3676 
OP_MINSTAR
:

3677 *
code
 +
OP_POSSTAR
 - 
OP_MINSTAR
;

3680 
OP_PLUS
:

3681 *
code
 +
OP_POSPLUS
 - 
OP_PLUS
;

3684 
OP_MINPLUS
:

3685 *
code
 +
OP_POSPLUS
 - 
OP_MINPLUS
;

3688 
OP_QUERY
:

3689 *
code
 +
OP_POSQUERY
 - 
OP_QUERY
;

3692 
OP_MINQUERY
:

3693 *
code
 +
OP_POSQUERY
 - 
OP_MINQUERY
;

3696 
OP_UPTO
:

3697 *
code
 +
OP_POSUPTO
 - 
OP_UPTO
;

3700 
OP_MINUPTO
:

3701 *
code
 +
OP_POSUPTO
 - 
OP_MINUPTO
;

3705 
c
 = *
code
;

3707 i‡(
c
 =
OP_CLASS
 || c =
OP_NCLASS
 || c =
OP_XCLASS
)

3709 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


3710 i‡(
c
 =
OP_XCLASS
)

3711 
ª≥©_›code
 = 
code
 + 
	`GET
(code, 1);

3714 
ª≥©_›code
 = 
code
 + 1 + (32 / (
p¸e_uch¨
));

3716 
c
 = *
ª≥©_›code
;

3717 i‡(
c
 >
OP_CRSTAR
 && c <
OP_CRMINRANGE
)

3720 
íd
 = 
	`gë_chr_¥›îty_li°
(
code
, 
utf
, 
cd
->
fcc
, 
li°
);

3722 
li°
[1] = (
c
 & 1) == 0;

3724 
ªc_limô
 = 1000;

3725 i‡(
	`com∑ª_›codes
(
íd
, 
utf
, 
cd
, 
li°
,Énd, &
ªc_limô
))

3727 
c
)

3729 
OP_CRSTAR
:

3730 
OP_CRMINSTAR
:

3731 *
ª≥©_›code
 = 
OP_CRPOSSTAR
;

3734 
OP_CRPLUS
:

3735 
OP_CRMINPLUS
:

3736 *
ª≥©_›code
 = 
OP_CRPOSPLUS
;

3739 
OP_CRQUERY
:

3740 
OP_CRMINQUERY
:

3741 *
ª≥©_›code
 = 
OP_CRPOSQUERY
;

3744 
OP_CRRANGE
:

3745 
OP_CRMINRANGE
:

3746 *
ª≥©_›code
 = 
OP_CRPOSRANGE
;

3751 
c
 = *
code
;

3754 
c
)

3756 
OP_END
:

3759 
OP_TYPESTAR
:

3760 
OP_TYPEMINSTAR
:

3761 
OP_TYPEPLUS
:

3762 
OP_TYPEMINPLUS
:

3763 
OP_TYPEQUERY
:

3764 
OP_TYPEMINQUERY
:

3765 
OP_TYPEPOSSTAR
:

3766 
OP_TYPEPOSPLUS
:

3767 
OP_TYPEPOSQUERY
:

3768 i‡(
code
[1] =
OP_PROP
 || code[1] =
OP_NOTPROP
) code += 2;

3771 
OP_TYPEUPTO
:

3772 
OP_TYPEMINUPTO
:

3773 
OP_TYPEEXACT
:

3774 
OP_TYPEPOSUPTO
:

3775 i‡(
code
[1 + 
IMM2_SIZE
] =
OP_PROP
 || code[1 + IMM2_SIZE] =
OP_NOTPROP
)

3776 
code
 += 2;

3779 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


3780 
OP_XCLASS
:

3781 
code
 +
	`GET
(code, 1);

3785 
OP_MARK
:

3786 
OP_PRUNE_ARG
:

3787 
OP_SKIP_ARG
:

3788 
OP_THEN_ARG
:

3789 
code
 += code[1];

3795 
code
 +
	`PRIV
(
OP_Àngths
)[
c
];

3801 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


3802 i‡(
utf
Ë
c
)

3804 
OP_CHAR
:

3805 
OP_CHARI
:

3806 
OP_NOT
:

3807 
OP_NOTI
:

3808 
OP_STAR
:

3809 
OP_MINSTAR
:

3810 
OP_PLUS
:

3811 
OP_MINPLUS
:

3812 
OP_QUERY
:

3813 
OP_MINQUERY
:

3814 
OP_UPTO
:

3815 
OP_MINUPTO
:

3816 
OP_EXACT
:

3817 
OP_POSSTAR
:

3818 
OP_POSPLUS
:

3819 
OP_POSQUERY
:

3820 
OP_POSUPTO
:

3821 
OP_STARI
:

3822 
OP_MINSTARI
:

3823 
OP_PLUSI
:

3824 
OP_MINPLUSI
:

3825 
OP_QUERYI
:

3826 
OP_MINQUERYI
:

3827 
OP_UPTOI
:

3828 
OP_MINUPTOI
:

3829 
OP_EXACTI
:

3830 
OP_POSSTARI
:

3831 
OP_POSPLUSI
:

3832 
OP_POSQUERYI
:

3833 
OP_POSUPTOI
:

3834 
OP_NOTSTAR
:

3835 
OP_NOTMINSTAR
:

3836 
OP_NOTPLUS
:

3837 
OP_NOTMINPLUS
:

3838 
OP_NOTQUERY
:

3839 
OP_NOTMINQUERY
:

3840 
OP_NOTUPTO
:

3841 
OP_NOTMINUPTO
:

3842 
OP_NOTEXACT
:

3843 
OP_NOTPOSSTAR
:

3844 
OP_NOTPOSPLUS
:

3845 
OP_NOTPOSQUERY
:

3846 
OP_NOTPOSUPTO
:

3847 
OP_NOTSTARI
:

3848 
OP_NOTMINSTARI
:

3849 
OP_NOTPLUSI
:

3850 
OP_NOTMINPLUSI
:

3851 
OP_NOTQUERYI
:

3852 
OP_NOTMINQUERYI
:

3853 
OP_NOTUPTOI
:

3854 
OP_NOTMINUPTOI
:

3855 
OP_NOTEXACTI
:

3856 
OP_NOTPOSSTARI
:

3857 
OP_NOTPOSPLUSI
:

3858 
OP_NOTPOSQUERYI
:

3859 
OP_NOTPOSUPTOI
:

3860 i‡(
	`HAS_EXTRALEN
(
code
[-1])Ëcodê+
	`GET_EXTRALEN
(code[-1]);

3864 ()(
utf
);

3867 
	}
}

3913 
BOOL


3914 
	$check_posix_sy¡ax
(c⁄° 
p¸e_uch¨
 *
±r
, c⁄°Ö¸e_uch¨ **
íd±r
)

3916 
p¸e_uch¨
 
ãrmö©‹
;

3917 
ãrmö©‹
 = *(++
±r
);

3918 ++
±r
; *±∏!
CHAR_NULL
;Ötr++)

3920 i‡(*
±r
 =
CHAR_BACKSLASH
 &&Öå[1] =
CHAR_RIGHT_SQUARE_BRACKET
)

3921 
±r
++;

3922 i‡(*
±r
 =
CHAR_RIGHT_SQUARE_BRACKET
Ë 
FALSE
;

3925 i‡(*
±r
 =
ãrmö©‹
 &&Öå[1] =
CHAR_RIGHT_SQUARE_BRACKET
)

3927 *
íd±r
 = 
±r
;

3928  
TRUE
;

3930 i‡(*
±r
 =
CHAR_LEFT_SQUARE_BRACKET
 &&

3931 (
±r
[1] =
CHAR_COLON
 ||Öå[1] =
CHAR_DOT
 ||

3932 
±r
[1] =
CHAR_EQUALS_SIGN
) &&

3933 
	`check_posix_sy¡ax
(
±r
, 
íd±r
))

3934  
FALSE
;

3937  
FALSE
;

3938 
	}
}

3958 
	$check_posix_«me
(c⁄° 
p¸e_uch¨
 *
±r
, 
Àn
)

3960 c⁄° *
≤
 = 
posix_«mes
;

3961 
yõld
 = 0;

3962 
posix_«me_Àngths
[
yõld
] != 0)

3964 i‡(
Àn
 =
posix_«me_Àngths
[
yõld
] &&

3965 
	`STRNCMP_UC_C8
(
±r
, 
≤
, ()
Àn
Ë=0Ë 
yõld
;

3966 
≤
 +
posix_«me_Àngths
[
yõld
] + 1;

3967 
yõld
++;

3970 
	}
}

4005 
	$adju°_ªcur£
(
p¸e_uch¨
 *
group
, 
adju°
, 
BOOL
 
utf
, 
compûe_d©a
 *
cd
,

4006 
size_t
 
ßve_hwm_off£t
)

4008 
p¸e_uch¨
 *
±r
 = 
group
;

4010 (
±r
 = (
p¸e_uch¨
 *)
	`föd_ªcur£
’å, 
utf
)Ë!
NULL
)

4012 
off£t
;

4013 
p¸e_uch¨
 *
hc
;

4018 
hc
 = (
p¸e_uch¨
 *)
cd
->
°¨t_w‹k•a˚
 + 
ßve_hwm_off£t
; h¯< cd->
hwm
;

4019 
hc
 +
LINK_SIZE
)

4021 
off£t
 = ()
	`GET
(
hc
, 0);

4022 i‡(
cd
->
°¨t_code
 + 
off£t
 =
±r
 + 1)

4024 
	`PUT
(
hc
, 0, 
off£t
 + 
adju°
);

4032 i‡(
hc
 >
cd
->
hwm
)

4034 
off£t
 = ()
	`GET
(
±r
, 1);

4035 i‡(
cd
->
°¨t_code
 + 
off£t
 >
group
Ë
	`PUT
(
±r
, 1, off£à+ 
adju°
);

4038 
±r
 +1 + 
LINK_SIZE
;

4040 
	}
}

4059 
p¸e_uch¨
 *

4060 
	$auto_ˇŒout
(
p¸e_uch¨
 *
code
, c⁄°Ö¸e_uch¨ *
±r
, 
compûe_d©a
 *
cd
)

4062 *
code
++ = 
OP_CALLOUT
;

4063 *
code
++ = 255;

4064 
	`PUT
(
code
, 0, ()(
±r
 - 
cd
->
°¨t_∑âîn
));

4065 
	`PUT
(
code
, 
LINK_SIZE
, 0);

4066  
code
 + 2 * 
LINK_SIZE
;

4067 
	}
}

4088 
	$com∂ëe_ˇŒout
(
p¸e_uch¨
 *
¥evious_ˇŒout
, c⁄°Ö¸e_uch¨ *
±r
, 
compûe_d©a
 *
cd
)

4090 
Àngth
 = ()(
±r
 - 
cd
->
°¨t_∑âîn
 - 
	`GET
(
¥evious_ˇŒout
, 2));

4091 
	`PUT
(
¥evious_ˇŒout
, 2 + 
LINK_SIZE
, 
Àngth
);

4092 
	}
}

4096 #ifde‡
SUPPORT_UCP


4120 
	$gë_Ÿhîˇ£_ønge
(
p¸e_uöt32
 *
˝å
,Ö¸e_uöt32 
d
,Ö¸e_uöt32 *
o˝å
,

4121 
p¸e_uöt32
 *
od±r
)

4123 
p¸e_uöt32
 
c
, 
Ÿhîˇ£
, 
√xt
;

4124 
co
;

4129 
c
 = *
˝å
; c <
d
; c++)

4131 i‡((
co
 = 
	`UCD_CASESET
(
c
)) != 0)

4133 *
o˝å
 = 
c
++;

4134 *
˝å
 = 
c
;

4135  ()
co
;

4137 i‡((
Ÿhîˇ£
 = 
	`UCD_OTHERCASE
(
c
)) != c) ;

4140 i‡(
c
 > 
d
)  -1;

4146 *
o˝å
 = 
Ÿhîˇ£
;

4147 
√xt
 = 
Ÿhîˇ£
 + 1;

4149 ++
c
; c <
d
; c++)

4151 i‡((
co
 = 
	`UCD_CASESET
(
c
)Ë!0 || 
	`UCD_OTHERCASE
(cË!
√xt
) ;

4152 
√xt
++;

4155 *
od±r
 = 
√xt
 - 1;

4156 *
˝å
 = 
c
;

4158 
	}
}

4185 
	$add_to_˛ass
(
p¸e_uöt8
 *
˛assbôs
, 
p¸e_uch¨
 **
uch¨d±r
, 
›ti⁄s
,

4186 
compûe_d©a
 *
cd
, 
p¸e_uöt32
 
°¨t
,Ö¸e_uöt32 
íd
)

4188 
p¸e_uöt32
 
c
;

4189 
p¸e_uöt32
 
˛assbôs_íd
 = (
íd
 <= 0xff ?Énd : 0xff);

4190 
n8
 = 0;

4197 i‡((
›ti⁄s
 & 
PCRE_CASELESS
) != 0)

4199 #ifde‡
SUPPORT_UCP


4200 i‡((
›ti⁄s
 & 
PCRE_UTF8
) != 0)

4202 
rc
;

4203 
p¸e_uöt32
 
oc
, 
od
;

4205 
›ti⁄s
 &~
PCRE_CASELESS
;

4206 
c
 = 
°¨t
;

4208 (
rc
 = 
	`gë_Ÿhîˇ£_ønge
(&
c
, 
íd
, &
oc
, &
od
)) >= 0)

4212 i‡(
rc
 > 0Ë
n8
 +
	`add_li°_to_˛ass
(
˛assbôs
, 
uch¨d±r
, 
›ti⁄s
, 
cd
,

4213 
	`PRIV
(
ucd_ˇ£Àss_£ts
Ë+ 
rc
, 
oc
);

4217 i‡(
oc
 >
°¨t
 && 
od
 <
íd
) ;

4223 i‡(
oc
 < 
°¨t
 && 
od
 >= start - 1) start = oc;

4224 i‡(
od
 > 
íd
 && 
oc
 <=Énd + 1)

4226 
íd
 = 
od
;

4227 i‡(
íd
 > 
˛assbôs_íd
) classbits_end = (end <= 0xff ?Énd : 0xff);

4229 
n8
 +
	`add_to_˛ass
(
˛assbôs
, 
uch¨d±r
, 
›ti⁄s
, 
cd
, 
oc
, 
od
);

4237 
c
 = 
°¨t
; c <
˛assbôs_íd
; c++)

4239 
	`SETBIT
(
˛assbôs
, 
cd
->
fcc
[
c
]);

4240 
n8
++;

4248 #i‡
deföed
 
COMPILE_PCRE8


4249 #ifde‡
SUPPORT_UTF


4250 i‡((
›ti⁄s
 & 
PCRE_UTF8
) == 0)

4252 i‡(
íd
 > 0xff)Énd = 0xff;

4254 #ñi‡
deföed
 
COMPILE_PCRE16


4255 #ifde‡
SUPPORT_UTF


4256 i‡((
›ti⁄s
 & 
PCRE_UTF16
) == 0)

4258 i‡(
íd
 > 0xffff)Énd = 0xffff;

4264 
c
 = 
°¨t
; c <
˛assbôs_íd
; c++)

4267 
	`SETBIT
(
˛assbôs
, 
c
);

4268 
n8
++;

4271 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


4272 i‡(
°¨t
 <= 0xff) start = 0xff + 1;

4274 i‡(
íd
 >
°¨t
)

4276 
p¸e_uch¨
 *
uch¨d©a
 = *
uch¨d±r
;

4277 #ifde‡
SUPPORT_UTF


4278 i‡((
›ti⁄s
 & 
PCRE_UTF8
) != 0)

4280 i‡(
°¨t
 < 
íd
)

4282 *
uch¨d©a
++ = 
XCL_RANGE
;

4283 
uch¨d©a
 +
	`PRIV
(
‹d2utf
)(
°¨t
, uchardata);

4284 
uch¨d©a
 +
	`PRIV
(
‹d2utf
)(
íd
, uchardata);

4286 i‡(
°¨t
 =
íd
)

4288 *
uch¨d©a
++ = 
XCL_SINGLE
;

4289 
uch¨d©a
 +
	`PRIV
(
‹d2utf
)(
°¨t
, uchardata);

4298 #ifde‡
COMPILE_PCRE8


4301 i‡(
°¨t
 < 
íd
)

4303 *
uch¨d©a
++ = 
XCL_RANGE
;

4304 *
uch¨d©a
++ = 
°¨t
;

4305 *
uch¨d©a
++ = 
íd
;

4307 i‡(
°¨t
 =
íd
)

4309 *
uch¨d©a
++ = 
XCL_SINGLE
;

4310 *
uch¨d©a
++ = 
°¨t
;

4314 *
uch¨d±r
 = 
uch¨d©a
;

4318  
n8
;

4319 
	}
}

4349 
	$add_li°_to_˛ass
(
p¸e_uöt8
 *
˛assbôs
, 
p¸e_uch¨
 **
uch¨d±r
, 
›ti⁄s
,

4350 
compûe_d©a
 *
cd
, c⁄° 
p¸e_uöt32
 *
p
, 
ex˚±
)

4352 
n8
 = 0;

4353 
p
[0] < 
NOTACHAR
)

4355 
n
 = 0;

4356 i‡(
p
[0] !
ex˚±
)

4358 
p
[
n
+1] ==Ö[0] +Ç + 1)Ç++;

4359 
n8
 +
	`add_to_˛ass
(
˛assbôs
, 
uch¨d±r
, 
›ti⁄s
, 
cd
, 
p
[0],Ö[
n
]);

4361 
p
 +
n
 + 1;

4363  
n8
;

4364 
	}
}

4387 
	$add_nŸ_li°_to_˛ass
(
p¸e_uöt8
 *
˛assbôs
, 
p¸e_uch¨
 **
uch¨d±r
,

4388 
›ti⁄s
, 
compûe_d©a
 *
cd
, c⁄° 
p¸e_uöt32
 *
p
)

4390 
BOOL
 
utf
 = (
›ti⁄s
 & 
PCRE_UTF8
) != 0;

4391 
n8
 = 0;

4392 i‡(
p
[0] > 0)

4393 
n8
 +
	`add_to_˛ass
(
˛assbôs
, 
uch¨d±r
, 
›ti⁄s
, 
cd
, 0, 
p
[0] - 1);

4394 
p
[0] < 
NOTACHAR
)

4396 
p
[1] ==Ö[0] + 1)Ö++;

4397 
n8
 +
	`add_to_˛ass
(
˛assbôs
, 
uch¨d±r
, 
›ti⁄s
, 
cd
, 
p
[0] + 1,

4398 (
p
[1] =
NOTACHAR
Ë? (
utf
 ? 0x10ffffu : 0xffffffffu) :Ö[1] - 1);

4399 
p
++;

4401  
n8
;

4402 
	}
}

4435 
BOOL


4436 
	$compûe_bønch
(*
›ti⁄•å
, 
p¸e_uch¨
 **
codïå
,

4437 c⁄° 
p¸e_uch¨
 **
±Ωå
, *
îr‹codïå
,

4438 
p¸e_uöt32
 *
fú°ch¨±r
, 
p¸e_öt32
 *
fú°ch¨Êag•å
,

4439 
p¸e_uöt32
 *
ªqch¨±r
, 
p¸e_öt32
 *
ªqch¨Êag•å
,

4440 
bønch_chaö
 *
b˝å
, 
c⁄d_dïth
,

4441 
compûe_d©a
 *
cd
, *
Àngth±r
)

4443 
ª≥©_ty≥
, 
›_ty≥
;

4444 
ª≥©_mö
 = 0, 
ª≥©_max
 = 0;

4445 
bøvÆue
 = 0;

4446 
gªedy_deÁu…
, 
gªedy_n⁄_deÁu…
;

4447 
p¸e_uöt32
 
fú°ch¨
, 
ªqch¨
;

4448 
p¸e_öt32
 
fú°ch¨Êags
, 
ªqch¨Êags
;

4449 
p¸e_uöt32
 
zî‹eqch¨
, 
zîofú°ch¨
;

4450 
p¸e_öt32
 
zî‹eqch¨Êags
, 
zîofú°ch¨Êags
;

4451 
p¸e_öt32
 
ªq_ˇ£›t
, 
ªqv¨y
, 
ãm¥eqv¨y
;

4452 
›ti⁄s
 = *
›ti⁄•å
;

4453 
a·î_m™uÆ_ˇŒout
 = 0;

4454 
Àngth_¥evgroup
 = 0;

4455 
p¸e_uöt32
 
c
;

4456 
esˇ≥
;

4457 
p¸e_uch¨
 *
code
 = *
codïå
;

4458 
p¸e_uch¨
 *
œ°_code
 = 
code
;

4459 
p¸e_uch¨
 *
‹ig_code
 = 
code
;

4460 
p¸e_uch¨
 *
ãmpcode
;

4461 
BOOL
 
öescq
 = 
FALSE
;

4462 
BOOL
 
group£tfú°ch¨
 = 
FALSE
;

4463 c⁄° 
p¸e_uch¨
 *
±r
 = *
±Ωå
;

4464 c⁄° 
p¸e_uch¨
 *
ãmµå
;

4465 c⁄° 
p¸e_uch¨
 *
√°±r
 = 
NULL
;

4466 
p¸e_uch¨
 *
¥evious
 = 
NULL
;

4467 
p¸e_uch¨
 *
¥evious_ˇŒout
 = 
NULL
;

4468 
size_t
 
ßve_hwm_off£t
 = 0;

4469 
p¸e_uöt8
 
˛assbôs
[32];

4475 #ifde‡
SUPPORT_UTF


4477 
BOOL
 
utf
 = (
›ti⁄s
 & 
PCRE_UTF8
) != 0;

4478 #i‚de‡
COMPILE_PCRE32


4479 
p¸e_uch¨
 
utf_ch¨s
[6];

4482 
BOOL
 
utf
 = 
FALSE
;

4490 
p¸e_uch¨
 *
˛ass_uch¨d©a
;

4491 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


4492 
BOOL
 
x˛ass
;

4493 
p¸e_uch¨
 *
˛ass_uch¨d©a_ba£
;

4496 #ifde‡
PCRE_DEBUG


4497 i‡(
Àngth±r
 !
NULL
Ë
	`DPRINTF
((">> start branch\n"));

4502 
gªedy_deÁu…
 = ((
›ti⁄s
 & 
PCRE_UNGREEDY
) != 0);

4503 
gªedy_n⁄_deÁu…
 = 
gªedy_deÁu…
 ^ 1;

4515 
fú°ch¨
 = 
ªqch¨
 = 
zîofú°ch¨
 = 
zî‹eqch¨
 = 0;

4516 
fú°ch¨Êags
 = 
ªqch¨Êags
 = 
zîofú°ch¨Êags
 = 
zî‹eqch¨Êags
 = 
REQ_UNSET
;

4524 
ªq_ˇ£›t
 = ((
›ti⁄s
 & 
PCRE_CASELESS
Ë!0)? 
REQ_CASELESS
:0;

4528 ;; 
±r
++)

4530 
BOOL
 
√g©e_˛ass
;

4531 
BOOL
 
should_Êù_√g©i⁄
;

4532 
BOOL
 
pos£ssive_qu™tifõr
;

4533 
BOOL
 
is_qu™tifõr
;

4534 
BOOL
 
is_ªcur£
;

4535 
BOOL
 
ª£t_bøcou¡
;

4536 
˛ass_has_8bôch¨
;

4537 
˛ass_⁄e_ch¨
;

4538 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


4539 
BOOL
 
x˛ass_has_¥›
;

4541 
√w›ti⁄s
;

4542 
ª˙o
;

4543 
ªfsign
;

4544 
skùbyãs
;

4545 
p¸e_uöt32
 
subªqch¨
, 
subfú°ch¨
;

4546 
p¸e_öt32
 
subªqch¨Êags
, 
subfú°ch¨Êags
;

4547 
ãrmö©‹
;

4548 
m˛ígth
;

4549 
ãmpbøcou¡
;

4550 
p¸e_uöt32
 
ec
;

4551 
p¸e_uch¨
 
mcbuf„r
[8];

4555 
c
 = *
±r
;

4560 i‡(
c
 =
CHAR_NULL
 && 
√°±r
 !
NULL
)

4562 
±r
 = 
√°±r
;

4563 
√°±r
 = 
NULL
;

4564 
c
 = *
±r
;

4570 i‡(
Àngth±r
 !
NULL
)

4572 #ifde‡
PCRE_DEBUG


4573 i‡(
code
 > 
cd
->
hwm
) cd->hwm = code;

4575 i‡(
code
 > 
cd
->
°¨t_w‹k•a˚
 + cd->
w‹k•a˚_size
 -

4576 
WORK_SIZE_SAFETY_MARGIN
)

4578 *
îr‹codïå
 = 
ERR52
;

4579 
FAILED
;

4588 i‡(
code
 < 
œ°_code
) code =Üast_code;

4592 i‡(
OFLOW_MAX
 - *
Àngth±r
 < 
code
 - 
œ°_code
)

4594 *
îr‹codïå
 = 
ERR20
;

4595 
FAILED
;

4598 *
Àngth±r
 +()(
code
 - 
œ°_code
);

4599 
	`DPRINTF
(("Àngth=%dádded %d c=%¯(0x%x)\n", *
Àngth±r
,

4600 ()(
code
 - 
œ°_code
), 
c
, c));

4606 i‡(
¥evious
 !
NULL
)

4608 i‡(
¥evious
 > 
‹ig_code
)

4610 
	`memmove
(
‹ig_code
, 
¥evious
, 
	`IN_UCHARS
(
code
 -Örevious));

4611 
code
 -
¥evious
 - 
‹ig_code
;

4612 
¥evious
 = 
‹ig_code
;

4615 
code
 = 
‹ig_code
;

4620 
œ°_code
 = 
code
;

4626 i‡(
cd
->
hwm
 > cd->
°¨t_w‹k•a˚
 + cd->
w‹k•a˚_size
 -

4627 
WORK_SIZE_SAFETY_MARGIN
)

4629 *
îr‹codïå
 = 
ERR52
;

4630 
FAILED
;

4635 i‡(
öescq
 && 
c
 !
CHAR_NULL
)

4637 i‡(
c
 =
CHAR_BACKSLASH
 && 
±r
[1] =
CHAR_E
)

4639 
öescq
 = 
FALSE
;

4640 
±r
++;

4645 i‡(
¥evious_ˇŒout
 !
NULL
)

4647 i‡(
Àngth±r
 =
NULL
)

4648 
	`com∂ëe_ˇŒout
(
¥evious_ˇŒout
, 
±r
, 
cd
);

4649 
¥evious_ˇŒout
 = 
NULL
;

4651 i‡((
›ti⁄s
 & 
PCRE_AUTO_CALLOUT
) != 0)

4653 
¥evious_ˇŒout
 = 
code
;

4654 
code
 = 
	`auto_ˇŒout
(code, 
±r
, 
cd
);

4656 
NORMAL_CHAR
;

4664 i‡((
›ti⁄s
 & 
PCRE_EXTENDED
) != 0)

4668 
	`MAX_255
(
c
Ë&& (
cd
->
˘y≥s
[c] & 
˘y≥_•a˚
Ë!0Ë¯*(++
±r
);

4669 i‡(
c
 !
CHAR_NUMBER_SIGN
) ;

4670 
±r
++;

4671 *
±r
 !
CHAR_NULL
)

4673 i‡(
	`IS_NEWLINE
(
±r
))

4675 
±r
 +
cd
->
∆Àn
;

4678 
±r
++;

4679 #ifde‡
SUPPORT_UTF


4680 i‡(
utf
Ë
	`FORWARDCHAR
(
±r
);

4683 
c
 = *
±r
;

4689 
is_qu™tifõr
 =

4690 
c
 =
CHAR_ASTERISK
 || c =
CHAR_PLUS
 || c =
CHAR_QUESTION_MARK
 ||

4691 (
c
 =
CHAR_LEFT_CURLY_BRACKET
 && 
	`is_cou¡ed_ª≥©
(
±r
+1));

4696 i‡(!
is_qu™tifõr
 && 
¥evious_ˇŒout
 !
NULL
 && 
√°±r
 == NULL &&

4697 
a·î_m™uÆ_ˇŒout
-- <= 0)

4699 i‡(
Àngth±r
 =
NULL
)

4700 
	`com∂ëe_ˇŒout
(
¥evious_ˇŒout
, 
±r
, 
cd
);

4701 
¥evious_ˇŒout
 = 
NULL
;

4707 i‡((
›ti⁄s
 & 
PCRE_AUTO_CALLOUT
Ë!0 && !
is_qu™tifõr
 && 
√°±r
 =
NULL
)

4709 
¥evious_ˇŒout
 = 
code
;

4710 
code
 = 
	`auto_ˇŒout
(code, 
±r
, 
cd
);

4715 
c
)

4718 
CHAR_NULL
:

4719 
CHAR_VERTICAL_LINE
:

4720 
CHAR_RIGHT_PARENTHESIS
:

4721 *
fú°ch¨±r
 = 
fú°ch¨
;

4722 *
fú°ch¨Êag•å
 = 
fú°ch¨Êags
;

4723 *
ªqch¨±r
 = 
ªqch¨
;

4724 *
ªqch¨Êag•å
 = 
ªqch¨Êags
;

4725 *
codïå
 = 
code
;

4726 *
±Ωå
 = 
±r
;

4727 i‡(
Àngth±r
 !
NULL
)

4729 i‡(
OFLOW_MAX
 - *
Àngth±r
 < 
code
 - 
œ°_code
)

4731 *
îr‹codïå
 = 
ERR20
;

4732 
FAILED
;

4734 *
Àngth±r
 +()(
code
 - 
œ°_code
);

4735 
	`DPRINTF
((">>Énd branch\n"));

4737  
TRUE
;

4744 
CHAR_CIRCUMFLEX_ACCENT
:

4745 
¥evious
 = 
NULL
;

4746 i‡((
›ti⁄s
 & 
PCRE_MULTILINE
) != 0)

4748 i‡(
fú°ch¨Êags
 =
REQ_UNSET
)

4749 
zîofú°ch¨Êags
 = 
fú°ch¨Êags
 = 
REQ_NONE
;

4750 *
code
++ = 
OP_CIRCM
;

4752 *
code
++ = 
OP_CIRC
;

4755 
CHAR_DOLLAR_SIGN
:

4756 
¥evious
 = 
NULL
;

4757 *
code
++ = ((
›ti⁄s
 & 
PCRE_MULTILINE
Ë!0)? 
OP_DOLLM
 : 
OP_DOLL
;

4763 
CHAR_DOT
:

4764 i‡(
fú°ch¨Êags
 =
REQ_UNSET
Ëfú°ch¨Êag†
REQ_NONE
;

4765 
zîofú°ch¨
 = 
fú°ch¨
;

4766 
zîofú°ch¨Êags
 = 
fú°ch¨Êags
;

4767 
zî‹eqch¨
 = 
ªqch¨
;

4768 
zî‹eqch¨Êags
 = 
ªqch¨Êags
;

4769 
¥evious
 = 
code
;

4770 *
code
++ = ((
›ti⁄s
 & 
PCRE_DOTALL
Ë!0)? 
OP_ALLANY
: 
OP_ANY
;

4789 
CHAR_RIGHT_SQUARE_BRACKET
:

4790 i‡((
cd
->
exã∫Æ_›ti⁄s
 & 
PCRE_JAVASCRIPT_COMPAT
) != 0)

4792 *
îr‹codïå
 = 
ERR64
;

4793 
FAILED
;

4795 
NORMAL_CHAR
;

4803 
CHAR_LEFT_SQUARE_BRACKET
:

4804 i‡(
	`STRNCMP_UC_C8
(
±r
+1, 
STRING_WEIRD_STARTWORD
, 6) == 0)

4806 
√°±r
 = 
±r
 + 7;

4807 
±r
 = 
sub_°¨t_of_w‹d
 - 1;

4811 i‡(
	`STRNCMP_UC_C8
(
±r
+1, 
STRING_WEIRD_ENDWORD
, 6) == 0)

4813 
√°±r
 = 
±r
 + 7;

4814 
±r
 = 
sub_íd_of_w‹d
 - 1;

4820 
¥evious
 = 
code
;

4825 i‡((
±r
[1] =
CHAR_COLON
 ||Öå[1] =
CHAR_DOT
 ||

4826 
±r
[1] =
CHAR_EQUALS_SIGN
) &&

4827 
	`check_posix_sy¡ax
(
±r
, &
ãmµå
))

4829 *
îr‹codïå
 = (
±r
[1] =
CHAR_COLON
)? 
ERR13
 : 
ERR31
;

4830 
FAILED
;

4837 
√g©e_˛ass
 = 
FALSE
;

4840 
c
 = *(++
±r
);

4841 i‡(
c
 =
CHAR_BACKSLASH
)

4843 i‡(
±r
[1] =
CHAR_E
)

4844 
±r
++;

4845 i‡(
	`STRNCMP_UC_C8
(
±r
 + 1, 
STR_Q
 
STR_BACKSLASH
 
STR_E
, 3) == 0)

4846 
±r
 += 3;

4850 i‡(!
√g©e_˛ass
 && 
c
 =
CHAR_CIRCUMFLEX_ACCENT
)

4851 
√g©e_˛ass
 = 
TRUE
;

4860 i‡(
c
 =
CHAR_RIGHT_SQUARE_BRACKET
 &&

4861 (
cd
->
exã∫Æ_›ti⁄s
 & 
PCRE_JAVASCRIPT_COMPAT
) != 0)

4863 *
code
++ = 
√g©e_˛ass
? 
OP_ALLANY
 : 
OP_FAIL
;

4864 i‡(
fú°ch¨Êags
 =
REQ_UNSET
Ëfú°ch¨Êag†
REQ_NONE
;

4865 
zîofú°ch¨
 = 
fú°ch¨
;

4866 
zîofú°ch¨Êags
 = 
fú°ch¨Êags
;

4874 
should_Êù_√g©i⁄
 = 
FALSE
;

4879 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


4880 
x˛ass
 = 
FALSE
;

4881 
˛ass_uch¨d©a
 = 
code
 + 
LINK_SIZE
 + 2;

4882 
˛ass_uch¨d©a_ba£
 = 
˛ass_uch¨d©a
;

4891 
˛ass_has_8bôch¨
 = 0;

4892 
˛ass_⁄e_ch¨
 = 0;

4893 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


4894 
x˛ass_has_¥›
 = 
FALSE
;

4902 
	`mem£t
(
˛assbôs
, 0, 32 * (
p¸e_uöt8
));

4908 i‡(
c
 !
CHAR_NULL
) do

4910 c⁄° 
p¸e_uch¨
 *
ﬁd±r
;

4912 #ifde‡
SUPPORT_UTF


4913 i‡(
utf
 && 
	`HAS_EXTRALEN
(
c
))

4915 
	`GETCHARLEN
(
c
, 
±r
,Ötr);

4919 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


4926 i‡(
Àngth±r
 !
NULL
 && 
˛ass_uch¨d©a
 > 
˛ass_uch¨d©a_ba£
)

4928 
x˛ass
 = 
TRUE
;

4929 *
Àngth±r
 +()(
˛ass_uch¨d©a
 - 
˛ass_uch¨d©a_ba£
);

4930 
˛ass_uch¨d©a
 = 
˛ass_uch¨d©a_ba£
;

4936 i‡(
öescq
)

4938 i‡(
c
 =
CHAR_BACKSLASH
 && 
±r
[1] =
CHAR_E
)

4940 
öescq
 = 
FALSE
;

4941 
±r
++;

4944 
CHECK_RANGE
;

4953 i‡(
c
 =
CHAR_LEFT_SQUARE_BRACKET
 &&

4954 (
±r
[1] =
CHAR_COLON
 ||Öå[1] =
CHAR_DOT
 ||

4955 
±r
[1] =
CHAR_EQUALS_SIGN
Ë&& 
	`check_posix_sy¡ax
’å, &
ãmµå
))

4957 
BOOL
 
loˇl_√g©e
 = 
FALSE
;

4958 
posix_˛ass
, 
èboff£t
, 
èb›t
;

4959 c⁄° 
p¸e_uöt8
 *
cbôs
 = 
cd
->cbits;

4960 
p¸e_uöt8
 
pbôs
[32];

4962 i‡(
±r
[1] !
CHAR_COLON
)

4964 *
îr‹codïå
 = 
ERR31
;

4965 
FAILED
;

4968 
±r
 += 2;

4969 i‡(*
±r
 =
CHAR_CIRCUMFLEX_ACCENT
)

4971 
loˇl_√g©e
 = 
TRUE
;

4972 
should_Êù_√g©i⁄
 = 
TRUE
;

4973 
±r
++;

4976 
posix_˛ass
 = 
	`check_posix_«me
(
±r
, ()(
ãmµå
 -Ötr));

4977 i‡(
posix_˛ass
 < 0)

4979 *
îr‹codïå
 = 
ERR30
;

4980 
FAILED
;

4987 i‡((
›ti⁄s
 & 
PCRE_CASELESS
Ë!0 && 
posix_˛ass
 <= 2)

4988 
posix_˛ass
 = 0;

4995 #ifde‡
SUPPORT_UCP


4996 i‡((
›ti⁄s
 & 
PCRE_UCP
) != 0)

4998 
±y≥
 = 0;

4999 
pc
 = 
posix_˛ass
 + ((
loˇl_√g©e
)? 
POSIX_SUBSIZE
/2 : 0);

5004 i‡(
posix_sub°ôuãs
[
pc
] !
NULL
)

5006 
√°±r
 = 
ãmµå
 + 1;

5007 
±r
 = 
posix_sub°ôuãs
[
pc
] - 1;

5014 
posix_˛ass
)

5016 
PC_GRAPH
:

5017 
±y≥
 = 
PT_PXGRAPH
;

5019 
PC_PRINT
:

5020 i‡(
±y≥
 =0Ë±y≥ = 
PT_PXPRINT
;

5022 
PC_PUNCT
:

5023 i‡(
±y≥
 =0Ë±y≥ = 
PT_PXPUNCT
;

5024 *
˛ass_uch¨d©a
++ = 
loˇl_√g©e
? 
XCL_NOTPROP
 : 
XCL_PROP
;

5025 *
˛ass_uch¨d©a
++ = 
±y≥
;

5026 *
˛ass_uch¨d©a
++ = 0;

5027 
x˛ass_has_¥›
 = 
TRUE
;

5028 
±r
 = 
ãmµå
 + 1;

5045 
posix_˛ass
 *= 3;

5049 
	`mem˝y
(
pbôs
, 
cbôs
 + 
posix_˛ass_m≠s
[
posix_˛ass
],

5050 32 * (
p¸e_uöt8
));

5054 
èboff£t
 = 
posix_˛ass_m≠s
[
posix_˛ass
 + 1];

5055 
èb›t
 = 
posix_˛ass_m≠s
[
posix_˛ass
 + 2];

5057 i‡(
èboff£t
 >= 0)

5059 i‡(
èb›t
 >= 0)

5060 
c
 = 0; c < 32; c++Ë
pbôs
[c] |
cbôs
[¯+ 
èboff£t
];

5062 
c
 = 0; c < 32; c++Ë
pbôs
[c] &~
cbôs
[¯+ 
èboff£t
];

5068 i‡(
èb›t
 < 0)Åabopt = -tabopt;

5069 i‡(
èb›t
 =1Ë
pbôs
[1] &= ~0x3c;

5070 i‡(
èb›t
 =2Ë
pbôs
[11] &= 0x7f;

5075 i‡(
loˇl_√g©e
)

5076 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] |~
pbôs
[c];

5078 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] |
pbôs
[c];

5080 
±r
 = 
ãmµå
 + 1;

5082 
˛ass_has_8bôch¨
 = 1;

5084 
˛ass_⁄e_ch¨
 = 2;

5097 i‡(
c
 =
CHAR_BACKSLASH
)

5099 
esˇ≥
 = 
	`check_esˇ≥
(&
±r
, &
ec
, 
îr‹codïå
, 
cd
->
bøcou¡
, 
›ti⁄s
,

5100 
TRUE
);

5101 i‡(*
îr‹codïå
 !0Ë
FAILED
;

5102 i‡(
esˇ≥
 =0Ë
c
 = 
ec
;

5103 i‡(
esˇ≥
 =
ESC_b
Ë
c
 = 
CHAR_BS
;

5104 i‡(
esˇ≥
 =
ESC_N
)

5106 *
îr‹codïå
 = 
ERR71
;

5107 
FAILED
;

5109 i‡(
esˇ≥
 =
ESC_Q
)

5111 i‡(
±r
[1] =
CHAR_BACKSLASH
 &&Öå[2] =
CHAR_E
)

5113 
±r
 += 2;

5115 
öescq
 = 
TRUE
;

5118 i‡(
esˇ≥
 =
ESC_E
) ;

5122 c⁄° 
p¸e_uöt8
 *
cbôs
 = 
cd
->cbits;

5124 
˛ass_has_8bôch¨
++;

5126 
˛ass_⁄e_ch¨
 += 2;

5128 
esˇ≥
)

5130 #ifde‡
SUPPORT_UCP


5131 
ESC_du
:

5132 
ESC_DU
:

5133 
ESC_wu
:

5134 
ESC_WU
:

5135 
ESC_su
:

5136 
ESC_SU
:

5137 
√°±r
 = 
±r
;

5138 
±r
 = 
sub°ôuãs
[
esˇ≥
 - 
ESC_DU
] - 1;

5139 
˛ass_has_8bôch¨
--;

5142 
ESC_d
:

5143 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] |
cbôs
[c+
cbô_digô
];

5146 
ESC_D
:

5147 
should_Êù_√g©i⁄
 = 
TRUE
;

5148 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] |~
cbôs
[c+
cbô_digô
];

5151 
ESC_w
:

5152 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] |
cbôs
[c+
cbô_w‹d
];

5155 
ESC_W
:

5156 
should_Êù_√g©i⁄
 = 
TRUE
;

5157 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] |~
cbôs
[c+
cbô_w‹d
];

5167 
ESC_s
:

5168 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] |
cbôs
[c+
cbô_•a˚
];

5171 
ESC_S
:

5172 
should_Êù_√g©i⁄
 = 
TRUE
;

5173 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] |~
cbôs
[c+
cbô_•a˚
];

5178 
ESC_h
:

5179 ()
	`add_li°_to_˛ass
(
˛assbôs
, &
˛ass_uch¨d©a
, 
›ti⁄s
, 
cd
,

5180 
	`PRIV
(
h•a˚_li°
), 
NOTACHAR
);

5183 
ESC_H
:

5184 ()
	`add_nŸ_li°_to_˛ass
(
˛assbôs
, &
˛ass_uch¨d©a
, 
›ti⁄s
,

5185 
cd
, 
	`PRIV
(
h•a˚_li°
));

5188 
ESC_v
:

5189 ()
	`add_li°_to_˛ass
(
˛assbôs
, &
˛ass_uch¨d©a
, 
›ti⁄s
, 
cd
,

5190 
	`PRIV
(
v•a˚_li°
), 
NOTACHAR
);

5193 
ESC_V
:

5194 ()
	`add_nŸ_li°_to_˛ass
(
˛assbôs
, &
˛ass_uch¨d©a
, 
›ti⁄s
,

5195 
cd
, 
	`PRIV
(
v•a˚_li°
));

5198 #ifde‡
SUPPORT_UCP


5199 
ESC_p
:

5200 
ESC_P
:

5202 
BOOL
 
√g©ed
;

5203 
±y≥
 = 0, 
pd©a
 = 0;

5204 i‡(!
	`gë_u˝
(&
±r
, &
√g©ed
, &
±y≥
, &
pd©a
, 
îr‹codïå
))

5205 
FAILED
;

5206 *
˛ass_uch¨d©a
++ = ((
esˇ≥
 =
ESC_p
Ë!
√g©ed
)?

5207 
XCL_PROP
 : 
XCL_NOTPROP
;

5208 *
˛ass_uch¨d©a
++ = 
±y≥
;

5209 *
˛ass_uch¨d©a
++ = 
pd©a
;

5210 
x˛ass_has_¥›
 = 
TRUE
;

5211 
˛ass_has_8bôch¨
--;

5220 i‡((
›ti⁄s
 & 
PCRE_EXTRA
) != 0)

5222 *
îr‹codïå
 = 
ERR7
;

5223 
FAILED
;

5225 
˛ass_has_8bôch¨
--;

5226 
˛ass_⁄e_ch¨
 -= 2;

5227 
c
 = *
±r
;

5235 
esˇ≥
 = 0;

5244 
CHECK_RANGE
:

5245 
±r
[1] =
CHAR_BACKSLASH
 &&Öå[2] =
CHAR_E
)

5247 
öescq
 = 
FALSE
;

5248 
±r
 += 2;

5250 
ﬁd±r
 = 
±r
;

5254 i‡(
c
 =
CHAR_CR
 || c =
CHAR_NL
Ë
cd
->
exã∫Æ_Êags
 |
PCRE_HASCRORLF
;

5258 i‡(!
öescq
 && 
±r
[1] =
CHAR_MINUS
)

5260 
p¸e_uöt32
 
d
;

5261 
±r
 += 2;

5262 *
±r
 =
CHAR_BACKSLASH
 &&Öå[1] =
CHAR_E
)Ötr += 2;

5267 *
±r
 =
CHAR_BACKSLASH
 &&Öå[1] =
CHAR_Q
)

5269 
±r
 += 2;

5270 i‡(*
±r
 =
CHAR_BACKSLASH
 &&Öå[1] =
CHAR_E
)

5271 { 
±r
 += 2; ; }

5272 
öescq
 = 
TRUE
;

5279 i‡(*
±r
 =
CHAR_NULL
 || (!
öescq
 && *±∏=
CHAR_RIGHT_SQUARE_BRACKET
))

5281 
±r
 = 
ﬁd±r
;

5282 
CLASS_SINGLE_CHARACTER
;

5287 #ifde‡
SUPPORT_UTF


5288 i‡(
utf
)

5290 
	`GETCHARLEN
(
d
, 
±r
,Ötr);

5294 
d
 = *
±r
;

5302 i‡(!
öescq
)

5304 i‡(
d
 =
CHAR_BACKSLASH
)

5306 
desˇ≥
;

5307 
desˇ≥
 = 
	`check_esˇ≥
(&
±r
, &
d
, 
îr‹codïå
, 
cd
->
bøcou¡
, 
›ti⁄s
, 
TRUE
);

5308 i‡(*
îr‹codïå
 !0Ë
FAILED
;

5313 i‡(
desˇ≥
 != 0)

5315 i‡(
desˇ≥
 =
ESC_b
Ë
d
 = 
CHAR_BS
; 

5317 *
îr‹codïå
 = 
ERR83
;

5318 
FAILED
;

5325 i‡(
d
 =
CHAR_LEFT_SQUARE_BRACKET
 &&

5326 (
±r
[1] =
CHAR_COLON
 ||Öå[1] =
CHAR_DOT
 ||

5327 
±r
[1] =
CHAR_EQUALS_SIGN
) &&

5328 
	`check_posix_sy¡ax
(
±r
, &
ãmµå
))

5330 *
îr‹codïå
 = 
ERR83
;

5331 
FAILED
;

5338 i‡(
d
 < 
c
)

5340 *
îr‹codïå
 = 
ERR8
;

5341 
FAILED
;

5343 i‡(
d
 =
c
Ë
CLASS_SINGLE_CHARACTER
;

5349 
˛ass_⁄e_ch¨
 = 2;

5353 i‡(
d
 =
CHAR_CR
 || d =
CHAR_NL
Ë
cd
->
exã∫Æ_Êags
 |
PCRE_HASCRORLF
;

5355 
˛ass_has_8bôch¨
 +=

5356 
	`add_to_˛ass
(
˛assbôs
, &
˛ass_uch¨d©a
, 
›ti⁄s
, 
cd
, 
c
, 
d
);

5367 
CLASS_SINGLE_CHARACTER
:

5368 i‡(
˛ass_⁄e_ch¨
 < 2) class_one_char++;

5379 i‡(!
öescq
 && 
˛ass_⁄e_ch¨
 =1 && 
±r
[1] =
CHAR_RIGHT_SQUARE_BRACKET
)

5381 
±r
++;

5382 
zî‹eqch¨
 = 
ªqch¨
;

5383 
zî‹eqch¨Êags
 = 
ªqch¨Êags
;

5385 i‡(
√g©e_˛ass
)

5387 #ifde‡
SUPPORT_UCP


5388 
d
;

5390 i‡(
fú°ch¨Êags
 =
REQ_UNSET
Ëfú°ch¨Êag†
REQ_NONE
;

5391 
zîofú°ch¨
 = 
fú°ch¨
;

5392 
zîofú°ch¨Êags
 = 
fú°ch¨Êags
;

5398 #ifde‡
SUPPORT_UCP


5399 i‡(
utf
 && (
›ti⁄s
 & 
PCRE_CASELESS
) != 0 &&

5400 (
d
 = 
	`UCD_CASESET
(
c
)) != 0)

5402 *
code
++ = 
OP_NOTPROP
;

5403 *
code
++ = 
PT_CLIST
;

5404 *
code
++ = 
d
;

5411 *
code
++ = ((
›ti⁄s
 & 
PCRE_CASELESS
Ë!0)? 
OP_NOTI
: 
OP_NOT
;

5412 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


5413 i‡(
utf
 && 
c
 > 
MAX_VALUE_FOR_SINGLE_CHAR
)

5414 
code
 +
	`PRIV
(
‹d2utf
)(
c
, code);

5417 *
code
++ = 
c
;

5422 
END_CLASS
;

5428 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


5429 i‡(
utf
 && 
c
 > 
MAX_VALUE_FOR_SINGLE_CHAR
)

5430 
m˛ígth
 = 
	`PRIV
(
‹d2utf
)(
c
, 
mcbuf„r
);

5434 
mcbuf„r
[0] = 
c
;

5435 
m˛ígth
 = 1;

5437 
ONE_CHAR
;

5443 
˛ass_has_8bôch¨
 +=

5444 
	`add_to_˛ass
(
˛assbôs
, &
˛ass_uch¨d©a
, 
›ti⁄s
, 
cd
, 
c
, c);

5451 ((
c
 = *(++
±r
)Ë!
CHAR_NULL
 ||

5452 (
√°±r
 !
NULL
 &&

5453 (
±r
 = 
√°±r
,Çe°±∏
NULL
, 
c
 = *(++±r)Ë!
CHAR_NULL
)) &&

5454 (
c
 !
CHAR_RIGHT_SQUARE_BRACKET
 || 
öescq
));

5458 i‡(
c
 =
CHAR_NULL
)

5460 *
îr‹codïå
 = 
ERR6
;

5461 
FAILED
;

5472 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


5473 i‡(
˛ass_uch¨d©a
 > 
˛ass_uch¨d©a_ba£
Ë
x˛ass
 = 
TRUE
;

5480 i‡(
fú°ch¨Êags
 =
REQ_UNSET
Ëfú°ch¨Êag†
REQ_NONE
;

5481 
zîofú°ch¨
 = 
fú°ch¨
;

5482 
zîofú°ch¨Êags
 = 
fú°ch¨Êags
;

5483 
zî‹eqch¨
 = 
ªqch¨
;

5484 
zî‹eqch¨Êags
 = 
ªqch¨Êags
;

5494 #ifde‡
SUPPORT_UTF


5495 i‡(
x˛ass
 && (!
should_Êù_√g©i⁄
 || (
›ti⁄s
 & 
PCRE_UCP
) != 0))

5496 #ñi‡!
deföed
 
COMPILE_PCRE8


5497 i‡(
x˛ass
 && !
should_Êù_√g©i⁄
)

5499 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


5501 *
˛ass_uch¨d©a
++ = 
XCL_END
;

5502 *
code
++ = 
OP_XCLASS
;

5503 
code
 +
LINK_SIZE
;

5504 *
code
 = 
√g©e_˛ass
? 
XCL_NOT
:0;

5505 i‡(
x˛ass_has_¥›
Ë*
code
 |
XCL_HASPROP
;

5510 i‡(
˛ass_has_8bôch¨
 > 0)

5512 *
code
++ |
XCL_MAP
;

5513 
	`memmove
(
code
 + (32 / (
p¸e_uch¨
)), code,

5514 
	`IN_UCHARS
(
˛ass_uch¨d©a
 - 
code
));

5515 i‡(
√g©e_˛ass
 && !
x˛ass_has_¥›
)

5516 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] = ~classbits[c];

5517 
	`mem˝y
(
code
, 
˛assbôs
, 32);

5518 
code
 = 
˛ass_uch¨d©a
 + (32 / (
p¸e_uch¨
));

5520 
code
 = 
˛ass_uch¨d©a
;

5524 
	`PUT
(
¥evious
, 1, ()(
code
 -Örevious));

5531 i‡(
Àngth±r
 !
NULL
)

5532 *
Àngth±r
 +()(
˛ass_uch¨d©a
 - 
˛ass_uch¨d©a_ba£
);

5541 *
code
++ = (
√g©e_˛ass
 =
should_Êù_√g©i⁄
Ë? 
OP_CLASS
 : 
OP_NCLASS
;

5542 i‡(
Àngth±r
 =
NULL
)

5544 i‡(
√g©e_˛ass
)

5545 
c
 = 0; c < 32; c++Ë
˛assbôs
[c] = ~classbits[c];

5546 
	`mem˝y
(
code
, 
˛assbôs
, 32);

5548 
code
 +32 / (
p¸e_uch¨
);

5550 
END_CLASS
:

5558 
CHAR_LEFT_CURLY_BRACKET
:

5559 i‡(!
is_qu™tifõr
Ë
NORMAL_CHAR
;

5560 
±r
 = 
	`ªad_ª≥©_cou¡s
’å+1, &
ª≥©_mö
, &
ª≥©_max
, 
îr‹codïå
);

5561 i‡(*
îr‹codïå
 !0Ë
FAILED
;

5562 
REPEAT
;

5564 
CHAR_ASTERISK
:

5565 
ª≥©_mö
 = 0;

5566 
ª≥©_max
 = -1;

5567 
REPEAT
;

5569 
CHAR_PLUS
:

5570 
ª≥©_mö
 = 1;

5571 
ª≥©_max
 = -1;

5572 
REPEAT
;

5574 
CHAR_QUESTION_MARK
:

5575 
ª≥©_mö
 = 0;

5576 
ª≥©_max
 = 1;

5578 
REPEAT
:

5579 i‡(
¥evious
 =
NULL
)

5581 *
îr‹codïå
 = 
ERR9
;

5582 
FAILED
;

5585 i‡(
ª≥©_mö
 == 0)

5587 
fú°ch¨
 = 
zîofú°ch¨
;

5588 
fú°ch¨Êags
 = 
zîofú°ch¨Êags
;

5589 
ªqch¨
 = 
zî‹eqch¨
;

5590 
ªqch¨Êags
 = 
zî‹eqch¨Êags
;

5595 
ªqv¨y
 = (
ª≥©_mö
 =
ª≥©_max
)? 0 : 
REQ_VARY
;

5597 
›_ty≥
 = 0;

5598 
pos£ssive_qu™tifõr
 = 
FALSE
;

5603 
ãmpcode
 = 
¥evious
;

5609 i‡((
›ti⁄s
 & 
PCRE_EXTENDED
) != 0)

5611 c⁄° 
p¸e_uch¨
 *
p
 = 
±r
 + 1;

5614 
	`MAX_255
(*
p
Ë&& (
cd
->
˘y≥s
[*p] & 
˘y≥_•a˚
) != 0)Ö++;

5615 i‡(*
p
 !
CHAR_NUMBER_SIGN
) ;

5616 
p
++;

5617 *
p
 !
CHAR_NULL
)

5619 i‡(
	`IS_NEWLINE
(
p
))

5621 
p
 +
cd
->
∆Àn
;

5624 
p
++;

5625 #ifde‡
SUPPORT_UTF


5626 i‡(
utf
Ë
	`FORWARDCHAR
(
p
);

5630 
±r
 = 
p
 - 1;

5639 i‡(
±r
[1] =
CHAR_PLUS
)

5641 
ª≥©_ty≥
 = 0;

5642 
pos£ssive_qu™tifõr
 = 
TRUE
;

5643 
±r
++;

5645 i‡(
±r
[1] =
CHAR_QUESTION_MARK
)

5647 
ª≥©_ty≥
 = 
gªedy_n⁄_deÁu…
;

5648 
±r
++;

5650 
ª≥©_ty≥
 = 
gªedy_deÁu…
;

5658 i‡(*
¥evious
 =
OP_RECURSE
)

5660 
	`memmove
(
¥evious
 + 1 + 
LINK_SIZE
,Öªvious, 
	`IN_UCHARS
(1 + LINK_SIZE));

5661 *
¥evious
 = 
OP_ONCE
;

5662 
	`PUT
(
¥evious
, 1, 2 + 2*
LINK_SIZE
);

5663 
¥evious
[2 + 2*
LINK_SIZE
] = 
OP_KET
;

5664 
	`PUT
(
¥evious
, 3 + 2*
LINK_SIZE
, 2 + 2*LINK_SIZE);

5665 
code
 +2 + 2 * 
LINK_SIZE
;

5666 
Àngth_¥evgroup
 = 3 + 3*
LINK_SIZE
;

5671 i‡(
Àngth±r
 =
NULL
 && 
cd
->
hwm
 >cd->
°¨t_w‹k•a˚
 + 
LINK_SIZE
)

5673 
off£t
 = 
	`GET
(
cd
->
hwm
, -
LINK_SIZE
);

5674 i‡(
off£t
 =
¥evious
 + 1 - 
cd
->
°¨t_code
)

5675 
	`PUT
(
cd
->
hwm
, -
LINK_SIZE
, 
off£t
 + 1 + LINK_SIZE);

5687 i‡(*
¥evious
 =
OP_CHAR
 || *¥eviou†=
OP_CHARI


5688 || *
¥evious
 =
OP_NOT
 || *¥eviou†=
OP_NOTI
)

5690 *
¥evious
)

5693 
OP_CHAR
: 
›_ty≥
 = 
OP_STAR
 - OP_STAR; ;

5694 
OP_CHARI
: 
›_ty≥
 = 
OP_STARI
 - 
OP_STAR
; ;

5695 
OP_NOT
: 
›_ty≥
 = 
OP_NOTSTAR
 - 
OP_STAR
; ;

5696 
OP_NOTI
: 
›_ty≥
 = 
OP_NOTSTARI
 - 
OP_STAR
; ;

5704 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


5705 i‡(
utf
 && 
	`NOT_FIRSTCHAR
(
code
[-1]))

5707 
p¸e_uch¨
 *
œ°ch¨
 = 
code
 - 1;

5708 
	`BACKCHAR
(
œ°ch¨
);

5709 
c
 = ()(
code
 - 
œ°ch¨
);

5710 
	`mem˝y
(
utf_ch¨s
, 
œ°ch¨
, 
	`IN_UCHARS
(
c
));

5711 
c
 |
UTF_LENGTH
;

5719 
c
 = 
code
[-1];

5720 i‡(*
¥evious
 <
OP_CHARI
 && 
ª≥©_mö
 > 1)

5722 
ªqch¨
 = 
c
;

5723 
ªqch¨Êags
 = 
ªq_ˇ£›t
 | 
cd
->
ªq_v¨y›t
;

5727 
OUTPUT_SINGLE_REPEAT
;

5737 i‡(*
¥evious
 < 
OP_EODN
)

5739 
p¸e_uch¨
 *
ﬁdcode
;

5740 
¥›_ty≥
, 
¥›_vÆue
;

5741 
›_ty≥
 = 
OP_TYPESTAR
 - 
OP_STAR
;

5742 
c
 = *
¥evious
;

5744 
OUTPUT_SINGLE_REPEAT
:

5745 i‡(*
¥evious
 =
OP_PROP
 || *¥eviou†=
OP_NOTPROP
)

5747 
¥›_ty≥
 = 
¥evious
[1];

5748 
¥›_vÆue
 = 
¥evious
[2];

5750 
¥›_ty≥
 = 
¥›_vÆue
 = -1;

5752 
ﬁdcode
 = 
code
;

5753 
code
 = 
¥evious
;

5758 i‡(
ª≥©_max
 =0Ë
END_REPEAT
;

5762 
ª≥©_ty≥
 +
›_ty≥
;

5767 i‡(
ª≥©_mö
 == 0)

5769 i‡(
ª≥©_max
 =-1Ë*
code
++ = 
OP_STAR
 + 
ª≥©_ty≥
;

5770 i‡(
ª≥©_max
 =1Ë*
code
++ = 
OP_QUERY
 + 
ª≥©_ty≥
;

5773 *
code
++ = 
OP_UPTO
 + 
ª≥©_ty≥
;

5774 
	`PUT2INC
(
code
, 0, 
ª≥©_max
);

5783 i‡(
ª≥©_mö
 == 1)

5785 i‡(
ª≥©_max
 == -1)

5786 *
code
++ = 
OP_PLUS
 + 
ª≥©_ty≥
;

5789 
code
 = 
ﬁdcode
;

5790 i‡(
ª≥©_max
 =1Ë
END_REPEAT
;

5791 *
code
++ = 
OP_UPTO
 + 
ª≥©_ty≥
;

5792 
	`PUT2INC
(
code
, 0, 
ª≥©_max
 - 1);

5801 *
code
++ = 
OP_EXACT
 + 
›_ty≥
;

5802 
	`PUT2INC
(
code
, 0, 
ª≥©_mö
);

5810 i‡(
ª≥©_max
 < 0)

5812 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


5813 i‡(
utf
 && (
c
 & 
UTF_LENGTH
) != 0)

5815 
	`mem˝y
(
code
, 
utf_ch¨s
, 
	`IN_UCHARS
(
c
 & 7));

5816 
code
 +
c
 & 7;

5821 *
code
++ = 
c
;

5822 i‡(
¥›_ty≥
 >= 0)

5824 *
code
++ = 
¥›_ty≥
;

5825 *
code
++ = 
¥›_vÆue
;

5828 *
code
++ = 
OP_STAR
 + 
ª≥©_ty≥
;

5835 i‡(
ª≥©_max
 !
ª≥©_mö
)

5837 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


5838 i‡(
utf
 && (
c
 & 
UTF_LENGTH
) != 0)

5840 
	`mem˝y
(
code
, 
utf_ch¨s
, 
	`IN_UCHARS
(
c
 & 7));

5841 
code
 +
c
 & 7;

5845 *
code
++ = 
c
;

5846 i‡(
¥›_ty≥
 >= 0)

5848 *
code
++ = 
¥›_ty≥
;

5849 *
code
++ = 
¥›_vÆue
;

5851 
ª≥©_max
 -
ª≥©_mö
;

5853 i‡(
ª≥©_max
 == 1)

5855 *
code
++ = 
OP_QUERY
 + 
ª≥©_ty≥
;

5859 *
code
++ = 
OP_UPTO
 + 
ª≥©_ty≥
;

5860 
	`PUT2INC
(
code
, 0, 
ª≥©_max
);

5867 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


5868 i‡(
utf
 && (
c
 & 
UTF_LENGTH
) != 0)

5870 
	`mem˝y
(
code
, 
utf_ch¨s
, 
	`IN_UCHARS
(
c
 & 7));

5871 
code
 +
c
 & 7;

5875 *
code
++ = 
c
;

5880 #ifde‡
SUPPORT_UCP


5881 i‡(
¥›_ty≥
 >= 0)

5883 *
code
++ = 
¥›_ty≥
;

5884 *
code
++ = 
¥›_vÆue
;

5892 i‡(*
¥evious
 =
OP_CLASS
 || *¥eviou†=
OP_NCLASS
 ||

5893 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


5894 *
¥evious
 =
OP_XCLASS
 ||

5896 *
¥evious
 =
OP_REF
 || *¥eviou†=
OP_REFI
 ||

5897 *
¥evious
 =
OP_DNREF
 || *¥eviou†=
OP_DNREFI
)

5899 i‡(
ª≥©_max
 == 0)

5901 
code
 = 
¥evious
;

5902 
END_REPEAT
;

5905 i‡(
ª≥©_mö
 =0 && 
ª≥©_max
 == -1)

5906 *
code
++ = 
OP_CRSTAR
 + 
ª≥©_ty≥
;

5907 i‡(
ª≥©_mö
 =1 && 
ª≥©_max
 == -1)

5908 *
code
++ = 
OP_CRPLUS
 + 
ª≥©_ty≥
;

5909 i‡(
ª≥©_mö
 =0 && 
ª≥©_max
 == 1)

5910 *
code
++ = 
OP_CRQUERY
 + 
ª≥©_ty≥
;

5913 *
code
++ = 
OP_CRRANGE
 + 
ª≥©_ty≥
;

5914 
	`PUT2INC
(
code
, 0, 
ª≥©_mö
);

5915 i‡(
ª≥©_max
 == -1)Ñepeat_max = 0;

5916 
	`PUT2INC
(
code
, 0, 
ª≥©_max
);

5929 i‡(*
¥evious
 >
OP_ASSERT
 && *¥eviou†<
OP_COND
)

5931 
i
;

5932 
Àn
 = ()(
code
 - 
¥evious
);

5933 
size_t
 
ba£_hwm_off£t
 = 
ßve_hwm_off£t
;

5934 
p¸e_uch¨
 *
bølök
 = 
NULL
;

5935 
p¸e_uch¨
 *
bøzî›å
 = 
NULL
;

5940 i‡(*
¥evious
 =
OP_COND
 &&Öªvious[
LINK_SIZE
+1] =
OP_DEF
)

5941 
END_REPEAT
;

5948 i‡(*
¥evious
 < 
OP_ONCE
)

5950 i‡(
ª≥©_mö
 > 0Ë
END_REPEAT
;

5951 i‡(
ª≥©_max
 < 0 ||Ñepeat_max > 1)Ñepeat_max = 1;

5961 i‡(
ª≥©_mö
 == 0)

5985 i‡(
ª≥©_max
 <= 1)

5987 *
code
 = 
OP_END
;

5988 
	`adju°_ªcur£
(
¥evious
, 1, 
utf
, 
cd
, 
ßve_hwm_off£t
);

5989 
	`memmove
(
¥evious
 + 1,Öªvious, 
	`IN_UCHARS
(
Àn
));

5990 
code
++;

5991 i‡(
ª≥©_max
 == 0)

5993 *
¥evious
++ = 
OP_SKIPZERO
;

5994 
END_REPEAT
;

5996 
bøzî›å
 = 
¥evious
;

5997 *
¥evious
++ = 
OP_BRAZERO
 + 
ª≥©_ty≥
;

6010 
off£t
;

6011 *
code
 = 
OP_END
;

6012 
	`adju°_ªcur£
(
¥evious
, 2 + 
LINK_SIZE
, 
utf
, 
cd
, 
ßve_hwm_off£t
);

6013 
	`memmove
(
¥evious
 + 2 + 
LINK_SIZE
,Öªvious, 
	`IN_UCHARS
(
Àn
));

6014 
code
 +2 + 
LINK_SIZE
;

6015 *
¥evious
++ = 
OP_BRAZERO
 + 
ª≥©_ty≥
;

6016 *
¥evious
++ = 
OP_BRA
;

6021 
off£t
 = (
bølök
 =
NULL
)? 0 : ()(
¥evious
 - bralink);

6022 
bølök
 = 
¥evious
;

6023 
	`PUTINC
(
¥evious
, 0, 
off£t
);

6026 
ª≥©_max
--;

6038 i‡(
ª≥©_mö
 > 1)

6045 i‡(
Àngth±r
 !
NULL
)

6047 
dñè
 = (
ª≥©_mö
 - 1)*
Àngth_¥evgroup
;

6048 i‡((
INT64_OR_DOUBLE
)(
ª≥©_mö
 - 1)*

6049 (
INT64_OR_DOUBLE
)
Àngth_¥evgroup
 >

6050 (
INT64_OR_DOUBLE
)
INT_MAX
 ||

6051 
OFLOW_MAX
 - *
Àngth±r
 < 
dñè
)

6053 *
îr‹codïå
 = 
ERR20
;

6054 
FAILED
;

6056 *
Àngth±r
 +
dñè
;

6066 i‡(
group£tfú°ch¨
 && 
ªqch¨Êags
 < 0)

6068 
ªqch¨
 = 
fú°ch¨
;

6069 
ªqch¨Êags
 = 
fú°ch¨Êags
;

6072 
i
 = 1; i < 
ª≥©_mö
; i++)

6074 
p¸e_uch¨
 *
hc
;

6075 
size_t
 
this_hwm_off£t
 = 
cd
->
hwm
 - cd->
°¨t_w‹k•a˚
;

6076 
	`mem˝y
(
code
, 
¥evious
, 
	`IN_UCHARS
(
Àn
));

6078 
cd
->
hwm
 > cd->
°¨t_w‹k•a˚
 + cd->
w‹k•a˚_size
 -

6079 
WORK_SIZE_SAFETY_MARGIN
 -

6080 (
this_hwm_off£t
 - 
ba£_hwm_off£t
))

6082 *
îr‹codïå
 = 
	`ex∑nd_w‹k•a˚
(
cd
);

6083 i‡(*
îr‹codïå
 !0Ë
FAILED
;

6086 
hc
 = (
p¸e_uch¨
 *)
cd
->
°¨t_w‹k•a˚
 + 
ba£_hwm_off£t
;

6087 
hc
 < (
p¸e_uch¨
 *)
cd
->
°¨t_w‹k•a˚
 + 
this_hwm_off£t
;

6088 
hc
 +
LINK_SIZE
)

6090 
	`PUT
(
cd
->
hwm
, 0, 
	`GET
(
hc
, 0Ë+ 
Àn
);

6091 
cd
->
hwm
 +
LINK_SIZE
;

6093 
ba£_hwm_off£t
 = 
this_hwm_off£t
;

6094 
code
 +
Àn
;

6099 i‡(
ª≥©_max
 > 0Ëª≥©_max -
ª≥©_mö
;

6109 i‡(
ª≥©_max
 >= 0)

6118 i‡(
Àngth±r
 !
NULL
 && 
ª≥©_max
 > 0)

6120 
dñè
 = 
ª≥©_max
 * (
Àngth_¥evgroup
 + 1 + 2 + 2*
LINK_SIZE
) -

6121 2 - 2*
LINK_SIZE
;

6122 i‡((
INT64_OR_DOUBLE
)
ª≥©_max
 *

6123 (
INT64_OR_DOUBLE
)(
Àngth_¥evgroup
 + 1 + 2 + 2*
LINK_SIZE
)

6124 > (
INT64_OR_DOUBLE
)
INT_MAX
 ||

6125 
OFLOW_MAX
 - *
Àngth±r
 < 
dñè
)

6127 *
îr‹codïå
 = 
ERR20
;

6128 
FAILED
;

6130 *
Àngth±r
 +
dñè
;

6135 
i
 = 
ª≥©_max
 - 1; i >= 0; i--)

6137 
p¸e_uch¨
 *
hc
;

6138 
size_t
 
this_hwm_off£t
 = 
cd
->
hwm
 - cd->
°¨t_w‹k•a˚
;

6140 *
code
++ = 
OP_BRAZERO
 + 
ª≥©_ty≥
;

6145 i‡(
i
 != 0)

6147 
off£t
;

6148 *
code
++ = 
OP_BRA
;

6149 
off£t
 = (
bølök
 =
NULL
)? 0 : ()(
code
 - bralink);

6150 
bølök
 = 
code
;

6151 
	`PUTINC
(
code
, 0, 
off£t
);

6154 
	`mem˝y
(
code
, 
¥evious
, 
	`IN_UCHARS
(
Àn
));

6159 
cd
->
hwm
 > cd->
°¨t_w‹k•a˚
 + cd->
w‹k•a˚_size
 -

6160 
WORK_SIZE_SAFETY_MARGIN
 -

6161 (
this_hwm_off£t
 - 
ba£_hwm_off£t
))

6163 *
îr‹codïå
 = 
	`ex∑nd_w‹k•a˚
(
cd
);

6164 i‡(*
îr‹codïå
 !0Ë
FAILED
;

6167 
hc
 = (
p¸e_uch¨
 *)
cd
->
°¨t_w‹k•a˚
 + 
ba£_hwm_off£t
;

6168 
hc
 < (
p¸e_uch¨
 *)
cd
->
°¨t_w‹k•a˚
 + 
this_hwm_off£t
;

6169 
hc
 +
LINK_SIZE
)

6171 
	`PUT
(
cd
->
hwm
, 0, 
	`GET
(
hc
, 0Ë+ 
Àn
 + ((
i
 !0)? 2+
LINK_SIZE
 : 1));

6172 
cd
->
hwm
 +
LINK_SIZE
;

6174 
ba£_hwm_off£t
 = 
this_hwm_off£t
;

6175 
code
 +
Àn
;

6181 
bølök
 !
NULL
)

6183 
ﬁdlökoff£t
;

6184 
off£t
 = ()(
code
 - 
bølök
 + 1);

6185 
p¸e_uch¨
 *
bø
 = 
code
 - 
off£t
;

6186 
ﬁdlökoff£t
 = 
	`GET
(
bø
, 1);

6187 
bølök
 = (
ﬁdlökoff£t
 =0)? 
NULL
 : bralink - oldlinkoffset;

6188 *
code
++ = 
OP_KET
;

6189 
	`PUTINC
(
code
, 0, 
off£t
);

6190 
	`PUT
(
bø
, 1, 
off£t
);

6221 
p¸e_uch¨
 *
këcode
 = 
code
 - 1 - 
LINK_SIZE
;

6222 
p¸e_uch¨
 *
bøcode
 = 
këcode
 - 
	`GET
(ketcode, 1);

6226 i‡((*
bøcode
 =
OP_ONCE
 || *bøcodê=
OP_ONCE_NC
) &&

6227 
pos£ssive_qu™tifõr
Ë*
bøcode
 = 
OP_BRA
;

6232 i‡(*
bøcode
 =
OP_ONCE
 || *bøcodê=
OP_ONCE_NC
)

6233 *
këcode
 = 
OP_KETRMAX
 + 
ª≥©_ty≥
;

6242 i‡(
Àngth±r
 =
NULL
)

6244 
p¸e_uch¨
 *
scode
 = 
bøcode
;

6247 i‡(
	`could_be_em±y_bønch
(
scode
, 
këcode
, 
utf
, 
cd
, 
NULL
))

6249 *
bøcode
 +
OP_SBRA
 - 
OP_BRA
;

6252 
scode
 +
	`GET
(scode, 1);

6254 *
scode
 =
OP_ALT
);

6259 i‡(
pos£ssive_qu™tifõr
)

6266 i‡(*
bøcode
 =
OP_COND
 || *bøcodê=
OP_SCOND
)

6268 
∆í
 = ()(
code
 - 
bøcode
);

6269 *
code
 = 
OP_END
;

6270 
	`adju°_ªcur£
(
bøcode
, 1 + 
LINK_SIZE
, 
utf
, 
cd
, 
ßve_hwm_off£t
);

6271 
	`memmove
(
bøcode
 + 1 + 
LINK_SIZE
, bøcode, 
	`IN_UCHARS
(
∆í
));

6272 
code
 +1 + 
LINK_SIZE
;

6273 
∆í
 +1 + 
LINK_SIZE
;

6274 *
bøcode
 = 
OP_BRAPOS
;

6275 *
code
++ = 
OP_KETRPOS
;

6276 
	`PUTINC
(
code
, 0, 
∆í
);

6277 
	`PUT
(
bøcode
, 1, 
∆í
);

6284 *
bøcode
 += 1;

6285 *
këcode
 = 
OP_KETRPOS
;

6291 i‡(
bøzî›å
 !
NULL
Ë*bøzî›å = 
OP_BRAPOSZERO
;

6292 i‡(
ª≥©_mö
 < 2Ë
pos£ssive_qu™tifõr
 = 
FALSE
;

6297 *
këcode
 = 
OP_KETRMAX
 + 
ª≥©_ty≥
;

6307 i‡(*
¥evious
 =
OP_FAIL
Ë
END_REPEAT
;

6313 *
îr‹codïå
 = 
ERR11
;

6314 
FAILED
;

6329 i‡(
pos£ssive_qu™tifõr
)

6331 
Àn
;

6339 *
ãmpcode
)

6341 
OP_TYPEEXACT
:

6342 
ãmpcode
 +
	`PRIV
(
OP_Àngths
)[*tempcode] +

6343 ((
ãmpcode
[1 + 
IMM2_SIZE
] =
OP_PROP


6344 || 
ãmpcode
[1 + 
IMM2_SIZE
] =
OP_NOTPROP
)? 2 : 0);

6349 
OP_CHAR
:

6350 
OP_CHARI
:

6351 
OP_NOT
:

6352 
OP_NOTI
:

6353 
OP_EXACT
:

6354 
OP_EXACTI
:

6355 
OP_NOTEXACT
:

6356 
OP_NOTEXACTI
:

6357 
ãmpcode
 +
	`PRIV
(
OP_Àngths
)[*tempcode];

6358 #ifde‡
SUPPORT_UTF


6359 i‡(
utf
 && 
	`HAS_EXTRALEN
(
ãmpcode
[-1]))

6360 
ãmpcode
 +
	`GET_EXTRALEN
(tempcode[-1]);

6367 
OP_CLASS
:

6368 
OP_NCLASS
:

6369 
ãmpcode
 +1 + 32/(
p¸e_uch¨
);

6372 #i‡
deföed
 
SUPPORT_UTF
 || !deföed 
COMPILE_PCRE8


6373 
OP_XCLASS
:

6374 
ãmpcode
 +
	`GET
(tempcode, 1);

6385 
Àn
 = ()(
code
 - 
ãmpcode
);

6386 i‡(
Àn
 > 0)

6388 
ªpcode
 = *
ãmpcode
;

6394 i‡(
ªpcode
 < 
OP_CALLOUT
 && 
›code_pos£ssify
[repcode] > 0)

6395 *
ãmpcode
 = 
›code_pos£ssify
[
ªpcode
];

6403 *
code
 = 
OP_END
;

6404 
	`adju°_ªcur£
(
ãmpcode
, 1 + 
LINK_SIZE
, 
utf
, 
cd
, 
ßve_hwm_off£t
);

6405 
	`memmove
(
ãmpcode
 + 1 + 
LINK_SIZE
,Åempcode, 
	`IN_UCHARS
(
Àn
));

6406 
code
 +1 + 
LINK_SIZE
;

6407 
Àn
 +1 + 
LINK_SIZE
;

6408 
ãmpcode
[0] = 
OP_ONCE
;

6409 *
code
++ = 
OP_KET
;

6410 
	`PUTINC
(
code
, 0, 
Àn
);

6411 
	`PUT
(
ãmpcode
, 1, 
Àn
);

6415 #ifde‡
NEVER


6416 i‡(
Àn
 > 0Ë*
ãmpcode
)

6418 
OP_STAR
: *
ãmpcode
 = 
OP_POSSTAR
; ;

6419 
OP_PLUS
: *
ãmpcode
 = 
OP_POSPLUS
; ;

6420 
OP_QUERY
: *
ãmpcode
 = 
OP_POSQUERY
; ;

6421 
OP_UPTO
: *
ãmpcode
 = 
OP_POSUPTO
; ;

6423 
OP_STARI
: *
ãmpcode
 = 
OP_POSSTARI
; ;

6424 
OP_PLUSI
: *
ãmpcode
 = 
OP_POSPLUSI
; ;

6425 
OP_QUERYI
: *
ãmpcode
 = 
OP_POSQUERYI
; ;

6426 
OP_UPTOI
: *
ãmpcode
 = 
OP_POSUPTOI
; ;

6428 
OP_NOTSTAR
: *
ãmpcode
 = 
OP_NOTPOSSTAR
; ;

6429 
OP_NOTPLUS
: *
ãmpcode
 = 
OP_NOTPOSPLUS
; ;

6430 
OP_NOTQUERY
: *
ãmpcode
 = 
OP_NOTPOSQUERY
; ;

6431 
OP_NOTUPTO
: *
ãmpcode
 = 
OP_NOTPOSUPTO
; ;

6433 
OP_NOTSTARI
: *
ãmpcode
 = 
OP_NOTPOSSTARI
; ;

6434 
OP_NOTPLUSI
: *
ãmpcode
 = 
OP_NOTPOSPLUSI
; ;

6435 
OP_NOTQUERYI
: *
ãmpcode
 = 
OP_NOTPOSQUERYI
; ;

6436 
OP_NOTUPTOI
: *
ãmpcode
 = 
OP_NOTPOSUPTOI
; ;

6438 
OP_TYPESTAR
: *
ãmpcode
 = 
OP_TYPEPOSSTAR
; ;

6439 
OP_TYPEPLUS
: *
ãmpcode
 = 
OP_TYPEPOSPLUS
; ;

6440 
OP_TYPEQUERY
: *
ãmpcode
 = 
OP_TYPEPOSQUERY
; ;

6441 
OP_TYPEUPTO
: *
ãmpcode
 = 
OP_TYPEPOSUPTO
; ;

6443 
OP_CRSTAR
: *
ãmpcode
 = 
OP_CRPOSSTAR
; ;

6444 
OP_CRPLUS
: *
ãmpcode
 = 
OP_CRPOSPLUS
; ;

6445 
OP_CRQUERY
: *
ãmpcode
 = 
OP_CRPOSQUERY
; ;

6446 
OP_CRRANGE
: *
ãmpcode
 = 
OP_CRPOSRANGE
; ;

6452 *
code
 = 
OP_END
;

6453 
	`adju°_ªcur£
(
ãmpcode
, 1 + 
LINK_SIZE
, 
utf
, 
cd
, 
ßve_hwm_off£t
);

6454 
	`memmove
(
ãmpcode
 + 1 + 
LINK_SIZE
,Åempcode, 
	`IN_UCHARS
(
Àn
));

6455 
code
 +1 + 
LINK_SIZE
;

6456 
Àn
 +1 + 
LINK_SIZE
;

6457 
ãmpcode
[0] = 
OP_ONCE
;

6458 *
code
++ = 
OP_KET
;

6459 
	`PUTINC
(
code
, 0, 
Àn
);

6460 
	`PUT
(
ãmpcode
, 1, 
Àn
);

6470 
END_REPEAT
:

6471 
¥evious
 = 
NULL
;

6472 
cd
->
ªq_v¨y›t
 |
ªqv¨y
;

6481 
CHAR_LEFT_PARENTHESIS
:

6482 
±r
++;

6487 i‡(
±r
[0] =
CHAR_QUESTION_MARK
 &&Öå[1] =
CHAR_NUMBER_SIGN
)

6489 
±r
 += 2;

6490 *
±r
 !
CHAR_NULL
 && *±∏!
CHAR_RIGHT_PARENTHESIS
)Ötr++;

6491 i‡(*
±r
 =
CHAR_NULL
)

6493 *
îr‹codïå
 = 
ERR18
;

6494 
FAILED
;

6501 i‡(
±r
[0] =
CHAR_ASTERISK
 && (ptr[1] == ':'

6502 || (
	`MAX_255
(
±r
[1]Ë&& ((
cd
->
˘y≥s
[±r[1]] & 
˘y≥_Àâî
) != 0))))

6504 
i
, 
«mñí
;

6505 
¨gÀn
 = 0;

6506 c⁄° *
vn
 = 
vîb«mes
;

6507 c⁄° 
p¸e_uch¨
 *
«me
 = 
±r
 + 1;

6508 c⁄° 
p¸e_uch¨
 *
¨g
 = 
NULL
;

6509 
¥evious
 = 
NULL
;

6510 
±r
++;

6511 
	`MAX_255
(*
±r
Ë&& (
cd
->
˘y≥s
[*±r] & 
˘y≥_Àâî
) != 0)Ötr++;

6512 
«mñí
 = ()(
±r
 - 
«me
);

6518 i‡(*
±r
 =
CHAR_COLON
)

6520 
¨g
 = ++
±r
;

6521 *
±r
 !
CHAR_NULL
 && *±∏!
CHAR_RIGHT_PARENTHESIS
)Ötr++;

6522 
¨gÀn
 = ()(
±r
 - 
¨g
);

6523 i‡(()
¨gÀn
 > 
MAX_MARK
)

6525 *
îr‹codïå
 = 
ERR75
;

6526 
FAILED
;

6530 i‡(*
±r
 !
CHAR_RIGHT_PARENTHESIS
)

6532 *
îr‹codïå
 = 
ERR60
;

6533 
FAILED
;

6538 
i
 = 0; i < 
vîbcou¡
; i++)

6540 i‡(
«mñí
 =
vîbs
[
i
].
Àn
 &&

6541 
	`STRNCMP_UC_C8
(
«me
, 
vn
, 
«mñí
) == 0)

6543 
£tvîb
;

6548 i‡(
vîbs
[
i
].
›
 =
OP_ACCEPT
)

6550 
›í_ˇpôem
 *
oc
;

6551 i‡(
¨gÀn
 != 0)

6553 *
îr‹codïå
 = 
ERR59
;

6554 
FAILED
;

6556 
cd
->
had_ac˚±
 = 
TRUE
;

6557 
oc
 = 
cd
->
›í_ˇps
; o¯!
NULL
; o¯oc->
√xt
)

6559 *
code
++ = 
OP_CLOSE
;

6560 
	`PUT2INC
(
code
, 0, 
oc
->
numbî
);

6562 
£tvîb
 = *
code
++ =

6563 (
cd
->
as£π_dïth
 > 0)? 
OP_ASSERT_ACCEPT
 : 
OP_ACCEPT
;

6566 i‡(
fú°ch¨Êags
 =
REQ_UNSET
Ëfú°ch¨Êag†
REQ_NONE
;

6571 i‡(
¨gÀn
 == 0)

6573 i‡(
vîbs
[
i
].
›
 < 0)

6575 *
îr‹codïå
 = 
ERR66
;

6576 
FAILED
;

6578 
£tvîb
 = *
code
++ = 
vîbs
[
i
].
›
;

6583 i‡(
vîbs
[
i
].
›_¨g
 < 0)

6585 *
îr‹codïå
 = 
ERR59
;

6586 
FAILED
;

6588 
£tvîb
 = *
code
++ = 
vîbs
[
i
].
›_¨g
;

6589 *
code
++ = 
¨gÀn
;

6590 
	`mem˝y
(
code
, 
¨g
, 
	`IN_UCHARS
(
¨gÀn
));

6591 
code
 +
¨gÀn
;

6592 *
code
++ = 0;

6595 
£tvîb
)

6597 
OP_THEN
:

6598 
OP_THEN_ARG
:

6599 
cd
->
exã∫Æ_Êags
 |
PCRE_HASTHEN
;

6602 
OP_PRUNE
:

6603 
OP_PRUNE_ARG
:

6604 
OP_SKIP
:

6605 
OP_SKIP_ARG
:

6606 
cd
->
had_¥u√‹skù
 = 
TRUE
;

6613 
vn
 +
vîbs
[
i
].
Àn
 + 1;

6616 i‡(
i
 < 
vîbcou¡
) ;

6617 *
îr‹codïå
 = 
ERR60
;

6618 
FAILED
;

6623 
√w›ti⁄s
 = 
›ti⁄s
;

6624 
skùbyãs
 = 0;

6625 
bøvÆue
 = 
OP_CBRA
;

6626 
ßve_hwm_off£t
 = 
cd
->
hwm
 - cd->
°¨t_w‹k•a˚
;

6627 
ª£t_bøcou¡
 = 
FALSE
;

6632 i‡(*
±r
 =
CHAR_QUESTION_MARK
)

6634 
i
, 
£t
, 
un£t
, 
«mñí
;

6635 *
›t£t
;

6636 c⁄° 
p¸e_uch¨
 *
«me
;

6637 
p¸e_uch¨
 *
¶Ÿ
;

6639 *(++
±r
))

6642 
CHAR_VERTICAL_LINE
:

6643 
ª£t_bøcou¡
 = 
TRUE
;

6647 
CHAR_COLON
:

6648 
bøvÆue
 = 
OP_BRA
;

6649 
±r
++;

6654 
CHAR_LEFT_PARENTHESIS
:

6655 
bøvÆue
 = 
OP_COND
;

6656 
ãmµå
 = 
±r
;

6675 i‡(
±r
[1] =
CHAR_QUESTION_MARK
 &&Öå[2] =
CHAR_C
)

6677 
i
 = 3;; i++Ëi‡(!
	`IS_DIGIT
(
±r
[i])) ;

6678 i‡(
±r
[
i
] =
CHAR_RIGHT_PARENTHESIS
)

6679 
ãmµå
 +
i
 + 1;

6686 i‡(
ãmµå
[1] =
CHAR_QUESTION_MARK
 &&

6687 (
ãmµå
[2] =
CHAR_EQUALS_SIGN
 ||

6688 
ãmµå
[2] =
CHAR_EXCLAMATION_MARK
 ||

6689 (
ãmµå
[2] =
CHAR_LESS_THAN_SIGN
 &&

6690 (
ãmµå
[3] =
CHAR_EQUALS_SIGN
 ||

6691 
ãmµå
[3] =
CHAR_EXCLAMATION_MARK
))))

6693 
cd
->
isc⁄das£π
 = 
TRUE
;

6700 
code
[1+
LINK_SIZE
] = 
OP_CREF
;

6701 
skùbyãs
 = 1+
IMM2_SIZE
;

6702 
ªfsign
 = -1;

6703 
«mñí
 = -1;

6704 
«me
 = 
NULL
;

6705 
ª˙o
 = 0;

6709 
±r
++;

6710 i‡(*
±r
 =
CHAR_R
 &&Öå[1] =
CHAR_AMPERSAND
)

6712 
ãrmö©‹
 = -1;

6713 
±r
 += 2;

6714 
code
[1+
LINK_SIZE
] = 
OP_RREF
;

6721 i‡(*
±r
 =
CHAR_LESS_THAN_SIGN
)

6723 
ãrmö©‹
 = 
CHAR_GREATER_THAN_SIGN
;

6724 
±r
++;

6726 i‡(*
±r
 =
CHAR_APOSTROPHE
)

6728 
ãrmö©‹
 = 
CHAR_APOSTROPHE
;

6729 
±r
++;

6733 
ãrmö©‹
 = 
CHAR_NULL
;

6734 i‡(*
±r
 =
CHAR_MINUS
 || *±∏=
CHAR_PLUS
Ë
ªfsign
 = *ptr++;

6735 i‡(
	`IS_DIGIT
(*
±r
)Ë
ªfsign
 = 0;

6740 i‡(
ªfsign
 >= 0)

6742 
	`IS_DIGIT
(*
±r
))

6744 
ª˙o
 =Ñe˙ÿ* 10 + ()(*
±r
 - 
CHAR_0
);

6745 
±r
++;

6756 i‡(
	`IS_DIGIT
(*
±r
))

6758 *
îr‹codïå
 = 
ERR84
;

6759 
FAILED
;

6761 i‡(!
	`MAX_255
(*
±r
Ë|| (
cd
->
˘y≥s
[*±r] & 
˘y≥_w‹d
) == 0)

6763 *
îr‹codïå
 = 
ERR28
;

6764 
FAILED
;

6766 
«me
 = 
±r
++;

6767 
	`MAX_255
(*
±r
Ë&& (
cd
->
˘y≥s
[*±r] & 
˘y≥_w‹d
) != 0)

6769 
±r
++;

6771 
«mñí
 = ()(
±r
 - 
«me
);

6772 i‡(
Àngth±r
 !
NULL
Ë*Àngth±∏+
IMM2_SIZE
;

6777 i‡((
ãrmö©‹
 > 0 && *
±r
++ !(
p¸e_uch¨
)terminator) ||

6778 *
±r
++ !
CHAR_RIGHT_PARENTHESIS
)

6780 
±r
--;

6781 *
îr‹codïå
 = 
ERR26
;

6782 
FAILED
;

6787 i‡(
Àngth±r
 !
NULL
) ;

6793 i‡(
ªfsign
 >= 0)

6795 i‡(
ª˙o
 <= 0)

6797 *
îr‹codïå
 = 
ERR35
;

6798 
FAILED
;

6800 i‡(
ªfsign
 !0Ë
ª˙o
 = (ªfsig¿=
CHAR_MINUS
)?

6801 
cd
->
bøcou¡
 - 
ª˙o
 + 1 :Ñecno + cd->bracount;

6802 i‡(
ª˙o
 <0 ||Ñe˙ÿ> 
cd
->
föÆ_bøcou¡
)

6804 *
îr‹codïå
 = 
ERR15
;

6805 
FAILED
;

6807 
	`PUT2
(
code
, 2+
LINK_SIZE
, 
ª˙o
);

6808 i‡(
ª˙o
 > 
cd
->
t›_backªf
) cd->top_backref =Ñecno;

6814 
¶Ÿ
 = 
cd
->
«me_èbÀ
;

6815 
i
 = 0; i < 
cd
->
«mes_found
; i++)

6817 i‡(
	`STRNCMP_UC_UC
(
«me
, 
¶Ÿ
+
IMM2_SIZE
, 
«mñí
) == 0) ;

6818 
¶Ÿ
 +
cd
->
«me_íåy_size
;

6826 i‡(
i
 < 
cd
->
«mes_found
)

6828 
off£t
 = 
i
++;

6829 
cou¡
 = 1;

6830 
ª˙o
 = 
	`GET2
(
¶Ÿ
, 0);

6831 i‡(
ª˙o
 > 
cd
->
t›_backªf
) cd->top_backref =Ñecno;

6832 ; 
i
 < 
cd
->
«mes_found
; i++)

6834 
¶Ÿ
 +
cd
->
«me_íåy_size
;

6835 i‡(
	`STRNCMP_UC_UC
(
«me
, 
¶Ÿ
+
IMM2_SIZE
, 
«mñí
) != 0 ||

6836 (
¶Ÿ
+
IMM2_SIZE
)[
«mñí
] != 0) ;

6837 
cou¡
++;

6840 i‡(
cou¡
 > 1)

6842 
	`PUT2
(
code
, 2+
LINK_SIZE
, 
off£t
);

6843 
	`PUT2
(
code
, 2+
LINK_SIZE
+
IMM2_SIZE
, 
cou¡
);

6844 
skùbyãs
 +
IMM2_SIZE
;

6845 
code
[1+
LINK_SIZE
]++;

6849 
	`PUT2
(
code
, 2+
LINK_SIZE
, 
ª˙o
);

6859 i‡(
ãrmö©‹
 !
CHAR_NULL
)

6861 *
îr‹codïå
 = 
ERR15
;

6862 
FAILED
;

6868 i‡(*
«me
 =
CHAR_R
)

6870 
ª˙o
 = 0;

6871 
i
 = 1; i < 
«mñí
; i++)

6873 i‡(!
	`IS_DIGIT
(
«me
[
i
]))

6875 *
îr‹codïå
 = 
ERR15
;

6876 
FAILED
;

6878 
ª˙o
 =Ñe˙ÿ* 10 + 
«me
[
i
] - 
CHAR_0
;

6880 i‡(
ª˙o
 =0Ëª˙ÿ
RREF_ANY
;

6881 
code
[1+
LINK_SIZE
] = 
OP_RREF
;

6882 
	`PUT2
(
code
, 2+
LINK_SIZE
, 
ª˙o
);

6888 i‡(
«mñí
 =6 && 
	`STRNCMP_UC_C8
(
«me
, 
STRING_DEFINE
, 6) == 0)

6890 
code
[1+
LINK_SIZE
] = 
OP_DEF
;

6891 
skùbyãs
 = 1;

6898 *
îr‹codïå
 = 
ERR15
;

6899 
FAILED
;

6905 
CHAR_EQUALS_SIGN
:

6906 
bøvÆue
 = 
OP_ASSERT
;

6907 
cd
->
as£π_dïth
 += 1;

6908 
±r
++;

6918 
CHAR_EXCLAMATION_MARK
:

6919 
±r
++;

6920 i‡(*
±r
 =
CHAR_RIGHT_PARENTHESIS
 &&Öå[1] !
CHAR_ASTERISK
 &&

6921 
±r
[1] !
CHAR_PLUS
 &&Öå[1] !
CHAR_QUESTION_MARK
 &&

6922 (
±r
[1] !
CHAR_LEFT_CURLY_BRACKET
 || !
	`is_cou¡ed_ª≥©
(ptr+2)))

6924 *
code
++ = 
OP_FAIL
;

6925 
¥evious
 = 
NULL
;

6928 
bøvÆue
 = 
OP_ASSERT_NOT
;

6929 
cd
->
as£π_dïth
 += 1;

6934 
CHAR_LESS_THAN_SIGN
:

6935 
±r
[1])

6937 
CHAR_EQUALS_SIGN
:

6938 
bøvÆue
 = 
OP_ASSERTBACK
;

6939 
cd
->
as£π_dïth
 += 1;

6940 
±r
 += 2;

6943 
CHAR_EXCLAMATION_MARK
:

6944 
bøvÆue
 = 
OP_ASSERTBACK_NOT
;

6945 
cd
->
as£π_dïth
 += 1;

6946 
±r
 += 2;

6950 i‡(
	`MAX_255
(
±r
[1]Ë&& (
cd
->
˘y≥s
[±r[1]] & 
˘y≥_w‹d
) != 0)

6951 
DEFINE_NAME
;

6952 
±r
++;

6953 *
îr‹codïå
 = 
ERR24
;

6954 
FAILED
;

6960 
CHAR_GREATER_THAN_SIGN
:

6961 
bøvÆue
 = 
OP_ONCE
;

6962 
±r
++;

6967 
CHAR_C
:

6968 
¥evious_ˇŒout
 = 
code
;

6969 
a·î_m™uÆ_ˇŒout
 = 1;

6970 *
code
++ = 
OP_CALLOUT
;

6972 
n
 = 0;

6973 
±r
++;

6974 
	`IS_DIGIT
(*
±r
))

6975 
n
 =Ç * 10 + *
±r
++ - 
CHAR_0
;

6976 i‡(*
±r
 !
CHAR_RIGHT_PARENTHESIS
)

6978 *
îr‹codïå
 = 
ERR39
;

6979 
FAILED
;

6981 i‡(
n
 > 255)

6983 *
îr‹codïå
 = 
ERR38
;

6984 
FAILED
;

6986 *
code
++ = 
n
;

6987 
	`PUT
(
code
, 0, ()(
±r
 - 
cd
->
°¨t_∑âîn
 + 1));

6988 
	`PUT
(
code
, 
LINK_SIZE
, 0);

6989 
code
 +2 * 
LINK_SIZE
;

6991 
¥evious
 = 
NULL
;

6996 
CHAR_P
:

6997 i‡(*(++
±r
Ë=
CHAR_EQUALS_SIGN
 ||

6998 *
±r
 =
CHAR_GREATER_THAN_SIGN
)

7000 
is_ªcur£
 = *
±r
 =
CHAR_GREATER_THAN_SIGN
;

7001 
ãrmö©‹
 = 
CHAR_RIGHT_PARENTHESIS
;

7002 
NAMED_REF_OR_RECURSE
;

7004 i‡(*
±r
 !
CHAR_LESS_THAN_SIGN
)

7006 *
îr‹codïå
 = 
ERR41
;

7007 
FAILED
;

7013 
DEFINE_NAME
:

7014 
CHAR_APOSTROPHE
:

7015 
ãrmö©‹
 = (*
±r
 =
CHAR_LESS_THAN_SIGN
)?

7016 
CHAR_GREATER_THAN_SIGN
 : 
CHAR_APOSTROPHE
;

7017 
«me
 = ++
±r
;

7018 i‡(
	`IS_DIGIT
(*
±r
))

7020 *
îr‹codïå
 = 
ERR84
;

7021 
FAILED
;

7023 
	`MAX_255
(*
±r
Ë&& (
cd
->
˘y≥s
[*±r] & 
˘y≥_w‹d
) != 0)Ötr++;

7024 
«mñí
 = ()(
±r
 - 
«me
);

7032 i‡(
Àngth±r
 !
NULL
)

7034 
«med_group
 *
ng
;

7035 
p¸e_uöt32
 
numbî
 = 
cd
->
bøcou¡
 + 1;

7037 i‡(*
±r
 !(
p¸e_uch¨
)
ãrmö©‹
)

7039 *
îr‹codïå
 = 
ERR42
;

7040 
FAILED
;

7043 i‡(
cd
->
«mes_found
 >
MAX_NAME_COUNT
)

7045 *
îr‹codïå
 = 
ERR49
;

7046 
FAILED
;

7049 i‡(
«mñí
 + 
IMM2_SIZE
 + 1 > 
cd
->
«me_íåy_size
)

7051 
cd
->
«me_íåy_size
 = 
«mñí
 + 
IMM2_SIZE
 + 1;

7052 i‡(
«mñí
 > 
MAX_NAME_SIZE
)

7054 *
îr‹codïå
 = 
ERR48
;

7055 
FAILED
;

7066 
ng
 = 
cd
->
«med_groups
;

7067 
i
 = 0; i < 
cd
->
«mes_found
; i++, 
ng
++)

7069 i‡(
«mñí
 =
ng
->
Àngth
 &&

7070 
	`STRNCMP_UC_UC
(
«me
, 
ng
->«me, 
«mñí
) == 0)

7072 i‡(
ng
->
numbî
 ==Çumber) ;

7073 i‡((
›ti⁄s
 & 
PCRE_DUPNAMES
) == 0)

7075 *
îr‹codïå
 = 
ERR43
;

7076 
FAILED
;

7078 
cd
->
du≤ames
 = 
TRUE
;

7080 i‡(
ng
->
numbî
 ==Çumber)

7082 *
îr‹codïå
 = 
ERR65
;

7083 
FAILED
;

7087 i‡(
i
 >
cd
->
«mes_found
)

7091 i‡(
cd
->
«mes_found
 >cd->
«med_group_li°_size
)

7093 
√wsize
 = 
cd
->
«med_group_li°_size
 * 2;

7094 
«med_group
 *
√w•a˚
 = (
	`PUBL
(
mÆloc
))

7095 (
√wsize
 * (
«med_group
));

7097 i‡(
√w•a˚
 =
NULL
)

7099 *
îr‹codïå
 = 
ERR21
;

7100 
FAILED
;

7103 
	`mem˝y
(
√w•a˚
, 
cd
->
«med_groups
,

7104 
cd
->
«med_group_li°_size
 * (
«med_group
));

7105 i‡(
cd
->
«med_group_li°_size
 > 
NAMED_GROUP_LIST_SIZE
)

7106 (
	`PUBL
(
‰ì
))((*)
cd
->
«med_groups
);

7107 
cd
->
«med_groups
 = 
√w•a˚
;

7108 
cd
->
«med_group_li°_size
 = 
√wsize
;

7111 
cd
->
«med_groups
[cd->
«mes_found
].
«me
 =Çame;

7112 
cd
->
«med_groups
[cd->
«mes_found
].
Àngth
 = 
«mñí
;

7113 
cd
->
«med_groups
[cd->
«mes_found
].
numbî
 =Çumber;

7114 
cd
->
«mes_found
++;

7118 
±r
++;

7119 
NUMBERED_GROUP
;

7123 
CHAR_AMPERSAND
:

7124 
ãrmö©‹
 = 
CHAR_RIGHT_PARENTHESIS
;

7125 
is_ªcur£
 = 
TRUE
;

7134 
NAMED_REF_OR_RECURSE
:

7135 
«me
 = ++
±r
;

7136 i‡(
	`IS_DIGIT
(*
±r
))

7138 *
îr‹codïå
 = 
ERR84
;

7139 
FAILED
;

7141 
	`MAX_255
(*
±r
Ë&& (
cd
->
˘y≥s
[*±r] & 
˘y≥_w‹d
) != 0)Ötr++;

7142 
«mñí
 = ()(
±r
 - 
«me
);

7151 i‡(
Àngth±r
 !
NULL
)

7153 
«med_group
 *
ng
;

7155 i‡(
«mñí
 == 0)

7157 *
îr‹codïå
 = 
ERR62
;

7158 
FAILED
;

7160 i‡(*
±r
 !(
p¸e_uch¨
)
ãrmö©‹
)

7162 *
îr‹codïå
 = 
ERR42
;

7163 
FAILED
;

7165 i‡(
«mñí
 > 
MAX_NAME_SIZE
)

7167 *
îr‹codïå
 = 
ERR48
;

7168 
FAILED
;

7176 
ng
 = 
cd
->
«med_groups
;

7177 
i
 = 0; i < 
cd
->
«mes_found
; i++, 
ng
++)

7179 i‡(
«mñí
 =
ng
->
Àngth
 &&

7180 
	`STRNCMP_UC_UC
(
«me
, 
ng
->«me, 
«mñí
) == 0)

7183 
ª˙o
 = (
i
 < 
cd
->
«mes_found
)? 
ng
->
numbî
 : 0;

7187 i‡(!
is_ªcur£
Ë
cd
->
«medªfcou¡
++;

7193 *
Àngth±r
 +
IMM2_SIZE
;

7203 
¶Ÿ
 = 
cd
->
«me_èbÀ
;

7204 
i
 = 0; i < 
cd
->
«mes_found
; i++)

7206 i‡(
	`STRNCMP_UC_UC
(
«me
, 
¶Ÿ
+
IMM2_SIZE
, 
«mñí
) == 0 &&

7207 
¶Ÿ
[
IMM2_SIZE
+
«mñí
] == 0)

7209 
¶Ÿ
 +
cd
->
«me_íåy_size
;

7212 i‡(
i
 < 
cd
->
«mes_found
)

7214 
ª˙o
 = 
	`GET2
(
¶Ÿ
, 0);

7218 *
îr‹codïå
 = 
ERR15
;

7219 
FAILED
;

7226 i‡(
is_ªcur£
Ë
HANDLE_RECURSION
;

7231 i‡(
Àngth±r
 =
NULL
 && 
cd
->
du≤ames
)

7233 
cou¡
 = 1;

7234 
ödex
 = 
i
;

7235 
p¸e_uch¨
 *
c¶Ÿ
 = 
¶Ÿ
 + 
cd
->
«me_íåy_size
;

7237 
i
++; i < 
cd
->
«mes_found
; i++)

7239 i‡(
	`STRCMP_UC_UC
(
¶Ÿ
 + 
IMM2_SIZE
, 
c¶Ÿ
 + IMM2_SIZE) != 0) ;

7242 
cou¡
++;

7243 
c¶Ÿ
 +
cd
->
«me_íåy_size
;

7246 i‡(
cou¡
 > 1)

7248 i‡(
fú°ch¨Êags
 =
REQ_UNSET
Ëfú°ch¨Êag†
REQ_NONE
;

7249 
¥evious
 = 
code
;

7250 *
code
++ = ((
›ti⁄s
 & 
PCRE_CASELESS
Ë!0)? 
OP_DNREFI
 : 
OP_DNREF
;

7251 
	`PUT2INC
(
code
, 0, 
ödex
);

7252 
	`PUT2INC
(
code
, 0, 
cou¡
);

7256 ; 
¶Ÿ
 < 
c¶Ÿ
; slŸ +
cd
->
«me_íåy_size
)

7258 
›í_ˇpôem
 *
oc
;

7259 
ª˙o
 = 
	`GET2
(
¶Ÿ
, 0);

7260 
cd
->
backªf_m≠
 |(
ª˙o
 < 32)? (1 <<Ñecno) : 1;

7261 i‡(
ª˙o
 > 
cd
->
t›_backªf
) cd->top_backref =Ñecno;

7267 
oc
 = 
cd
->
›í_ˇps
; o¯!
NULL
; o¯oc->
√xt
)

7269 i‡(
oc
->
numbî
 =
ª˙o
)

7271 
oc
->
Êag
 = 
TRUE
;

7283 
HANDLE_REFERENCE
;

7287 
CHAR_R
:

7288 
±r
++;

7293 
CHAR_MINUS
: 
CHAR_PLUS
:

7294 
CHAR_0
: 
CHAR_1
: 
CHAR_2
: 
CHAR_3
: 
CHAR_4
:

7295 
CHAR_5
: 
CHAR_6
: 
CHAR_7
: 
CHAR_8
: 
CHAR_9
:

7297 c⁄° 
p¸e_uch¨
 *
ˇŒed
;

7298 
ãrmö©‹
 = 
CHAR_RIGHT_PARENTHESIS
;

7306 
HANDLE_NUMERICAL_RECURSION
:

7308 i‡((
ªfsign
 = *
±r
Ë=
CHAR_PLUS
)

7310 
±r
++;

7311 i‡(!
	`IS_DIGIT
(*
±r
))

7313 *
îr‹codïå
 = 
ERR63
;

7314 
FAILED
;

7317 i‡(
ªfsign
 =
CHAR_MINUS
)

7319 i‡(!
	`IS_DIGIT
(
±r
[1]))

7320 
OTHER_CHAR_AFTER_QUERY
;

7321 
±r
++;

7324 
ª˙o
 = 0;

7325 
	`IS_DIGIT
(*
±r
))

7326 
ª˙o
 =Ñe˙ÿ* 10 + *
±r
++ - 
CHAR_0
;

7328 i‡(*
±r
 !(
p¸e_uch¨
)
ãrmö©‹
)

7330 *
îr‹codïå
 = 
ERR29
;

7331 
FAILED
;

7334 i‡(
ªfsign
 =
CHAR_MINUS
)

7336 i‡(
ª˙o
 == 0)

7338 *
îr‹codïå
 = 
ERR58
;

7339 
FAILED
;

7341 
ª˙o
 = 
cd
->
bøcou¡
 -Ñecno + 1;

7342 i‡(
ª˙o
 <= 0)

7344 *
îr‹codïå
 = 
ERR15
;

7345 
FAILED
;

7348 i‡(
ªfsign
 =
CHAR_PLUS
)

7350 i‡(
ª˙o
 == 0)

7352 *
îr‹codïå
 = 
ERR58
;

7353 
FAILED
;

7355 
ª˙o
 +
cd
->
bøcou¡
;

7360 
HANDLE_RECURSION
:

7362 
¥evious
 = 
code
;

7363 
ˇŒed
 = 
cd
->
°¨t_code
;

7372 i‡(
Àngth±r
 =
NULL
)

7374 *
code
 = 
OP_END
;

7375 i‡(
ª˙o
 != 0)

7376 
ˇŒed
 = 
	`PRIV
(
föd_bøckë
)(
cd
->
°¨t_code
, 
utf
, 
ª˙o
);

7380 i‡(
ˇŒed
 =
NULL
)

7382 i‡(
ª˙o
 > 
cd
->
föÆ_bøcou¡
)

7384 *
îr‹codïå
 = 
ERR15
;

7385 
FAILED
;

7392 
ˇŒed
 = 
cd
->
°¨t_code
 + 
ª˙o
;

7393 i‡(
cd
->
hwm
 >cd->
°¨t_w‹k•a˚
 + cd->
w‹k•a˚_size
 -

7394 
WORK_SIZE_SAFETY_MARGIN
)

7396 *
îr‹codïå
 = 
	`ex∑nd_w‹k•a˚
(
cd
);

7397 i‡(*
îr‹codïå
 !0Ë
FAILED
;

7399 
	`PUTINC
(
cd
->
hwm
, 0, ()(
code
 + 1 - cd->
°¨t_code
));

7411 i‡(
	`GET
(
ˇŒed
, 1Ë=0 && 
c⁄d_dïth
 <= 0 &&

7412 
	`could_be_em±y
(
ˇŒed
, 
code
, 
b˝å
, 
utf
, 
cd
))

7414 *
îr‹codïå
 = 
ERR40
;

7415 
FAILED
;

7423 *
code
 = 
OP_RECURSE
;

7424 
	`PUT
(
code
, 1, ()(
ˇŒed
 - 
cd
->
°¨t_code
));

7425 
code
 +1 + 
LINK_SIZE
;

7426 
group£tfú°ch¨
 = 
FALSE
;

7431 i‡(
fú°ch¨Êags
 =
REQ_UNSET
Ëfú°ch¨Êag†
REQ_NONE
;

7437 
OTHER_CHAR_AFTER_QUERY
:

7438 
£t
 = 
un£t
 = 0;

7439 
›t£t
 = &
£t
;

7441 *
±r
 !
CHAR_RIGHT_PARENTHESIS
 && *±∏!
CHAR_COLON
)

7443 *
±r
++)

7445 
CHAR_MINUS
: 
›t£t
 = &
un£t
; ;

7447 
CHAR_J
:

7448 *
›t£t
 |
PCRE_DUPNAMES
;

7449 
cd
->
exã∫Æ_Êags
 |
PCRE_JCHANGED
;

7452 
CHAR_i
: *
›t£t
 |
PCRE_CASELESS
; ;

7453 
CHAR_m
: *
›t£t
 |
PCRE_MULTILINE
; ;

7454 
CHAR_s
: *
›t£t
 |
PCRE_DOTALL
; ;

7455 
CHAR_x
: *
›t£t
 |
PCRE_EXTENDED
; ;

7456 
CHAR_U
: *
›t£t
 |
PCRE_UNGREEDY
; ;

7457 
CHAR_X
: *
›t£t
 |
PCRE_EXTRA
; ;

7459 : *
îr‹codïå
 = 
ERR12
;

7460 
±r
--;

7461 
FAILED
;

7467 
√w›ti⁄s
 = (
›ti⁄s
 | 
£t
Ë& (~
un£t
);

7490 i‡(*
±r
 =
CHAR_RIGHT_PARENTHESIS
)

7492 i‡(
code
 =
cd
->
°¨t_code
 + 1 + 
LINK_SIZE
 &&

7493 (
Àngth±r
 =
NULL
 || *Àngth±∏=2 + 2*
LINK_SIZE
))

7495 
cd
->
exã∫Æ_›ti⁄s
 = 
√w›ti⁄s
;

7499 
gªedy_deÁu…
 = ((
√w›ti⁄s
 & 
PCRE_UNGREEDY
) != 0);

7500 
gªedy_n⁄_deÁu…
 = 
gªedy_deÁu…
 ^ 1;

7501 
ªq_ˇ£›t
 = ((
√w›ti⁄s
 & 
PCRE_CASELESS
Ë!0)? 
REQ_CASELESS
:0;

7507 *
›ti⁄•å
 = 
›ti⁄s
 = 
√w›ti⁄s
;

7508 
¥evious
 = 
NULL
;

7517 
bøvÆue
 = 
OP_BRA
;

7518 
±r
++;

7526 i‡((
›ti⁄s
 & 
PCRE_NO_AUTO_CAPTURE
) != 0)

7528 
bøvÆue
 = 
OP_BRA
;

7535 
NUMBERED_GROUP
:

7536 
cd
->
bøcou¡
 += 1;

7537 
	`PUT2
(
code
, 1+
LINK_SIZE
, 
cd
->
bøcou¡
);

7538 
skùbyãs
 = 
IMM2_SIZE
;

7544 i‡((
cd
->
∑ªns_dïth
 +1Ë> 
PARENS_NEST_LIMIT
)

7546 *
îr‹codïå
 = 
ERR82
;

7547 
FAILED
;

7558 i‡(
bøvÆue
 >
OP_ASSERT
 && bøvÆuê<
OP_ASSERTBACK_NOT
 &&

7559 
cd
->
isc⁄das£π
)

7561 
¥evious
 = 
NULL
;

7562 
cd
->
isc⁄das£π
 = 
FALSE
;

7564 
¥evious
 = 
code
;

7566 *
code
 = 
bøvÆue
;

7567 
ãmpcode
 = 
code
;

7568 
ãm¥eqv¨y
 = 
cd
->
ªq_v¨y›t
;

7569 
ãmpbøcou¡
 = 
cd
->
bøcou¡
;

7570 
Àngth_¥evgroup
 = 0;

7572 i‡(!
	`compûe_ªgex
(

7573 
√w›ti⁄s
,

7574 &
ãmpcode
,

7575 &
±r
,

7576 
îr‹codïå
,

7577 (
bøvÆue
 =
OP_ASSERTBACK
 ||

7578 
bøvÆue
 =
OP_ASSERTBACK_NOT
),

7579 
ª£t_bøcou¡
,

7580 
skùbyãs
,

7581 
c⁄d_dïth
 +

7582 ((
bøvÆue
 =
OP_COND
)?1:0),

7583 &
subfú°ch¨
,

7584 &
subfú°ch¨Êags
,

7585 &
subªqch¨
,

7586 &
subªqch¨Êags
,

7587 
b˝å
,

7588 
cd
,

7589 (
Àngth±r
 =
NULL
)? NULL :

7590 &
Àngth_¥evgroup


7592 
FAILED
;

7594 
cd
->
∑ªns_dïth
 -= 1;

7599 i‡(
bøvÆue
 =
OP_ONCE
 && 
cd
->
bøcou¡
 <
ãmpbøcou¡
)

7600 *
code
 = 
OP_ONCE_NC
;

7602 i‡(
bøvÆue
 >
OP_ASSERT
 && bøvÆuê<
OP_ASSERTBACK_NOT
)

7603 
cd
->
as£π_dïth
 -= 1;

7614 i‡(
bøvÆue
 =
OP_COND
 && 
Àngth±r
 =
NULL
)

7616 
p¸e_uch¨
 *
tc
 = 
code
;

7617 
c⁄dcou¡
 = 0;

7620 
c⁄dcou¡
++;

7621 
tc
 +
	`GET
(tc,1);

7623 *
tc
 !
OP_KET
);

7628 i‡(
code
[
LINK_SIZE
+1] =
OP_DEF
)

7630 i‡(
c⁄dcou¡
 > 1)

7632 *
îr‹codïå
 = 
ERR54
;

7633 
FAILED
;

7635 
bøvÆue
 = 
OP_DEF
;

7644 i‡(
c⁄dcou¡
 > 2)

7646 *
îr‹codïå
 = 
ERR27
;

7647 
FAILED
;

7649 i‡(
c⁄dcou¡
 =1Ë
subfú°ch¨Êags
 = 
subªqch¨Êags
 = 
REQ_NONE
;

7655 i‡(*
±r
 !
CHAR_RIGHT_PARENTHESIS
)

7657 *
îr‹codïå
 = 
ERR14
;

7658 
FAILED
;

7666 i‡(
Àngth±r
 !
NULL
)

7668 i‡(
OFLOW_MAX
 - *
Àngth±r
 < 
Àngth_¥evgroup
 - 2 - 2*
LINK_SIZE
)

7670 *
îr‹codïå
 = 
ERR20
;

7671 
FAILED
;

7673 *
Àngth±r
 +
Àngth_¥evgroup
 - 2 - 2*
LINK_SIZE
;

7674 
code
++;

7675 
	`PUTINC
(
code
, 0, 1 + 
LINK_SIZE
);

7676 *
code
++ = 
OP_KET
;

7677 
	`PUTINC
(
code
, 0, 1 + 
LINK_SIZE
);

7683 
code
 = 
ãmpcode
;

7688 i‡(
bøvÆue
 =
OP_DEF
) ;

7697 
zî‹eqch¨
 = 
ªqch¨
;

7698 
zî‹eqch¨Êags
 = 
ªqch¨Êags
;

7699 
zîofú°ch¨
 = 
fú°ch¨
;

7700 
zîofú°ch¨Êags
 = 
fú°ch¨Êags
;

7701 
group£tfú°ch¨
 = 
FALSE
;

7703 i‡(
bøvÆue
 >
OP_ONCE
)

7711 i‡(
fú°ch¨Êags
 =
REQ_UNSET
)

7713 i‡(
subfú°ch¨Êags
 >= 0)

7715 
fú°ch¨
 = 
subfú°ch¨
;

7716 
fú°ch¨Êags
 = 
subfú°ch¨Êags
;

7717 
group£tfú°ch¨
 = 
TRUE
;

7719 
fú°ch¨Êags
 = 
REQ_NONE
;

7720 
zîofú°ch¨Êags
 = 
REQ_NONE
;

7727 i‡(
subfú°ch¨Êags
 >0 && 
subªqch¨Êags
 < 0)

7729 
subªqch¨
 = 
subfú°ch¨
;

7730 
subªqch¨Êags
 = 
subfú°ch¨Êags
 | 
ãm¥eqv¨y
;

7736 i‡(
subªqch¨Êags
 >= 0)

7738 
ªqch¨
 = 
subªqch¨
;

7739 
ªqch¨Êags
 = 
subªqch¨Êags
;

7751 i‡(
bøvÆue
 =
OP_ASSERT
 && 
subªqch¨Êags
 >= 0)

7753 
ªqch¨
 = 
subªqch¨
;

7754 
ªqch¨Êags
 = 
subªqch¨Êags
;

7768 
CHAR_BACKSLASH
:

7769 
ãmµå
 = 
±r
;

7770 
esˇ≥
 = 
	`check_esˇ≥
(&
±r
, &
ec
, 
îr‹codïå
, 
cd
->
bøcou¡
, 
›ti⁄s
, 
FALSE
);

7771 i‡(*
îr‹codïå
 !0Ë
FAILED
;

7773 i‡(
esˇ≥
 == 0)

7774 
c
 = 
ec
;

7777 i‡(
esˇ≥
 =
ESC_Q
)

7779 i‡(
±r
[1] =
CHAR_BACKSLASH
 &&Öå[2] =
CHAR_E
)

7780 
±r
 += 2;

7781 
öescq
 = 
TRUE
;

7785 i‡(
esˇ≥
 =
ESC_E
) ;

7790 i‡(
fú°ch¨Êags
 =
REQ_UNSET
 && 
esˇ≥
 > 
ESC_b
 &&Ésˇ≥ < 
ESC_Z
)

7791 
fú°ch¨Êags
 = 
REQ_NONE
;

7795 
zîofú°ch¨
 = 
fú°ch¨
;

7796 
zîofú°ch¨Êags
 = 
fú°ch¨Êags
;

7797 
zî‹eqch¨
 = 
ªqch¨
;

7798 
zî‹eqch¨Êags
 = 
ªqch¨Êags
;

7807 i‡(
esˇ≥
 =
ESC_g
)

7809 c⁄° 
p¸e_uch¨
 *
p
;

7810 
p¸e_uöt32
 
cf
;

7812 
ßve_hwm_off£t
 = 
cd
->
hwm
 - cd->
°¨t_w‹k•a˚
;

7813 
ãrmö©‹
 = (*(++
±r
Ë=
CHAR_LESS_THAN_SIGN
)?

7814 
CHAR_GREATER_THAN_SIGN
 : 
CHAR_APOSTROPHE
;

7821 
skùbyãs
 = 0;

7822 
ª£t_bøcou¡
 = 
FALSE
;

7826 
cf
 = 
±r
[1];

7827 i‡(
cf
 !
CHAR_PLUS
 && c‡!
CHAR_MINUS
 && !
	`IS_DIGIT
(cf))

7829 
is_ªcur£
 = 
TRUE
;

7830 
NAMED_REF_OR_RECURSE
;

7836 
p
 = 
±r
 + 2;

7837 
	`IS_DIGIT
(*
p
))Ö++;

7838 i‡(*
p
 !(
p¸e_uch¨
)
ãrmö©‹
)

7840 *
îr‹codïå
 = 
ERR57
;

7843 
±r
++;

7844 
HANDLE_NUMERICAL_RECURSION
;

7850 i‡(
esˇ≥
 =
ESC_k
)

7852 i‡((
±r
[1] !
CHAR_LESS_THAN_SIGN
 &&

7853 
±r
[1] !
CHAR_APOSTROPHE
 &&Öå[1] !
CHAR_LEFT_CURLY_BRACKET
))

7855 *
îr‹codïå
 = 
ERR69
;

7858 
is_ªcur£
 = 
FALSE
;

7859 
ãrmö©‹
 = (*(++
±r
Ë=
CHAR_LESS_THAN_SIGN
)?

7860 
CHAR_GREATER_THAN_SIGN
 : (*
±r
 =
CHAR_APOSTROPHE
)?

7861 
CHAR_APOSTROPHE
 : 
CHAR_RIGHT_CURLY_BRACKET
;

7862 
NAMED_REF_OR_RECURSE
;

7869 i‡(
esˇ≥
 < 0)

7871 
›í_ˇpôem
 *
oc
;

7872 
ª˙o
 = -
esˇ≥
;

7877 
HANDLE_REFERENCE
:

7878 i‡(
fú°ch¨Êags
 =
REQ_UNSET
Ëfú°ch¨Êag†
REQ_NONE
;

7879 
¥evious
 = 
code
;

7880 *
code
++ = ((
›ti⁄s
 & 
PCRE_CASELESS
Ë!0)? 
OP_REFI
 : 
OP_REF
;

7881 
	`PUT2INC
(
code
, 0, 
ª˙o
);

7882 
cd
->
backªf_m≠
 |(
ª˙o
 < 32)? (1 <<Ñecno) : 1;

7883 i‡(
ª˙o
 > 
cd
->
t›_backªf
) cd->top_backref =Ñecno;

7889 
oc
 = 
cd
->
›í_ˇps
; o¯!
NULL
; o¯oc->
√xt
)

7891 i‡(
oc
->
numbî
 =
ª˙o
)

7893 
oc
->
Êag
 = 
TRUE
;

7901 #ifde‡
SUPPORT_UCP


7902 i‡(
esˇ≥
 =
ESC_P
 ||Ésˇ≥ =
ESC_p
)

7904 
BOOL
 
√g©ed
;

7905 
±y≥
 = 0, 
pd©a
 = 0;

7906 i‡(!
	`gë_u˝
(&
±r
, &
√g©ed
, &
±y≥
, &
pd©a
, 
îr‹codïå
))

7907 
FAILED
;

7908 
¥evious
 = 
code
;

7909 *
code
++ = ((
esˇ≥
 =
ESC_p
Ë!
√g©ed
)? 
OP_PROP
 : 
OP_NOTPROP
;

7910 *
code
++ = 
±y≥
;

7911 *
code
++ = 
pd©a
;

7918 i‡(
esˇ≥
 =
ESC_X
 ||Ésˇ≥ =
ESC_P
 ||Ésˇ≥ =
ESC_p
)

7920 *
îr‹codïå
 = 
ERR45
;

7921 
FAILED
;

7933 i‡((
esˇ≥
 =
ESC_b
 ||Ésˇ≥ =
ESC_B
 ||Ésˇ≥ =
ESC_A
) &&

7934 
cd
->
max_lookbehöd
 == 0)

7935 
cd
->
max_lookbehöd
 = 1;

7936 #ifde‡
SUPPORT_UCP


7937 i‡(
esˇ≥
 >
ESC_DU
 &&Ésˇ≥ <
ESC_wu
)

7939 
√°±r
 = 
±r
 + 1;

7940 
±r
 = 
sub°ôuãs
[
esˇ≥
 - 
ESC_DU
] - 1;

7948 
¥evious
 = (
esˇ≥
 > 
ESC_b
 &&Ésˇ≥ < 
ESC_Z
)? 
code
 : 
NULL
;

7949 *
code
++ = (!
utf
 && 
esˇ≥
 =
ESC_C
)? 
OP_ALLANY
 :Éscape;

7959 #i‡
deföed
 
SUPPORT_UTF
 && !deföed 
COMPILE_PCRE32


7960 i‡(
utf
 && 
c
 > 
MAX_VALUE_FOR_SINGLE_CHAR
)

7961 
m˛ígth
 = 
	`PRIV
(
‹d2utf
)(
c
, 
mcbuf„r
);

7966 
mcbuf„r
[0] = 
c
;

7967 
m˛ígth
 = 1;

7969 
ONE_CHAR
;

7978 
NORMAL_CHAR
:

7979 
m˛ígth
 = 1;

7980 
mcbuf„r
[0] = 
c
;

7982 #ifde‡
SUPPORT_UTF


7983 i‡(
utf
 && 
	`HAS_EXTRALEN
(
c
))

7984 
	`ACROSSCHAR
(
TRUE
, 
±r
[1], 
mcbuf„r
[
m˛ígth
++] = *(++ptr));

7990 
ONE_CHAR
:

7991 
¥evious
 = 
code
;

7997 #ifde‡
SUPPORT_UCP


7998 i‡(
utf
 && (
›ti⁄s
 & 
PCRE_CASELESS
) != 0)

8000 
	`GETCHAR
(
c
, 
mcbuf„r
);

8001 i‡((
c
 = 
	`UCD_CASESET
(c)) != 0)

8003 *
code
++ = 
OP_PROP
;

8004 *
code
++ = 
PT_CLIST
;

8005 *
code
++ = 
c
;

8006 i‡(
fú°ch¨Êags
 =
REQ_UNSET
)

8007 
fú°ch¨Êags
 = 
zîofú°ch¨Êags
 = 
REQ_NONE
;

8015 *
code
++ = ((
›ti⁄s
 & 
PCRE_CASELESS
Ë!0)? 
OP_CHARI
 : 
OP_CHAR
;

8016 
c
 = 0; c < 
m˛ígth
; c++Ë*
code
++ = 
mcbuf„r
[c];

8020 i‡(
mcbuf„r
[0] =
CHAR_CR
 || mcbuf„r[0] =
CHAR_NL
)

8021 
cd
->
exã∫Æ_Êags
 |
PCRE_HASCRORLF
;

8028 i‡(
fú°ch¨Êags
 =
REQ_UNSET
)

8030 
zîofú°ch¨Êags
 = 
REQ_NONE
;

8031 
zî‹eqch¨
 = 
ªqch¨
;

8032 
zî‹eqch¨Êags
 = 
ªqch¨Êags
;

8037 i‡(
m˛ígth
 =1 || 
ªq_ˇ£›t
 == 0)

8039 
fú°ch¨
 = 
mcbuf„r
[0] | 
ªq_ˇ£›t
;

8040 
fú°ch¨
 = 
mcbuf„r
[0];

8041 
fú°ch¨Êags
 = 
ªq_ˇ£›t
;

8043 i‡(
m˛ígth
 != 1)

8045 
ªqch¨
 = 
code
[-1];

8046 
ªqch¨Êags
 = 
cd
->
ªq_v¨y›t
;

8049 
fú°ch¨Êags
 = 
ªqch¨Êags
 = 
REQ_NONE
;

8057 
zîofú°ch¨
 = 
fú°ch¨
;

8058 
zîofú°ch¨Êags
 = 
fú°ch¨Êags
;

8059 
zî‹eqch¨
 = 
ªqch¨
;

8060 
zî‹eqch¨Êags
 = 
ªqch¨Êags
;

8061 i‡(
m˛ígth
 =1 || 
ªq_ˇ£›t
 == 0)

8063 
ªqch¨
 = 
code
[-1];

8064 
ªqch¨Êags
 = 
ªq_ˇ£›t
 | 
cd
->
ªq_v¨y›t
;

8077 
FAILED
:

8078 *
±Ωå
 = 
±r
;

8079  
FALSE
;

8080 
	}
}

8116 
BOOL


8117 
	$compûe_ªgex
(
›ti⁄s
, 
p¸e_uch¨
 **
codïå
, c⁄°Ö¸e_uch¨ **
±Ωå
,

8118 *
îr‹codïå
, 
BOOL
 
lookbehöd
, BOOL 
ª£t_bøcou¡
, 
skùbyãs
,

8119 
c⁄d_dïth
,

8120 
p¸e_uöt32
 *
fú°ch¨±r
, 
p¸e_öt32
 *
fú°ch¨Êag•å
,

8121 
p¸e_uöt32
 *
ªqch¨±r
, 
p¸e_öt32
 *
ªqch¨Êag•å
,

8122 
bønch_chaö
 *
b˝å
, 
compûe_d©a
 *
cd
, *
Àngth±r
)

8124 c⁄° 
p¸e_uch¨
 *
±r
 = *
±Ωå
;

8125 
p¸e_uch¨
 *
code
 = *
codïå
;

8126 
p¸e_uch¨
 *
œ°_bønch
 = 
code
;

8127 
p¸e_uch¨
 *
°¨t_bøckë
 = 
code
;

8128 
p¸e_uch¨
 *
ªvî£_cou¡
 = 
NULL
;

8129 
›í_ˇpôem
 
ˇpôem
;

8130 
ˇ≤umbî
 = 0;

8131 
p¸e_uöt32
 
fú°ch¨
, 
ªqch¨
;

8132 
p¸e_öt32
 
fú°ch¨Êags
, 
ªqch¨Êags
;

8133 
p¸e_uöt32
 
bønchfú°ch¨
, 
bønchªqch¨
;

8134 
p¸e_öt32
 
bønchfú°ch¨Êags
, 
bønchªqch¨Êags
;

8135 
Àngth
;

8136 
‹ig_bøcou¡
;

8137 
max_bøcou¡
;

8138 
bønch_chaö
 
bc
;

8139 
size_t
 
ßve_hwm_off£t
;

8143 i‡(
	`PUBL
(
°ack_gu¨d
Ë!
NULL
 && PUBL(stack_guard)())

8145 *
îr‹codïå

ERR85
;

8146  
FALSE
;

8151 
bc
.
ouãr
 = 
b˝å
;

8152 
bc
.
cuºít_bønch
 = 
code
;

8154 
fú°ch¨
 = 
ªqch¨
 = 0;

8155 
fú°ch¨Êags
 = 
ªqch¨Êags
 = 
REQ_UNSET
;

8157 
ßve_hwm_off£t
 = 
cd
->
hwm
 - cd->
°¨t_w‹k•a˚
;

8166 
Àngth
 = 2 + 2*
LINK_SIZE
 + 
skùbyãs
;

8179 i‡(*
code
 =
OP_CBRA
)

8181 
ˇ≤umbî
 = 
	`GET2
(
code
, 1 + 
LINK_SIZE
);

8182 
ˇpôem
.
numbî
 = 
ˇ≤umbî
;

8183 
ˇpôem
.
√xt
 = 
cd
->
›í_ˇps
;

8184 
ˇpôem
.
Êag
 = 
FALSE
;

8185 
cd
->
›í_ˇps
 = &
ˇpôem
;

8190 
	`PUT
(
code
, 1, 0);

8191 
code
 +1 + 
LINK_SIZE
 + 
skùbyãs
;

8195 
‹ig_bøcou¡
 = 
max_bøcou¡
 = 
cd
->
bøcou¡
;

8201 i‡(
ª£t_bøcou¡
Ë
cd
->
bøcou¡
 = 
‹ig_bøcou¡
;

8205 i‡(
lookbehöd
)

8207 *
code
++ = 
OP_REVERSE
;

8208 
ªvî£_cou¡
 = 
code
;

8209 
	`PUTINC
(
code
, 0, 0);

8210 
Àngth
 +1 + 
LINK_SIZE
;

8216 i‡(!
	`compûe_bønch
(&
›ti⁄s
, &
code
, &
±r
, 
îr‹codïå
, &
bønchfú°ch¨
,

8217 &
bønchfú°ch¨Êags
, &
bønchªqch¨
, &
bønchªqch¨Êags
, &
bc
,

8218 
c⁄d_dïth
, 
cd
, (
Àngth±r
 =
NULL
)? NULL : &
Àngth
))

8220 *
±Ωå
 = 
±r
;

8221  
FALSE
;

8227 i‡(
cd
->
bøcou¡
 > 
max_bøcou¡
) max_bracount = cd->bracount;

8231 i‡(
Àngth±r
 =
NULL
)

8236 i‡(*
œ°_bønch
 !
OP_ALT
)

8238 
fú°ch¨
 = 
bønchfú°ch¨
;

8239 
fú°ch¨Êags
 = 
bønchfú°ch¨Êags
;

8240 
ªqch¨
 = 
bønchªqch¨
;

8241 
ªqch¨Êags
 = 
bønchªqch¨Êags
;

8255 i‡(
fú°ch¨Êags
 >= 0 &&

8256 (
fú°ch¨Êags
 !
bønchfú°ch¨Êags
 || 
fú°ch¨
 !
bønchfú°ch¨
))

8258 i‡(
ªqch¨Êags
 < 0)

8260 
ªqch¨
 = 
fú°ch¨
;

8261 
ªqch¨Êags
 = 
fú°ch¨Êags
;

8263 
fú°ch¨Êags
 = 
REQ_NONE
;

8269 i‡(
fú°ch¨Êags
 < 0 && 
bønchfú°ch¨Êags
 >0 && 
bønchªqch¨Êags
 < 0)

8271 
bønchªqch¨
 = 
bønchfú°ch¨
;

8272 
bønchªqch¨Êags
 = 
bønchfú°ch¨Êags
;

8277 i‡(((
ªqch¨Êags
 & ~
REQ_VARY
Ë!(
bønchªqch¨Êags
 & ~REQ_VARY)) ||

8278 
ªqch¨
 !
bønchªqch¨
)

8279 
ªqch¨Êags
 = 
REQ_NONE
;

8282 
ªqch¨
 = 
bønchªqch¨
;

8283 
ªqch¨Êags
 |
bønchªqch¨Êags
;

8295 i‡(
lookbehöd
)

8297 
fixed_Àngth
;

8298 *
code
 = 
OP_END
;

8299 
fixed_Àngth
 = 
	`föd_fixedÀngth
(
œ°_bønch
, (
›ti⁄s
 & 
PCRE_UTF8
) != 0,

8300 
FALSE
, 
cd
, 
NULL
);

8301 
	`DPRINTF
(("fixedÜígth = %d\n", 
fixed_Àngth
));

8302 i‡(
fixed_Àngth
 == -3)

8304 
cd
->
check_lookbehöd
 = 
TRUE
;

8306 i‡(
fixed_Àngth
 < 0)

8308 *
îr‹codïå
 = (
fixed_Àngth
 =-2)? 
ERR36
 :

8309 (
fixed_Àngth
 =-4)? 
ERR70
: 
ERR25
;

8310 *
±Ωå
 = 
±r
;

8311  
FALSE
;

8315 i‡(
fixed_Àngth
 > 
cd
->
max_lookbehöd
)

8316 
cd
->
max_lookbehöd
 = 
fixed_Àngth
;

8317 
	`PUT
(
ªvî£_cou¡
, 0, 
fixed_Àngth
);

8329 i‡(*
±r
 !
CHAR_VERTICAL_LINE
)

8331 i‡(
Àngth±r
 =
NULL
)

8333 
bønch_Àngth
 = ()(
code
 - 
œ°_bønch
);

8336 
¥ev_Àngth
 = 
	`GET
(
œ°_bønch
, 1);

8337 
	`PUT
(
œ°_bønch
, 1, 
bønch_Àngth
);

8338 
bønch_Àngth
 = 
¥ev_Àngth
;

8339 
œ°_bønch
 -
bønch_Àngth
;

8341 
bønch_Àngth
 > 0);

8346 *
code
 = 
OP_KET
;

8347 
	`PUT
(
code
, 1, ()(codê- 
°¨t_bøckë
));

8348 
code
 +1 + 
LINK_SIZE
;

8355 i‡(
ˇ≤umbî
 > 0)

8357 i‡(
cd
->
›í_ˇps
->
Êag
)

8359 *
code
 = 
OP_END
;

8360 
	`adju°_ªcur£
(
°¨t_bøckë
, 1 + 
LINK_SIZE
,

8361 (
›ti⁄s
 & 
PCRE_UTF8
Ë!0, 
cd
, 
ßve_hwm_off£t
);

8362 
	`memmove
(
°¨t_bøckë
 + 1 + 
LINK_SIZE
, start_bracket,

8363 
	`IN_UCHARS
(
code
 - 
°¨t_bøckë
));

8364 *
°¨t_bøckë
 = 
OP_ONCE
;

8365 
code
 +1 + 
LINK_SIZE
;

8366 
	`PUT
(
°¨t_bøckë
, 1, ()(
code
 - start_bracket));

8367 *
code
 = 
OP_KET
;

8368 
	`PUT
(
code
, 1, ()(codê- 
°¨t_bøckë
));

8369 
code
 +1 + 
LINK_SIZE
;

8370 
Àngth
 +2 + 2*
LINK_SIZE
;

8372 
cd
->
›í_ˇps
 = cd->›í_ˇps->
√xt
;

8377 
cd
->
bøcou¡
 = 
max_bøcou¡
;

8381 *
codïå
 = 
code
;

8382 *
±Ωå
 = 
±r
;

8383 *
fú°ch¨±r
 = 
fú°ch¨
;

8384 *
fú°ch¨Êag•å
 = 
fú°ch¨Êags
;

8385 *
ªqch¨±r
 = 
ªqch¨
;

8386 *
ªqch¨Êag•å
 = 
ªqch¨Êags
;

8387 i‡(
Àngth±r
 !
NULL
)

8389 i‡(
OFLOW_MAX
 - *
Àngth±r
 < 
Àngth
)

8391 *
îr‹codïå
 = 
ERR20
;

8392  
FALSE
;

8394 *
Àngth±r
 +
Àngth
;

8396  
TRUE
;

8408 i‡(
Àngth±r
 !
NULL
)

8410 
code
 = *
codïå
 + 1 + 
LINK_SIZE
 + 
skùbyãs
;

8411 
Àngth
 +1 + 
LINK_SIZE
;

8415 *
code
 = 
OP_ALT
;

8416 
	`PUT
(
code
, 1, ()(codê- 
œ°_bønch
));

8417 
bc
.
cuºít_bønch
 = 
œ°_bønch
 = 
code
;

8418 
code
 +1 + 
LINK_SIZE
;

8421 
±r
++;

8424 
	}
}

8470 
BOOL


8471 
	$is_™ch‹ed
(c⁄° 
p¸e_uch¨
 *
code
, 
bøckë_m≠
,

8472 
compûe_d©a
 *
cd
, 
©omcou¡
)

8475 c⁄° 
p¸e_uch¨
 *
scode
 = 
	`fú°_signifiˇ¡_code
(

8476 
code
 + 
	`PRIV
(
OP_Àngths
)[*code], 
FALSE
);

8477 
›
 = *
scode
;

8481 i‡(
›
 =
OP_BRA
 || o∞=
OP_BRAPOS
 ||

8482 
›
 =
OP_SBRA
 || o∞=
OP_SBRAPOS
)

8484 i‡(!
	`is_™ch‹ed
(
scode
, 
bøckë_m≠
, 
cd
, 
©omcou¡
)Ë 
FALSE
;

8489 i‡(
›
 =
OP_CBRA
 || o∞=
OP_CBRAPOS
 ||

8490 
›
 =
OP_SCBRA
 || o∞=
OP_SCBRAPOS
)

8492 
n
 = 
	`GET2
(
scode
, 1+
LINK_SIZE
);

8493 
√w_m≠
 = 
bøckë_m≠
 | ((
n
 < 32)? (1 <<Ç) : 1);

8494 i‡(!
	`is_™ch‹ed
(
scode
, 
√w_m≠
, 
cd
, 
©omcou¡
)Ë 
FALSE
;

8499 i‡(
›
 =
OP_ASSERT
 || o∞=
OP_COND
)

8501 i‡(!
	`is_™ch‹ed
(
scode
, 
bøckë_m≠
, 
cd
, 
©omcou¡
)Ë 
FALSE
;

8506 i‡(
›
 =
OP_ONCE
 || o∞=
OP_ONCE_NC
)

8508 i‡(!
	`is_™ch‹ed
(
scode
, 
bøckë_m≠
, 
cd
, 
©omcou¡
 + 1))

8509  
FALSE
;

8516 i‡((
›
 =
OP_TYPESTAR
 || o∞=
OP_TYPEMINSTAR
 ||

8517 
›
 =
OP_TYPEPOSSTAR
))

8519 i‡(
scode
[1] !
OP_ALLANY
 || (
bøckë_m≠
 & 
cd
->
backªf_m≠
) != 0 ||

8520 
©omcou¡
 > 0 || 
cd
->
had_¥u√‹skù
)

8521  
FALSE
;

8526 i‡(
›
 !
OP_SOD
 && o∞!
OP_SOM
 && o∞!
OP_CIRC
Ë 
FALSE
;

8528 
code
 +
	`GET
(code, 1);

8530 *
code
 =
OP_ALT
);

8531  
TRUE
;

8532 
	}
}

8560 
BOOL


8561 
	$is_°¨éöe
(c⁄° 
p¸e_uch¨
 *
code
, 
bøckë_m≠
,

8562 
compûe_d©a
 *
cd
, 
©omcou¡
)

8565 c⁄° 
p¸e_uch¨
 *
scode
 = 
	`fú°_signifiˇ¡_code
(

8566 
code
 + 
	`PRIV
(
OP_Àngths
)[*code], 
FALSE
);

8567 
›
 = *
scode
;

8574 i‡(
›
 =
OP_COND
)

8576 
scode
 +1 + 
LINK_SIZE
;

8577 i‡(*
scode
 =
OP_CALLOUT
Ëscodê+
	`PRIV
(
OP_Àngths
)[OP_CALLOUT];

8578 *
scode
)

8580 
OP_CREF
:

8581 
OP_DNCREF
:

8582 
OP_RREF
:

8583 
OP_DNRREF
:

8584 
OP_DEF
:

8585 
OP_FAIL
:

8586  
FALSE
;

8589 i‡(!
	`is_°¨éöe
(
scode
, 
bøckë_m≠
, 
cd
, 
©omcou¡
)Ë 
FALSE
;

8590 dÿ
scode
 +
	`GET
(scode, 1); *scodê=
OP_ALT
);

8591 
scode
 +1 + 
LINK_SIZE
;

8594 
scode
 = 
	`fú°_signifiˇ¡_code
(scode, 
FALSE
);

8595 
›
 = *
scode
;

8600 i‡(
›
 =
OP_BRA
 || o∞=
OP_BRAPOS
 ||

8601 
›
 =
OP_SBRA
 || o∞=
OP_SBRAPOS
)

8603 i‡(!
	`is_°¨éöe
(
scode
, 
bøckë_m≠
, 
cd
, 
©omcou¡
)Ë 
FALSE
;

8608 i‡(
›
 =
OP_CBRA
 || o∞=
OP_CBRAPOS
 ||

8609 
›
 =
OP_SCBRA
 || o∞=
OP_SCBRAPOS
)

8611 
n
 = 
	`GET2
(
scode
, 1+
LINK_SIZE
);

8612 
√w_m≠
 = 
bøckë_m≠
 | ((
n
 < 32)? (1 <<Ç) : 1);

8613 i‡(!
	`is_°¨éöe
(
scode
, 
√w_m≠
, 
cd
, 
©omcou¡
)Ë 
FALSE
;

8618 i‡(
›
 =
OP_ASSERT
)

8620 i‡(!
	`is_°¨éöe
(
scode
, 
bøckë_m≠
, 
cd
, 
©omcou¡
)Ë 
FALSE
;

8625 i‡(
›
 =
OP_ONCE
 || o∞=
OP_ONCE_NC
)

8627 i‡(!
	`is_°¨éöe
(
scode
, 
bøckë_m≠
, 
cd
, 
©omcou¡
 + 1)Ë 
FALSE
;

8636 i‡(
›
 =
OP_TYPESTAR
 || o∞=
OP_TYPEMINSTAR
 || o∞=
OP_TYPEPOSSTAR
)

8638 i‡(
scode
[1] !
OP_ANY
 || (
bøckë_m≠
 & 
cd
->
backªf_m≠
) != 0 ||

8639 
©omcou¡
 > 0 || 
cd
->
had_¥u√‹skù
)

8640  
FALSE
;

8648 i‡(
›
 !
OP_CIRC
 && o∞!
OP_CIRCM
Ë 
FALSE
;

8652 
code
 +
	`GET
(code, 1);

8654 *
code
 =
OP_ALT
);

8655  
TRUE
;

8656 
	}
}

8681 
p¸e_uöt32


8682 
	$föd_fú°as£πedch¨
(c⁄° 
p¸e_uch¨
 *
code
, 
p¸e_öt32
 *
Êags
,

8683 
BOOL
 
öas£π
)

8685 
p¸e_uöt32
 
c
 = 0;

8686 
cÊags
 = 
REQ_NONE
;

8688 *
Êags
 = 
REQ_NONE
;

8690 
p¸e_uöt32
 
d
;

8691 
dÊags
;

8692 
xl
 = (*
code
 =
OP_CBRA
 || *codê=
OP_SCBRA
 ||

8693 *
code
 =
OP_CBRAPOS
 || *codê=
OP_SCBRAPOS
)? 
IMM2_SIZE
:0;

8694 c⁄° 
p¸e_uch¨
 *
scode
 = 
	`fú°_signifiˇ¡_code
(
code
 + 1+
LINK_SIZE
 + 
xl
,

8695 
TRUE
);

8696 
p¸e_uch¨
 
›
 = *
scode
;

8698 
›
)

8703 
OP_BRA
:

8704 
OP_BRAPOS
:

8705 
OP_CBRA
:

8706 
OP_SCBRA
:

8707 
OP_CBRAPOS
:

8708 
OP_SCBRAPOS
:

8709 
OP_ASSERT
:

8710 
OP_ONCE
:

8711 
OP_ONCE_NC
:

8712 
d
 = 
	`föd_fú°as£πedch¨
(
scode
, &
dÊags
, 
›
 =
OP_ASSERT
);

8713 i‡(
dÊags
 < 0)

8715 i‡(
cÊags
 < 0Ë{ 
c
 = 
d
; cÊag†
dÊags
; } if (c != d || cflags != dflags)  0;

8718 
OP_EXACT
:

8719 
scode
 +
IMM2_SIZE
;

8722 
OP_CHAR
:

8723 
OP_PLUS
:

8724 
OP_MINPLUS
:

8725 
OP_POSPLUS
:

8726 i‡(!
öas£π
)  0;

8727 i‡(
cÊags
 < 0Ë{ 
c
 = 
scode
[1]; cflags = 0; }

8728 i‡(
c
 !
scode
[1])  0;

8731 
OP_EXACTI
:

8732 
scode
 +
IMM2_SIZE
;

8735 
OP_CHARI
:

8736 
OP_PLUSI
:

8737 
OP_MINPLUSI
:

8738 
OP_POSPLUSI
:

8739 i‡(!
öas£π
)  0;

8740 i‡(
cÊags
 < 0Ë{ 
c
 = 
scode
[1]; cÊag†
REQ_CASELESS
; }

8741 i‡(
c
 !
scode
[1])  0;

8745 
code
 +
	`GET
(code, 1);

8747 *
code
 =
OP_ALT
);

8749 *
Êags
 = 
cÊags
;

8750  
c
;

8751 
	}
}

8773 
	$add_«me
(
compûe_d©a
 *
cd
, c⁄° 
p¸e_uch¨
 *
«me
, 
Àngth
,

8774 
grou≤o
)

8776 
i
;

8777 
p¸e_uch¨
 *
¶Ÿ
 = 
cd
->
«me_èbÀ
;

8779 
i
 = 0; i < 
cd
->
«mes_found
; i++)

8781 
¸c
 = 
	`memcmp
(
«me
, 
¶Ÿ
+
IMM2_SIZE
, 
	`IN_UCHARS
(
Àngth
));

8782 i‡(
¸c
 =0 && 
¶Ÿ
[
IMM2_SIZE
+
Àngth
] != 0)

8783 
¸c
 = -1;

8790 i‡(
¸c
 < 0)

8792 
	`memmove
(
¶Ÿ
 + 
cd
->
«me_íåy_size
, slot,

8793 
	`IN_UCHARS
((
cd
->
«mes_found
 - 
i
Ë* cd->
«me_íåy_size
));

8799 
¶Ÿ
 +
cd
->
«me_íåy_size
;

8802 
	`PUT2
(
¶Ÿ
, 0, 
grou≤o
);

8803 
	`mem˝y
(
¶Ÿ
 + 
IMM2_SIZE
, 
«me
, 
	`IN_UCHARS
(
Àngth
));

8804 
¶Ÿ
[
IMM2_SIZE
 + 
Àngth
] = 0;

8805 
cd
->
«mes_found
++;

8806 
	}
}

8832 #i‡
deföed
 
COMPILE_PCRE8


8833 
PCRE_EXP_DEFN
 
p¸e
 * 
PCRE_CALL_CONVENTION


8834 
	$p¸e_compûe
(c⁄° *
∑âîn
, 
›ti⁄s
, c⁄° **
îr‹±r
,

8835 *
îr‹off£t
, c⁄° *
èbÀs
)

8836 #ñi‡
deföed
 
COMPILE_PCRE16


8837 
PCRE_EXP_DEFN
 
p¸e16
 * 
PCRE_CALL_CONVENTION


8838 
	$p¸e16_compûe
(
PCRE_SPTR16
 
∑âîn
, 
›ti⁄s
, c⁄° **
îr‹±r
,

8839 *
îr‹off£t
, c⁄° *
èbÀs
)

8840 #ñi‡
deföed
 
COMPILE_PCRE32


8841 
PCRE_EXP_DEFN
 
p¸e32
 * 
PCRE_CALL_CONVENTION


8842 
	$p¸e32_compûe
(
PCRE_SPTR32
 
∑âîn
, 
›ti⁄s
, c⁄° **
îr‹±r
,

8843 *
îr‹off£t
, c⁄° *
èbÀs
)

8846 #i‡
deföed
 
COMPILE_PCRE8


8847  
	`p¸e_compûe2
(
∑âîn
, 
›ti⁄s
, 
NULL
, 
îr‹±r
, 
îr‹off£t
, 
èbÀs
);

8848 #ñi‡
deföed
 
COMPILE_PCRE16


8849  
	`p¸e16_compûe2
(
∑âîn
, 
›ti⁄s
, 
NULL
, 
îr‹±r
, 
îr‹off£t
, 
èbÀs
);

8850 #ñi‡
deföed
 
COMPILE_PCRE32


8851  
	`p¸e32_compûe2
(
∑âîn
, 
›ti⁄s
, 
NULL
, 
îr‹±r
, 
îr‹off£t
, 
èbÀs
);

8853 
	}
}

8856 #i‡
deföed
 
COMPILE_PCRE8


8857 
PCRE_EXP_DEFN
 
p¸e
 * 
PCRE_CALL_CONVENTION


8858 
	$p¸e_compûe2
(c⁄° *
∑âîn
, 
›ti⁄s
, *
îr‹codïå
,

8859 c⁄° **
îr‹±r
, *
îr‹off£t
, c⁄° *
èbÀs
)

8860 #ñi‡
deföed
 
COMPILE_PCRE16


8861 
PCRE_EXP_DEFN
 
p¸e16
 * 
PCRE_CALL_CONVENTION


8862 
	$p¸e16_compûe2
(
PCRE_SPTR16
 
∑âîn
, 
›ti⁄s
, *
îr‹codïå
,

8863 c⁄° **
îr‹±r
, *
îr‹off£t
, c⁄° *
èbÀs
)

8864 #ñi‡
deföed
 
COMPILE_PCRE32


8865 
PCRE_EXP_DEFN
 
p¸e32
 * 
PCRE_CALL_CONVENTION


8866 
	$p¸e32_compûe2
(
PCRE_SPTR32
 
∑âîn
, 
›ti⁄s
, *
îr‹codïå
,

8867 c⁄° **
îr‹±r
, *
îr‹off£t
, c⁄° *
èbÀs
)

8870 
REAL_PCRE
 *
ª
;

8871 
Àngth
 = 1;

8872 
p¸e_öt32
 
fú°ch¨Êags
, 
ªqch¨Êags
;

8873 
p¸e_uöt32
 
fú°ch¨
, 
ªqch¨
;

8874 
p¸e_uöt32
 
limô_m©ch
 = 
PCRE_UINT32_MAX
;

8875 
p¸e_uöt32
 
limô_ªcursi⁄
 = 
PCRE_UINT32_MAX
;

8876 
√wlöe
;

8877 
îr‹code
 = 0;

8878 
skù©°¨t
 = 0;

8879 
BOOL
 
utf
;

8880 
BOOL
 
√vî_utf
 = 
FALSE
;

8881 
size_t
 
size
;

8882 
p¸e_uch¨
 *
code
;

8883 c⁄° 
p¸e_uch¨
 *
code°¨t
;

8884 c⁄° 
p¸e_uch¨
 *
±r
;

8885 
compûe_d©a
 
compûe_block
;

8886 
compûe_d©a
 *
cd
 = &
compûe_block
;

8895 
p¸e_uch¨
 
cw‹k•a˚
[
COMPILE_WORK_SIZE
];

8900 
«med_group
 
«med_groups
[
NAMED_GROUP_LIST_SIZE
];

8904 
±r
 = (c⁄° 
p¸e_uch¨
 *)
∑âîn
;

8910 i‡(
îr‹±r
 =
NULL
)

8912 i‡(
îr‹codïå
 !
NULL
) *errorcodeptr = 99;

8913  
NULL
;

8916 *
îr‹±r
 = 
NULL
;

8917 i‡(
îr‹codïå
 !
NULL
Ë*îr‹codïå = 
ERR0
;

8921 i‡(
îr‹off£t
 =
NULL
)

8923 
îr‹code
 = 
ERR16
;

8924 
PCRE_EARLY_ERROR_RETURN2
;

8927 *
îr‹off£t
 = 0;

8931 i‡(
èbÀs
 =
NULL
ËèbÀ†
	`PRIV
(
deÁu…_èbÀs
);

8932 
cd
->
lcc
 = 
èbÀs
 + 
lcc_off£t
;

8933 
cd
->
fcc
 = 
èbÀs
 + 
fcc_off£t
;

8934 
cd
->
cbôs
 = 
èbÀs
 + 
cbôs_off£t
;

8935 
cd
->
˘y≥s
 = 
èbÀs
 + 
˘y≥s_off£t
;

8939 i‡((
›ti⁄s
 & ~
PUBLIC_COMPILE_OPTIONS
) != 0)

8941 
îr‹code
 = 
ERR17
;

8942 
PCRE_EARLY_ERROR_RETURN
;

8947 i‡((
›ti⁄s
 & 
PCRE_NEVER_UTF
Ë!0Ë
√vî_utf
 = 
TRUE
;

8952 
cd
->
exã∫Æ_Êags
 = 0;

8954 
±r
[
skù©°¨t
] =
CHAR_LEFT_PARENTHESIS
 &&

8955 
±r
[
skù©°¨t
+1] =
CHAR_ASTERISK
)

8957 
√w∆
 = 0;

8958 
√wb§
 = 0;

8964 #ifde‡
COMPILE_PCRE8


8965 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_UTF8_RIGHTPAR
, 5) == 0)

8966 { 
skù©°¨t
 +7; 
›ti⁄s
 |
PCRE_UTF8
; ; }

8968 #ifde‡
COMPILE_PCRE16


8969 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_UTF16_RIGHTPAR
, 6) == 0)

8970 { 
skù©°¨t
 +8; 
›ti⁄s
 |
PCRE_UTF16
; ; }

8972 #ifde‡
COMPILE_PCRE32


8973 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_UTF32_RIGHTPAR
, 6) == 0)

8974 { 
skù©°¨t
 +8; 
›ti⁄s
 |
PCRE_UTF32
; ; }

8977 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_UTF_RIGHTPAR
, 4) == 0)

8978 { 
skù©°¨t
 +6; 
›ti⁄s
 |
PCRE_UTF8
; ; }

8979 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_UCP_RIGHTPAR
, 4) == 0)

8980 { 
skù©°¨t
 +6; 
›ti⁄s
 |
PCRE_UCP
; ; }

8981 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_NO_AUTO_POSSESS_RIGHTPAR
, 16) == 0)

8982 { 
skù©°¨t
 +18; 
›ti⁄s
 |
PCRE_NO_AUTO_POSSESS
; ; }

8983 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_NO_START_OPT_RIGHTPAR
, 13) == 0)

8984 { 
skù©°¨t
 +15; 
›ti⁄s
 |
PCRE_NO_START_OPTIMIZE
; ; }

8986 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_LIMIT_MATCH_EQ
, 12) == 0)

8988 
p¸e_uöt32
 
c
 = 0;

8989 
p
 = 
skù©°¨t
 + 14;

8990 
	`isdigô
(
±r
[
p
]))

8992 i‡(
c
 > 
PCRE_UINT32_MAX
 / 10 - 1) ;

8993 
c
 = c*10 + 
±r
[
p
++] - 
CHAR_0
;

8995 i‡(
±r
[
p
++] !
CHAR_RIGHT_PARENTHESIS
) ;

8996 i‡(
c
 < 
limô_m©ch
)

8998 
limô_m©ch
 = 
c
;

8999 
cd
->
exã∫Æ_Êags
 |
PCRE_MLSET
;

9001 
skù©°¨t
 = 
p
;

9005 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_LIMIT_RECURSION_EQ
, 16) == 0)

9007 
p¸e_uöt32
 
c
 = 0;

9008 
p
 = 
skù©°¨t
 + 18;

9009 
	`isdigô
(
±r
[
p
]))

9011 i‡(
c
 > 
PCRE_UINT32_MAX
 / 10 - 1) ;

9012 
c
 = c*10 + 
±r
[
p
++] - 
CHAR_0
;

9014 i‡(
±r
[
p
++] !
CHAR_RIGHT_PARENTHESIS
) ;

9015 i‡(
c
 < 
limô_ªcursi⁄
)

9017 
limô_ªcursi⁄
 = 
c
;

9018 
cd
->
exã∫Æ_Êags
 |
PCRE_RLSET
;

9020 
skù©°¨t
 = 
p
;

9024 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_CR_RIGHTPAR
, 3) == 0)

9025 { 
skù©°¨t
 +5; 
√w∆
 = 
PCRE_NEWLINE_CR
; }

9026 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_LF_RIGHTPAR
, 3) == 0)

9027 { 
skù©°¨t
 +5; 
√w∆
 = 
PCRE_NEWLINE_LF
; }

9028 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_CRLF_RIGHTPAR
, 5) == 0)

9029 { 
skù©°¨t
 +7; 
√w∆
 = 
PCRE_NEWLINE_CR
 + 
PCRE_NEWLINE_LF
; }

9030 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_ANY_RIGHTPAR
, 4) == 0)

9031 { 
skù©°¨t
 +6; 
√w∆
 = 
PCRE_NEWLINE_ANY
; }

9032 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_ANYCRLF_RIGHTPAR
, 8) == 0)

9033 { 
skù©°¨t
 +10; 
√w∆
 = 
PCRE_NEWLINE_ANYCRLF
; }

9035 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_BSR_ANYCRLF_RIGHTPAR
, 12) == 0)

9036 { 
skù©°¨t
 +14; 
√wb§
 = 
PCRE_BSR_ANYCRLF
; }

9037 i‡(
	`STRNCMP_UC_C8
(
±r
+
skù©°¨t
+2, 
STRING_BSR_UNICODE_RIGHTPAR
, 12) == 0)

9038 { 
skù©°¨t
 +14; 
√wb§
 = 
PCRE_BSR_UNICODE
; }

9040 i‡(
√w∆
 != 0)

9041 
›ti⁄s
 = (›ti⁄†& ~
PCRE_NEWLINE_BITS
Ë| 
√w∆
;

9042 i‡(
√wb§
 != 0)

9043 
›ti⁄s
 = (›ti⁄†& ~(
PCRE_BSR_ANYCRLF
|
PCRE_BSR_UNICODE
)Ë| 
√wb§
;

9048 
utf
 = (
›ti⁄s
 & 
PCRE_UTF8
) != 0;

9049 i‡(
utf
 && 
√vî_utf
)

9051 
îr‹code
 = 
ERR78
;

9052 
PCRE_EARLY_ERROR_RETURN2
;

9060 #ifde‡
SUPPORT_UTF


9061 i‡(
utf
 && (
›ti⁄s
 & 
PCRE_NO_UTF8_CHECK
) == 0 &&

9062 (
îr‹code
 = 
	`PRIV
(
vÆid_utf
)((
PCRE_PUCHAR
)
∑âîn
, -1, 
îr‹off£t
)) != 0)

9064 #i‡
deföed
 
COMPILE_PCRE8


9065 
îr‹code
 = 
ERR44
;

9066 #ñi‡
deföed
 
COMPILE_PCRE16


9067 
îr‹code
 = 
ERR74
;

9068 #ñi‡
deföed
 
COMPILE_PCRE32


9069 
îr‹code
 = 
ERR77
;

9071 
PCRE_EARLY_ERROR_RETURN2
;

9074 i‡(
utf
)

9076 
îr‹code
 = 
ERR32
;

9077 
PCRE_EARLY_ERROR_RETURN
;

9083 #i‚de‡
SUPPORT_UCP


9084 i‡((
›ti⁄s
 & 
PCRE_UCP
) != 0)

9086 
îr‹code
 = 
ERR67
;

9087 
PCRE_EARLY_ERROR_RETURN
;

9093 i‡((
›ti⁄s
 & (
PCRE_BSR_ANYCRLF
|
PCRE_BSR_UNICODE
)) ==

9094 (
PCRE_BSR_ANYCRLF
|
PCRE_BSR_UNICODE
))

9096 
îr‹code
 = 
ERR56
;

9097 
PCRE_EARLY_ERROR_RETURN
;

9104 
›ti⁄s
 & 
PCRE_NEWLINE_BITS
)

9106 0: 
√wlöe
 = 
NEWLINE
; ;

9107 
PCRE_NEWLINE_CR
: 
√wlöe
 = 
CHAR_CR
; ;

9108 
PCRE_NEWLINE_LF
: 
√wlöe
 = 
CHAR_NL
; ;

9109 
PCRE_NEWLINE_CR
+

9110 
PCRE_NEWLINE_LF
: 
√wlöe
 = (
CHAR_CR
 << 8Ë| 
CHAR_NL
; ;

9111 
PCRE_NEWLINE_ANY
: 
√wlöe
 = -1; ;

9112 
PCRE_NEWLINE_ANYCRLF
: 
√wlöe
 = -2; ;

9113 : 
îr‹code
 = 
ERR56
; 
PCRE_EARLY_ERROR_RETURN
;

9116 i‡(
√wlöe
 == -2)

9118 
cd
->
∆ty≥
 = 
NLTYPE_ANYCRLF
;

9120 i‡(
√wlöe
 < 0)

9122 
cd
->
∆ty≥
 = 
NLTYPE_ANY
;

9126 
cd
->
∆ty≥
 = 
NLTYPE_FIXED
;

9127 i‡(
√wlöe
 > 255)

9129 
cd
->
∆Àn
 = 2;

9130 
cd
->
∆
[0] = (
√wlöe
 >> 8) & 255;

9131 
cd
->
∆
[1] = 
√wlöe
 & 255;

9135 
cd
->
∆Àn
 = 1;

9136 
cd
->
∆
[0] = 
√wlöe
;

9144 
cd
->
t›_backªf
 = 0;

9145 
cd
->
backªf_m≠
 = 0;

9149 
	`DPRINTF
(("------------------------------------------------------------------\n"));

9150 #ifde‡
PCRE_DEBUG


9151 
	`¥öt_puch¨
(
°dout
, (
PCRE_PUCHAR
)
∑âîn
);

9153 
	`DPRINTF
(("\n"));

9162 
cd
->
bøcou¡
 = cd->
föÆ_bøcou¡
 = 0;

9163 
cd
->
«mes_found
 = 0;

9164 
cd
->
«me_íåy_size
 = 0;

9165 
cd
->
«me_èbÀ
 = 
NULL
;

9166 
cd
->
du≤ames
 = 
FALSE
;

9167 
cd
->
«medªfcou¡
 = 0;

9168 
cd
->
°¨t_code
 = 
cw‹k•a˚
;

9169 
cd
->
hwm
 = 
cw‹k•a˚
;

9170 
cd
->
isc⁄das£π
 = 
FALSE
;

9171 
cd
->
°¨t_w‹k•a˚
 = 
cw‹k•a˚
;

9172 
cd
->
w‹k•a˚_size
 = 
COMPILE_WORK_SIZE
;

9173 
cd
->
«med_groups
 =Çamed_groups;

9174 
cd
->
«med_group_li°_size
 = 
NAMED_GROUP_LIST_SIZE
;

9175 
cd
->
°¨t_∑âîn
 = (c⁄° 
p¸e_uch¨
 *)
∑âîn
;

9176 
cd
->
íd_∑âîn
 = (c⁄° 
p¸e_uch¨
 *)(
∑âîn
 + 
	`STRLEN_UC
((constÖcre_uchar *)pattern));

9177 
cd
->
ªq_v¨y›t
 = 0;

9178 
cd
->
∑ªns_dïth
 = 0;

9179 
cd
->
as£π_dïth
 = 0;

9180 
cd
->
max_lookbehöd
 = 0;

9181 
cd
->
exã∫Æ_›ti⁄s
 = 
›ti⁄s
;

9182 
cd
->
›í_ˇps
 = 
NULL
;

9190 
±r
 +
skù©°¨t
;

9191 
code
 = 
cw‹k•a˚
;

9192 *
code
 = 
OP_BRA
;

9194 ()
	`compûe_ªgex
(
cd
->
exã∫Æ_›ti⁄s
, &
code
, &
±r
, &
îr‹code
, 
FALSE
,

9195 
FALSE
, 0, 0, &
fú°ch¨
, &
fú°ch¨Êags
, &
ªqch¨
, &
ªqch¨Êags
, 
NULL
,

9196 
cd
, &
Àngth
);

9197 i‡(
îr‹code
 !0Ë
PCRE_EARLY_ERROR_RETURN
;

9199 
	`DPRINTF
(("ídÖª-compûe:Üígth=%d w‹k•a˚=%d\n", 
Àngth
,

9200 ()(
cd
->
hwm
 - 
cw‹k•a˚
)));

9202 i‡(
Àngth
 > 
MAX_PATTERN_SIZE
)

9204 
îr‹code
 = 
ERR20
;

9205 
PCRE_EARLY_ERROR_RETURN
;

9212 
size
 = (
REAL_PCRE
) +

9213 (
Àngth
 + 
cd
->
«mes_found
 * cd->
«me_íåy_size
Ë* (
p¸e_uch¨
);

9217 
ª
 = (
REAL_PCRE
 *)(
	`PUBL
(
mÆloc
))(
size
);

9218 i‡(
ª
 =
NULL
)

9220 
îr‹code
 = 
ERR21
;

9221 
PCRE_EARLY_ERROR_RETURN
;

9230 
ª
->
magic_numbî
 = 
MAGIC_NUMBER
;

9231 
ª
->
size
 = ()size;

9232 
ª
->
›ti⁄s
 = 
cd
->
exã∫Æ_›ti⁄s
;

9233 
ª
->
Êags
 = 
cd
->
exã∫Æ_Êags
;

9234 
ª
->
limô_m©ch
 =Üimit_match;

9235 
ª
->
limô_ªcursi⁄
 =Üimit_recursion;

9236 
ª
->
fú°_ch¨
 = 0;

9237 
ª
->
ªq_ch¨
 = 0;

9238 
ª
->
«me_èbÀ_off£t
 = (
REAL_PCRE
Ë/ (
p¸e_uch¨
);

9239 
ª
->
«me_íåy_size
 = 
cd
->name_entry_size;

9240 
ª
->
«me_cou¡
 = 
cd
->
«mes_found
;

9241 
ª
->
ªf_cou¡
 = 0;

9242 
ª
->
èbÀs
 = (èbÀ†=
	`PRIV
(
deÁu…_èbÀs
))? 
NULL
 :Åables;

9243 
ª
->
nuŒ∑d
 = 
NULL
;

9244 #ifde‡
COMPILE_PCRE32


9245 
ª
->
dummy
 = 0;

9247 
ª
->
dummy1
 =Ñe->
dummy2
 =Ñe->
dummy3
 = 0;

9257 
cd
->
föÆ_bøcou¡
 = cd->
bøcou¡
;

9258 
cd
->
∑ªns_dïth
 = 0;

9259 
cd
->
as£π_dïth
 = 0;

9260 
cd
->
bøcou¡
 = 0;

9261 
cd
->
max_lookbehöd
 = 0;

9262 
cd
->
«me_èbÀ
 = (
p¸e_uch¨
 *)
ª
 +Ñe->
«me_èbÀ_off£t
;

9263 
code°¨t
 = 
cd
->
«me_èbÀ
 + 
ª
->
«me_íåy_size
 *Ñe->
«me_cou¡
;

9264 
cd
->
°¨t_code
 = 
code°¨t
;

9265 
cd
->
hwm
 = (
p¸e_uch¨
 *)(cd->
°¨t_w‹k•a˚
);

9266 
cd
->
isc⁄das£π
 = 
FALSE
;

9267 
cd
->
ªq_v¨y›t
 = 0;

9268 
cd
->
had_ac˚±
 = 
FALSE
;

9269 
cd
->
had_¥u√‹skù
 = 
FALSE
;

9270 
cd
->
check_lookbehöd
 = 
FALSE
;

9271 
cd
->
›í_ˇps
 = 
NULL
;

9276 i‡(
cd
->
«mes_found
 > 0)

9278 
i
 = 
cd
->
«mes_found
;

9279 
«med_group
 *
ng
 = 
cd
->
«med_groups
;

9280 
cd
->
«mes_found
 = 0;

9281 ; 
i
 > 0; i--, 
ng
++)

9282 
	`add_«me
(
cd
, 
ng
->
«me
,Çg->
Àngth
,Çg->
numbî
);

9283 i‡(
cd
->
«med_group_li°_size
 > 
NAMED_GROUP_LIST_SIZE
)

9284 (
	`PUBL
(
‰ì
))((*)
cd
->
«med_groups
);

9291 
±r
 = (c⁄° 
p¸e_uch¨
 *)
∑âîn
 + 
skù©°¨t
;

9292 
code
 = (
p¸e_uch¨
 *)
code°¨t
;

9293 *
code
 = 
OP_BRA
;

9294 ()
	`compûe_ªgex
(
ª
->
›ti⁄s
, &
code
, &
±r
, &
îr‹code
, 
FALSE
, FALSE, 0, 0,

9295 &
fú°ch¨
, &
fú°ch¨Êags
, &
ªqch¨
, &
ªqch¨Êags
, 
NULL
, 
cd
, NULL);

9296 
ª
->
t›_bøckë
 = 
cd
->
bøcou¡
;

9297 
ª
->
t›_backªf
 = 
cd
->top_backref;

9298 
ª
->
max_lookbehöd
 = 
cd
->max_lookbehind;

9299 
ª
->
Êags
 = 
cd
->
exã∫Æ_Êags
 | 
PCRE_MODE
;

9301 i‡(
cd
->
had_ac˚±
)

9303 
ªqch¨
 = 0;

9304 
ªqch¨Êags
 = 
REQ_NONE
;

9309 i‡(
îr‹code
 =0 && *
±r
 !
CHAR_NULL
Ëîr‹codê
ERR22
;

9314 *
code
++ = 
OP_END
;

9316 #i‚de‡
PCRE_DEBUG


9317 i‡(
code
 - 
code°¨t
 > 
Àngth
Ë
îr‹code
 = 
ERR23
;

9320 #ifde‡
SUPPORT_VALGRIND


9324 
	`VALGRIND_MAKE_MEM_NOACCESS
(
code
, (
Àngth
 - (codê- 
code°¨t
)Ë* (
p¸e_uch¨
));

9330 i‡(
cd
->
hwm
 > cd->
°¨t_w‹k•a˚
)

9332 
¥ev_ª˙o
 = -1;

9333 c⁄° 
p¸e_uch¨
 *
grouµå
 = 
NULL
;

9334 
îr‹code
 =0 && 
cd
->
hwm
 > cd->
°¨t_w‹k•a˚
)

9336 
off£t
, 
ª˙o
;

9337 
cd
->
hwm
 -
LINK_SIZE
;

9338 
off£t
 = 
	`GET
(
cd
->
hwm
, 0);

9339 
ª˙o
 = 
	`GET
(
code°¨t
, 
off£t
);

9340 i‡(
ª˙o
 !
¥ev_ª˙o
)

9342 
grouµå
 = 
	`PRIV
(
föd_bøckë
)(
code°¨t
, 
utf
, 
ª˙o
);

9343 
¥ev_ª˙o
 = 
ª˙o
;

9345 i‡(
grouµå
 =
NULL
Ë
îr‹code
 = 
ERR53
;

9346 
	`PUT
(((
p¸e_uch¨
 *)
code°¨t
), 
off£t
, ()(
grouµå
 - codestart));

9353 i‡(
cd
->
w‹k•a˚_size
 > 
COMPILE_WORK_SIZE
)

9354 (
	`PUBL
(
‰ì
))((*)
cd
->
°¨t_w‹k•a˚
);

9355 
cd
->
°¨t_w‹k•a˚
 = 
NULL
;

9360 i‡(
îr‹code
 =0 && 
ª
->
t›_backªf
 >Ñe->
t›_bøckë
Ëîr‹codê
ERR15
;

9369 i‡((
›ti⁄s
 & 
PCRE_NO_AUTO_POSSESS
) == 0)

9371 
p¸e_uch¨
 *
ãmp
 = (p¸e_uch¨ *)
code°¨t
;

9372 
	`auto_pos£ssify
(
ãmp
, 
utf
, 
cd
);

9383 i‡(
cd
->
check_lookbehöd
)

9385 
p¸e_uch¨
 *
cc
 = (p¸e_uch¨ *)
code°¨t
;

9392 
cc
 = (
p¸e_uch¨
 *)
	`PRIV
(
föd_bøckë
)(
code°¨t
, 
utf
, -1);

9393 
cc
 !
NULL
;

9394 
cc
 = (
p¸e_uch¨
 *)
	`PRIV
(
föd_bøckë
)(cc, 
utf
, -1))

9396 i‡(
	`GET
(
cc
, 1) == 0)

9398 
fixed_Àngth
;

9399 
p¸e_uch¨
 *
be
 = 
cc
 - 1 - 
LINK_SIZE
 + 
	`GET
(cc, -LINK_SIZE);

9400 
íd_›
 = *
be
;

9401 *
be
 = 
OP_END
;

9402 
fixed_Àngth
 = 
	`föd_fixedÀngth
(
cc
, (
ª
->
›ti⁄s
 & 
PCRE_UTF8
Ë!0, 
TRUE
,

9403 
cd
, 
NULL
);

9404 *
be
 = 
íd_›
;

9405 
	`DPRINTF
(("fixedÜígth = %d\n", 
fixed_Àngth
));

9406 i‡(
fixed_Àngth
 < 0)

9408 
îr‹code
 = (
fixed_Àngth
 =-2)? 
ERR36
 :

9409 (
fixed_Àngth
 =-4)? 
ERR70
 : 
ERR25
;

9412 i‡(
fixed_Àngth
 > 
cd
->
max_lookbehöd
) cd->max_lookbehind = fixed_length;

9413 
	`PUT
(
cc
, 1, 
fixed_Àngth
);

9415 
cc
 +1 + 
LINK_SIZE
;

9421 i‡(
îr‹code
 != 0)

9423 (
	`PUBL
(
‰ì
))(
ª
);

9424 
PCRE_EARLY_ERROR_RETURN
:

9425 *
îr‹off£t
 = ()(
±r
 - (c⁄° 
p¸e_uch¨
 *)
∑âîn
);

9426 
PCRE_EARLY_ERROR_RETURN2
:

9427 *
îr‹±r
 = 
	`föd_îr‹_ãxt
(
îr‹code
);

9428 i‡(
îr‹codïå
 !
NULL
Ë*îr‹codïå = 
îr‹code
;

9429  
NULL
;

9443 i‡((
ª
->
›ti⁄s
 & 
PCRE_ANCHORED
) == 0)

9445 i‡(
	`is_™ch‹ed
(
code°¨t
, 0, 
cd
, 0)Ë
ª
->
›ti⁄s
 |
PCRE_ANCHORED
;

9448 i‡(
fú°ch¨Êags
 < 0)

9449 
fú°ch¨
 = 
	`föd_fú°as£πedch¨
(
code°¨t
, &
fú°ch¨Êags
, 
FALSE
);

9450 i‡(
fú°ch¨Êags
 >= 0)

9452 #i‡
deföed
 
COMPILE_PCRE8


9453 
ª
->
fú°_ch¨
 = 
fú°ch¨
 & 0xff;

9454 #ñi‡
deföed
 
COMPILE_PCRE16


9455 
ª
->
fú°_ch¨
 = 
fú°ch¨
 & 0xffff;

9456 #ñi‡
deföed
 
COMPILE_PCRE32


9457 
ª
->
fú°_ch¨
 = 
fú°ch¨
;

9459 i‡((
fú°ch¨Êags
 & 
REQ_CASELESS
) != 0)

9461 #i‡
deföed
 
SUPPORT_UCP
 && !(deföed 
COMPILE_PCRE8
)

9463 i‡(
utf
)

9465 i‡(
ª
->
fú°_ch¨
 < 128)

9467 i‡(
cd
->
fcc
[
ª
->
fú°_ch¨
] !=Ñe->first_char)

9468 
ª
->
Êags
 |
PCRE_FCH_CASELESS
;

9470 i‡(
	`UCD_OTHERCASE
(
ª
->
fú°_ch¨
) !=Ñe->first_char)

9471 
ª
->
Êags
 |
PCRE_FCH_CASELESS
;

9475 i‡(
	`MAX_255
(
ª
->
fú°_ch¨
)

9476 && 
cd
->
fcc
[
ª
->
fú°_ch¨
] !=Ñe->first_char)

9477 
ª
->
Êags
 |
PCRE_FCH_CASELESS
;

9480 
ª
->
Êags
 |
PCRE_FIRSTSET
;

9483 i‡(
	`is_°¨éöe
(
code°¨t
, 0, 
cd
, 0)Ë
ª
->
Êags
 |
PCRE_STARTLINE
;

9491 i‡(
ªqch¨Êags
 >= 0 &&

9492 ((
ª
->
›ti⁄s
 & 
PCRE_ANCHORED
Ë=0 || (
ªqch¨Êags
 & 
REQ_VARY
) != 0))

9494 #i‡
deföed
 
COMPILE_PCRE8


9495 
ª
->
ªq_ch¨
 = 
ªqch¨
 & 0xff;

9496 #ñi‡
deföed
 
COMPILE_PCRE16


9497 
ª
->
ªq_ch¨
 = 
ªqch¨
 & 0xffff;

9498 #ñi‡
deföed
 
COMPILE_PCRE32


9499 
ª
->
ªq_ch¨
 = 
ªqch¨
;

9501 i‡((
ªqch¨Êags
 & 
REQ_CASELESS
) != 0)

9503 #i‡
deföed
 
SUPPORT_UCP
 && !(deföed 
COMPILE_PCRE8
)

9505 i‡(
utf
)

9507 i‡(
ª
->
ªq_ch¨
 < 128)

9509 i‡(
cd
->
fcc
[
ª
->
ªq_ch¨
] !=Ñe->req_char)

9510 
ª
->
Êags
 |
PCRE_RCH_CASELESS
;

9512 i‡(
	`UCD_OTHERCASE
(
ª
->
ªq_ch¨
) !=Ñe->req_char)

9513 
ª
->
Êags
 |
PCRE_RCH_CASELESS
;

9517 i‡(
	`MAX_255
(
ª
->
ªq_ch¨
Ë&& 
cd
->
fcc
[re->req_char] !=Ñe->req_char)

9518 
ª
->
Êags
 |
PCRE_RCH_CASELESS
;

9521 
ª
->
Êags
 |
PCRE_REQCHSET
;

9527 #ifde‡
PCRE_DEBUG


9528 
	`¥ötf
("Length = %dÅop_bracket = %dÅop_backref = %d\n",

9529 
Àngth
, 
ª
->
t›_bøckë
,Ñe->
t›_backªf
);

9531 
	`¥ötf
("O±i⁄s=%08x\n", 
ª
->
›ti⁄s
);

9533 i‡((
ª
->
Êags
 & 
PCRE_FIRSTSET
) != 0)

9535 
p¸e_uch¨
 
ch
 = 
ª
->
fú°_ch¨
;

9536 c⁄° *
ˇ£Àss
 =

9537 ((
ª
->
Êags
 & 
PCRE_FCH_CASELESS
) == 0)? "" : " (caseless)";

9538 i‡(
	`PRINTABLE
(
ch
)Ë
	`¥ötf
("Fú° ch¨ = %c%s\n", ch, 
ˇ£Àss
);

9539 
	`¥ötf
("Fú° ch¨ = \\x%02x%s\n", 
ch
, 
ˇ£Àss
);

9542 i‡((
ª
->
Êags
 & 
PCRE_REQCHSET
) != 0)

9544 
p¸e_uch¨
 
ch
 = 
ª
->
ªq_ch¨
;

9545 c⁄° *
ˇ£Àss
 =

9546 ((
ª
->
Êags
 & 
PCRE_RCH_CASELESS
) == 0)? "" : " (caseless)";

9547 i‡(
	`PRINTABLE
(
ch
)Ë
	`¥ötf
("Req ch¨ = %c%s\n", ch, 
ˇ£Àss
);

9548 
	`¥ötf
("Req ch¨ = \\x%02x%s\n", 
ch
, 
ˇ£Àss
);

9551 #i‡
deföed
 
COMPILE_PCRE8


9552 
	`p¸e_¥ötöt
((
p¸e
 *)
ª
, 
°dout
, 
TRUE
);

9553 #ñi‡
deföed
 
COMPILE_PCRE16


9554 
	`p¸e16_¥ötöt
((
p¸e
 *)
ª
, 
°dout
, 
TRUE
);

9555 #ñi‡
deföed
 
COMPILE_PCRE32


9556 
	`p¸e32_¥ötöt
((
p¸e
 *)
ª
, 
°dout
, 
TRUE
);

9562 i‡(
code
 - 
code°¨t
 > 
Àngth
)

9564 (
	`PUBL
(
‰ì
))(
ª
);

9565 *
îr‹±r
 = 
	`föd_îr‹_ãxt
(
ERR23
);

9566 *
îr‹off£t
 = 
±r
 - (
p¸e_uch¨
 *)
∑âîn
;

9567 i‡(
îr‹codïå
 !
NULL
Ë*îr‹codïå = 
ERR23
;

9568  
NULL
;

9577 i‡(
	`could_be_em±y_bønch
(
code°¨t
, 
code
, 
utf
, 
cd
, 
NULL
))

9579 
ª
->
Êags
 |
PCRE_MATCH_EMPTY
;

9582 
code°¨t
 +
	`GET
(codestart, 1);

9584 *
code°¨t
 =
OP_ALT
);

9586 #i‡
deföed
 
COMPILE_PCRE8


9587  (
p¸e
 *)
ª
;

9588 #ñi‡
deföed
 
COMPILE_PCRE16


9589  (
p¸e16
 *)
ª
;

9590 #ñi‡
deföed
 
COMPILE_PCRE32


9591  (
p¸e32
 *)
ª
;

9593 
	}
}

	@pcre_globals.c

55 #ifde‡
HAVE_CONFIG_H


56 
	~"c⁄fig.h
"

59 
	~"p¸e_öã∫Æ.h
"

61 #i‡
deföed
 
_MSC_VER
 || deföed 
__SYMBIAN32__


62 * 
	$LoˇlP¸eMÆloc
(
size_t
 
aSize
)

64  
	`mÆloc
(
aSize
);

65 
	}
}

66 
	$LoˇlP¸eFªe
(* 
aPå
)

68 
	`‰ì
(
aPå
);

69 
	}
}

70 
PCRE_EXP_DATA_DEFN
 *(*
	$PUBL
(
mÆloc
))(
size_t
Ë
LoˇlP¸eMÆloc
;

71 
PCRE_EXP_DATA_DEFN
 (*
	$PUBL
(
‰ì
))(*Ë
LoˇlP¸eFªe
;

72 
PCRE_EXP_DATA_DEFN
 *(*
	$PUBL
(
°ack_mÆloc
))(
size_t
Ë
LoˇlP¸eMÆloc
;

73 
PCRE_EXP_DATA_DEFN
 (*
	$PUBL
(
°ack_‰ì
))(*Ë
LoˇlP¸eFªe
;

74 
PCRE_EXP_DATA_DEFN
 (*
	$PUBL
(
ˇŒout
))(
	`PUBL
(
ˇŒout_block
Ë*Ë
NULL
;

75 
PCRE_EXP_DATA_DEFN
 (*
	$PUBL
(
°ack_gu¨d
))(Ë
NULL
;

77 #ñi‡!
deföed
 
VPCOMPAT


78 
PCRE_EXP_DATA_DEFN
 *(*
	$PUBL
(
mÆloc
))(
size_t
) = malloc;

79 
PCRE_EXP_DATA_DEFN
 (*
	$PUBL
(
‰ì
))(*) = free;

80 
PCRE_EXP_DATA_DEFN
 *(*
	$PUBL
(
°ack_mÆloc
))(
size_t
Ë
mÆloc
;

81 
PCRE_EXP_DATA_DEFN
 (*
	$PUBL
(
°ack_‰ì
))(*Ë
‰ì
;

82 
PCRE_EXP_DATA_DEFN
 (*
	$PUBL
(
ˇŒout
))(
	`PUBL
(
ˇŒout_block
Ë*Ë
NULL
;

83 
PCRE_EXP_DATA_DEFN
 (*
	$PUBL
(
°ack_gu¨d
))(Ë
NULL
;

	@pcre_internal.h

46 #i‚de‡
PCRE_INTERNAL_H


47 
	#PCRE_INTERNAL_H


	)

52 
	#PCRE_DEBUG


	)

57 #i‡!
deföed
 
COMPILE_PCRE16
 && !deföed 
COMPILE_PCRE32


58 
	#COMPILE_PCRE8


	)

64 #i‡
deföed
 
SUPPORT_UCP
 && !(deföed 
SUPPORT_UTF
)

65 
	#SUPPORT_UTF
 1

	)

71 #i‡
deföed
 
SUPPORT_UTF8
 && !(deföed 
SUPPORT_UTF
)

72 
	#SUPPORT_UTF
 1

	)

78 #i‡
deföed
 
SUPPORT_UTF
 && !(deföed 
SUPPORT_UTF8
)

79 
	#SUPPORT_UTF8
 1

	)

85 #i‡
deföed
 
EBCDIC
 && deföed 
SUPPORT_UTF


86 #îr‹ 
The
 
u£
 
of
 
bŸh
 
EBCDIC
 
™d
 
SUPPORT_UTF
 
is
 
nŸ
 
suµ‹ãd
.

97 #unde‡
DPRINTF


98 #ifde‡
PCRE_DEBUG


99 
	#DPRINTF
(
p
Ë
¥ötf
 
	)
p

101 
	#DPRINTF
(
p
Ë

	)

108 
	~<˘y≥.h
>

109 
	~<limôs.h
>

110 
	~<°ddef.h
>

111 
	~<°dio.h
>

112 
	~<°dlib.h
>

113 
	~<°rög.h
>

117 #ifde‡
SUPPORT_VALGRIND


118 
	~<vÆgröd/memcheck.h
>

148 #i‚de‡
PCRE_EXP_DECL


149 #ifde‡
_WIN32


150 #i‚de‡
PCRE_STATIC


151 
	#PCRE_EXP_DECL
 
	`__de˛•ec
(
dŒexp‹t
)

	)

152 
	#PCRE_EXP_DEFN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

153 
	#PCRE_EXP_DATA_DEFN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

155 
	#PCRE_EXP_DECL
 

	)

156 
	#PCRE_EXP_DEFN


	)

157 
	#PCRE_EXP_DATA_DEFN


	)

160 #ifde‡
__˝lu•lus


161 
	#PCRE_EXP_DECL
 "C"

	)

163 
	#PCRE_EXP_DECL
 

	)

165 #i‚de‡
PCRE_EXP_DEFN


166 
	#PCRE_EXP_DEFN
 
PCRE_EXP_DECL


	)

168 #i‚de‡
PCRE_EXP_DATA_DEFN


169 
	#PCRE_EXP_DATA_DEFN


	)

184 #i‚de‡
PCRE_CALL_CONVENTION


185 
	#PCRE_CALL_CONVENTION


	)

194 
	tp¸e_uöt8
;

196 #i‡
USHRT_MAX
 == 65535

197 
	tp¸e_uöt16
;

198 
	tp¸e_öt16
;

199 
	#PCRE_UINT16_MAX
 
USHRT_MAX


	)

200 
	#PCRE_INT16_MAX
 
SHRT_MAX


	)

201 #ñi‡
UINT_MAX
 == 65535

202 
	tp¸e_uöt16
;

203 
	tp¸e_öt16
;

204 
	#PCRE_UINT16_MAX
 
UINT_MAX


	)

205 
	#PCRE_INT16_MAX
 
INT_MAX


	)

207 #îr‹ 
C™nŸ
 
dëîmöe
 
a
 
ty≥
 16-
bô
 
öãgîs


210 #i‡
UINT_MAX
 == 4294967295U

211 
	tp¸e_uöt32
;

212 
	tp¸e_öt32
;

213 
	#PCRE_UINT32_MAX
 
UINT_MAX


	)

214 
	#PCRE_INT32_MAX
 
INT_MAX


	)

215 #ñi‡
ULONG_MAX
 == 4294967295UL

216 
	tp¸e_uöt32
;

217 
	tp¸e_öt32
;

218 
	#PCRE_UINT32_MAX
 
ULONG_MAX


	)

219 
	#PCRE_INT32_MAX
 
LONG_MAX


	)

221 #îr‹ 
C™nŸ
 
dëîmöe
 
a
 
ty≥
 32-
bô
 
öãgîs


232 #i‡
deföed
 
HAVE_STDINT_H


233 
	~<°döt.h
>

234 #ñi‡
deföed
 
HAVE_INTTYPES_H


235 
	~<öây≥s.h
>

238 #i‡
deföed
 
INT64_MAX
 || deföed 
öt64_t


239 
	#INT64_OR_DOUBLE
 
öt64_t


	)

241 
	#INT64_OR_DOUBLE
 

	)

261 #i‡
deföed
 
COMPILE_PCRE8


263 
	tp¸e_uch¨
;

264 
	#IN_UCHARS
(
x
Ë(x)

	)

265 
	#MAX_255
(
c
Ë1

	)

266 
	#TABLE_GET
(
c
, 
èbÀ
, Ë(—abÀ)[c])

	)

268 #ñi‡
deföed
 
COMPILE_PCRE16


270 #i‡
USHRT_MAX
 != 65535

273 #îr‹ 
W¨nög
: 
PCRE_UCHAR16
 
is
 
nŸ
 
a
 16 
bô
 
d©a
 
ty≥
.

276 
p¸e_uöt16
 
	tp¸e_uch¨
;

277 
	#UCHAR_SHIFT
 (1)

	)

278 
	#IN_UCHARS
(
x
Ë((xË<< 
UCHAR_SHIFT
)

	)

279 
	#MAX_255
(
c
Ë((cË<255u)

	)

280 
	#TABLE_GET
(
c
, 
èbÀ
, Ë(
	`MAX_255
(c)? (—abÀ)[c]):())

	)

282 #ñi‡
deföed
 
COMPILE_PCRE32


284 
p¸e_uöt32
 
	tp¸e_uch¨
;

285 
	#UCHAR_SHIFT
 (2)

	)

286 
	#IN_UCHARS
(
x
Ë((xË<< 
UCHAR_SHIFT
)

	)

287 
	#MAX_255
(
c
Ë((cË<255u)

	)

288 
	#TABLE_GET
(
c
, 
èbÀ
, Ë(
	`MAX_255
(c)? (—abÀ)[c]):())

	)

291 #îr‹ 
Unsuµ‹ãd
 
compûög
 
mode


298 
	#NOTACHAR
 0xffffffff

	)

306 
	#NLTYPE_FIXED
 0

	)

307 
	#NLTYPE_ANY
 1

	)

308 
	#NLTYPE_ANYCRLF
 2

	)

312 
	#IS_NEWLINE
(
p
) \

313 ((
NLBLOCK
->
∆ty≥
 !
NLTYPE_FIXED
)? \

314 ((
p
Ë< 
NLBLOCK
->
PSEND
 && \

315 
	`PRIV
(
is_√wlöe
)((
p
), 
NLBLOCK
->
∆ty≥
, NLBLOCK->
PSEND
, \

316 &(
NLBLOCK
->
∆Àn
), 
utf
)) \

318 ((
p
Ë<
NLBLOCK
->
PSEND
 - NLBLOCK->
∆Àn
 && \

319 
	`UCHAR21TEST
(
p
Ë=
NLBLOCK
->
∆
[0] && \

320 (
NLBLOCK
->
∆Àn
 =1 || 
	`UCHAR21TEST
(
p
+1Ë=NLBLOCK->
∆
[1]) \

322 )

	)

326 
	#WAS_NEWLINE
(
p
) \

327 ((
NLBLOCK
->
∆ty≥
 !
NLTYPE_FIXED
)? \

328 ((
p
Ë> 
NLBLOCK
->
PSSTART
 && \

329 
	`PRIV
(
was_√wlöe
)((
p
), 
NLBLOCK
->
∆ty≥
, NLBLOCK->
PSSTART
, \

330 &(
NLBLOCK
->
∆Àn
), 
utf
)) \

332 ((
p
Ë>
NLBLOCK
->
PSSTART
 + NLBLOCK->
∆Àn
 && \

333 
	`UCHAR21TEST
(
p
 - 
NLBLOCK
->
∆Àn
Ë=NLBLOCK->
∆
[0] && \

334 (
NLBLOCK
->
∆Àn
 =1 || 
	`UCHAR21TEST
(
p
 - NLBLOCK->∆À¿+ 1Ë=NLBLOCK->
∆
[1]) \

336 )

	)

347 #ifde‡
CUSTOM_SUBJECT_PTR


348 
	#PCRE_PUCHAR
 
CUSTOM_SUBJECT_PTR


	)

350 
	#PCRE_PUCHAR
 c⁄° 
p¸e_uch¨
 *

	)

356 
	~"p¸e.h
"

357 
	~"u˝.h
"

359 #ifde‡
COMPILE_PCRE32


361 
	t__as£π_p¸e_uch¨32_size
[(
PCRE_UCHAR32
) == 4 ? 1 : -1];

368 #ifde‡
VPCOMPAT


369 
	#°æí
(
s
Ë
	`_°æí
(s)

	)

370 
	#°∫cmp
(
s1
,
s2
,
m
Ë
	`_°∫cmp
(s1,s2,m)

	)

371 
	#memcmp
(
s
,
c
,
n
Ë
	`_memcmp
(s,c,n)

	)

372 
	#mem˝y
(
d
,
s
,
n
Ë
	`_mem˝y
(d,s,n)

	)

373 
	#memmove
(
d
,
s
,
n
Ë
	`_memmove
(d,s,n)

	)

374 
	#mem£t
(
s
,
c
,
n
Ë
	`_mem£t
(s,c,n)

	)

382 #i‚de‡
HAVE_MEMMOVE


383 #unde‡
memmove


384 #ifde‡
HAVE_BCOPY


385 
	#memmove
(
a
, 
b
, 
c
Ë
	`bc›y
(b,á, c)

	)

388 
	$p¸e_memmove
(*
d
, c⁄° *
s
, 
size_t
 
n
)

390 
size_t
 
i
;

391 *
de°
 = (*)
d
;

392 c⁄° *
§c
 = (c⁄° *)
s
;

393 i‡(
de°
 > 
§c
)

395 
de°
 +
n
;

396 
§c
 +
n
;

397 
i
 = 0; i < 
n
; ++iË*(--
de°
Ë*(--
§c
);

398  (*)
de°
;

402 
i
 = 0; i < 
n
; ++iË*
de°
++ = *
§c
++;

403  (*)(
de°
 - 
n
);

405 
	}
}

406 
	#memmove
(
a
, 
b
, 
c
Ë
	`p¸e_memmove
◊, b, c)

	)

425 #i‡
deföed
 
COMPILE_PCRE8


427 #i‡
LINK_SIZE
 == 2

429 
	#PUT
(
a
,
n
,
d
) \

430 (
a
[
n
] = (
d
) >> 8), \

431 (
a
[(
n
)+1] = (
d
Ë& 255)

	)

433 
	#GET
(
a
,
n
) \

434 (((
a
)[
n
] << 8Ë| (a)[“)+1])

	)

436 
	#MAX_PATTERN_SIZE
 (1 << 16)

	)

439 #ñi‡
LINK_SIZE
 == 3

441 
	#PUT
(
a
,
n
,
d
) \

442 (
a
[
n
] = (
d
) >> 16), \

443 (
a
[(
n
)+1] = (
d
) >> 8), \

444 (
a
[(
n
)+2] = (
d
Ë& 255)

	)

446 
	#GET
(
a
,
n
) \

447 (((
a
)[
n
] << 16Ë| (◊)[“)+1] << 8Ë| (a)[“)+2])

	)

449 
	#MAX_PATTERN_SIZE
 (1 << 24)

	)

452 #ñi‡
LINK_SIZE
 == 4

454 
	#PUT
(
a
,
n
,
d
) \

455 (
a
[
n
] = (
d
) >> 24), \

456 (
a
[(
n
)+1] = (
d
) >> 16), \

457 (
a
[(
n
)+2] = (
d
) >> 8), \

458 (
a
[(
n
)+3] = (
d
Ë& 255)

	)

460 
	#GET
(
a
,
n
) \

461 (((
a
)[
n
] << 24Ë| (◊)[“)+1] << 16Ë| (◊)[“)+2] << 8Ë| (a)[“)+3])

	)

464 
	#MAX_PATTERN_SIZE
 (1 << 30)

	)

467 #îr‹ 
LINK_SIZE
 
mu°
 
be
 
eôhî
 2, 3, 
‹
 4

470 #ñi‡
deföed
 
COMPILE_PCRE16


472 #i‡
LINK_SIZE
 == 2

475 #unde‡
LINK_SIZE


476 
	#LINK_SIZE
 1

	)

478 
	#PUT
(
a
,
n
,
d
) \

479 (
a
[
n
] = (
d
))

	)

481 
	#GET
(
a
,
n
) \

482 (
a
[
n
])

	)

484 
	#MAX_PATTERN_SIZE
 (1 << 16)

	)

486 #ñi‡
LINK_SIZE
 == 3 || LINK_SIZE == 4

489 #unde‡
LINK_SIZE


490 
	#LINK_SIZE
 2

	)

492 
	#PUT
(
a
,
n
,
d
) \

493 (
a
[
n
] = (
d
) >> 16), \

494 (
a
[(
n
)+1] = (
d
Ë& 65535)

	)

496 
	#GET
(
a
,
n
) \

497 (((
a
)[
n
] << 16Ë| (a)[“)+1])

	)

500 
	#MAX_PATTERN_SIZE
 (1 << 30)

	)

503 #îr‹ 
LINK_SIZE
 
mu°
 
be
 
eôhî
 2, 3, 
‹
 4

506 #ñi‡
deföed
 
COMPILE_PCRE32


510 #unde‡
LINK_SIZE


511 
	#LINK_SIZE
 1

	)

513 
	#PUT
(
a
,
n
,
d
) \

514 (
a
[
n
] = (
d
))

	)

516 
	#GET
(
a
,
n
) \

517 (
a
[
n
])

	)

520 
	#MAX_PATTERN_SIZE
 (1 << 30)

	)

523 #îr‹ 
Unsuµ‹ãd
 
compûög
 
mode


528 
	#PUTINC
(
a
,
n
,
d
Ë
	`PUT
◊,n,d),á +
LINK_SIZE


	)

535 #i‡
deföed
 
COMPILE_PCRE8


537 
	#IMM2_SIZE
 2

	)

539 
	#PUT2
(
a
,
n
,
d
) \

540 
a
[
n
] = (
d
) >> 8; \

541 
a
[(
n
)+1] = (
d
Ë& 255

	)

547 
	#GET2
(
a
,
n
) \

548 ()(((
a
)[
n
] << 8Ë| (a)[“)+1])

	)

550 #ñi‡
deföed
 
COMPILE_PCRE16


552 
	#IMM2_SIZE
 1

	)

554 
	#PUT2
(
a
,
n
,
d
) \

555 
a
[
n
] = 
d


	)

557 
	#GET2
(
a
,
n
) \

558 
a
[
n
]

	)

560 #ñi‡
deföed
 
COMPILE_PCRE32


562 
	#IMM2_SIZE
 1

	)

564 
	#PUT2
(
a
,
n
,
d
) \

565 
a
[
n
] = 
d


	)

567 
	#GET2
(
a
,
n
) \

568 
a
[
n
]

	)

571 #îr‹ 
Unsuµ‹ãd
 
compûög
 
mode


574 
	#PUT2INC
(
a
,
n
,
d
Ë
	`PUT2
◊,n,d),á +
IMM2_SIZE


	)

579 #i‡
deföed
 
COMPILE_PCRE16
 || deföed 
COMPILE_PCRE32


580 
	#MAX_MARK
 ((1u << 16Ë- 1)

	)

582 
	#MAX_MARK
 ((1u << 8Ë- 1)

	)

595 
	#UCHAR21
(
ïå
Ë(*”±r))

	)

596 
	#UCHAR21TEST
(
ïå
Ë(*”±r))

	)

597 
	#UCHAR21INC
(
ïå
Ë(*”±r)++)

	)

598 
	#UCHAR21INCTEST
(
ïå
Ë(*”±r)++)

	)

607 #i‚de‡
SUPPORT_UTF


613 
	#GETCHAR
(
c
, 
ïå
Ë¯*ïå;

	)

614 
	#GETCHARTEST
(
c
, 
ïå
Ë¯*ïå;

	)

615 
	#GETCHARINC
(
c
, 
ïå
Ë¯*ïå++;

	)

616 
	#GETCHARINCTEST
(
c
, 
ïå
Ë¯*ïå++;

	)

617 
	#GETCHARLEN
(
c
, 
ïå
, 
Àn
Ë¯*ïå;

	)

627 
	#HASUTF8EXTRALEN
(
c
Ë((cË>0xc0)

	)

632 
	#GETUTF8
(
c
, 
ïå
) \

634 i‡((
c
 & 0x20) == 0) \

635 
c
 = ((¯& 0x1fË<< 6Ë| (
ïå
[1] & 0x3f); \

636 i‡((
c
 & 0x10) == 0) \

637 
c
 = ((¯& 0x0fË<< 12Ë| ((
ïå
[1] & 0x3f) << 6) | (eptr[2] & 0x3f); \

638 i‡((
c
 & 0x08) == 0) \

639 
c
 = ((¯& 0x07Ë<< 18Ë| ((
ïå
[1] & 0x3f) << 12) | \

640 ((
ïå
[2] & 0x3f) << 6) | (eptr[3] & 0x3f); \

641 i‡((
c
 & 0x04) == 0) \

642 
c
 = ((¯& 0x03Ë<< 24Ë| ((
ïå
[1] & 0x3f) << 18) | \

643 ((
ïå
[2] & 0x3f) << 12) | ((eptr[3] & 0x3f) << 6) | \

644 (
ïå
[4] & 0x3f); \

646 
c
 = ((¯& 0x01Ë<< 30Ë| ((
ïå
[1] & 0x3f) << 24) | \

647 ((
ïå
[2] & 0x3f) << 18) | ((eptr[3] & 0x3f) << 12) | \

648 ((
ïå
[4] & 0x3f) << 6) | (eptr[5] & 0x3f); \

649 }

	)

654 
	#GETUTF8INC
(
c
, 
ïå
) \

656 i‡((
c
 & 0x20) == 0) \

657 
c
 = ((¯& 0x1fË<< 6Ë| (*
ïå
++ & 0x3f); \

658 i‡((
c
 & 0x10) == 0) \

660 
c
 = ((¯& 0x0fË<< 12Ë| ((*
ïå
 & 0x3f) << 6) | (eptr[1] & 0x3f); \

661 
ïå
 += 2; \

663 i‡((
c
 & 0x08) == 0) \

665 
c
 = ((¯& 0x07Ë<< 18Ë| ((*
ïå
 & 0x3f) << 12) | \

666 ((
ïå
[1] & 0x3f) << 6) | (eptr[2] & 0x3f); \

667 
ïå
 += 3; \

669 i‡((
c
 & 0x04) == 0) \

671 
c
 = ((¯& 0x03Ë<< 24Ë| ((*
ïå
 & 0x3f) << 18) | \

672 ((
ïå
[1] & 0x3f) << 12) | ((eptr[2] & 0x3f) << 6) | \

673 (
ïå
[3] & 0x3f); \

674 
ïå
 += 4; \

678 
c
 = ((¯& 0x01Ë<< 30Ë| ((*
ïå
 & 0x3f) << 24) | \

679 ((
ïå
[1] & 0x3f) << 18) | ((eptr[2] & 0x3f) << 12) | \

680 ((
ïå
[3] & 0x3f) << 6) | (eptr[4] & 0x3f); \

681 
ïå
 += 5; \

683 }

	)

685 #i‡
deföed
 
COMPILE_PCRE8


694 
	#MAX_VALUE_FOR_SINGLE_CHAR
 127

	)

698 
	#HAS_EXTRALEN
(
c
Ë((cË>0xc0)

	)

703 
	#GET_EXTRALEN
(
c
Ë(
	`PRIV
(
utf8_èbÀ4
)[(cË& 0x3f])

	)

708 
	#NOT_FIRSTCHAR
(
c
Ë(((cË& 0xc0Ë=0x80)

	)

713 
	#GETCHAR
(
c
, 
ïå
) \

714 
c
 = *
ïå
; \

715 i‡(
c
 >0xc0Ë
	`GETUTF8
(c, 
ïå
);

	)

720 
	#GETCHARTEST
(
c
, 
ïå
) \

721 
c
 = *
ïå
; \

722 i‡(
utf
 && 
c
 >0xc0Ë
	`GETUTF8
(c, 
ïå
);

	)

727 
	#GETCHARINC
(
c
, 
ïå
) \

728 
c
 = *
ïå
++; \

729 i‡(
c
 >0xc0Ë
	`GETUTF8INC
(c, 
ïå
);

	)

734 
	#GETCHARINCTEST
(
c
, 
ïå
) \

735 
c
 = *
ïå
++; \

736 i‡(
utf
 && 
c
 >0xc0Ë
	`GETUTF8INC
(c, 
ïå
);

	)

741 
	#GETUTF8LEN
(
c
, 
ïå
, 
Àn
) \

743 i‡((
c
 & 0x20) == 0) \

745 
c
 = ((¯& 0x1fË<< 6Ë| (
ïå
[1] & 0x3f); \

746 
Àn
++; \

748 i‡((
c
 & 0x10) == 0) \

750 
c
 = ((¯& 0x0fË<< 12Ë| ((
ïå
[1] & 0x3f) << 6) | (eptr[2] & 0x3f); \

751 
Àn
 += 2; \

753 i‡((
c
 & 0x08) == 0) \

755 
c
 = ((¯& 0x07Ë<< 18Ë| ((
ïå
[1] & 0x3f) << 12) | \

756 ((
ïå
[2] & 0x3f) << 6) | (eptr[3] & 0x3f); \

757 
Àn
 += 3; \

759 i‡((
c
 & 0x04) == 0) \

761 
c
 = ((¯& 0x03Ë<< 24Ë| ((
ïå
[1] & 0x3f) << 18) | \

762 ((
ïå
[2] & 0x3f) << 12) | ((eptr[3] & 0x3f) << 6) | \

763 (
ïå
[4] & 0x3f); \

764 
Àn
 += 4; \

768 
c
 = ((¯& 0x01Ë<< 30Ë| ((
ïå
[1] & 0x3f) << 24) | \

769 ((
ïå
[2] & 0x3f) << 18) | ((eptr[3] & 0x3f) << 12) | \

770 ((
ïå
[4] & 0x3f) << 6) | (eptr[5] & 0x3f); \

771 
Àn
 += 5; \

773 }

	)

778 
	#GETCHARLEN
(
c
, 
ïå
, 
Àn
) \

779 
c
 = *
ïå
; \

780 i‡(
c
 >0xc0Ë
	`GETUTF8LEN
(c, 
ïå
, 
Àn
);

	)

786 
	#GETCHARLENTEST
(
c
, 
ïå
, 
Àn
) \

787 
c
 = *
ïå
; \

788 i‡(
utf
 && 
c
 >0xc0Ë
	`GETUTF8LEN
(c, 
ïå
, 
Àn
);

	)

794 
	#BACKCHAR
(
ïå
Ë(*ïå & 0xc0Ë=0x80Ëïå--

	)

797 
	#FORWARDCHAR
(
ïå
Ë(*ïå & 0xc0Ë=0x80Ëïå++

	)

800 
	#ACROSSCHAR
(
c⁄dôi⁄
, 
ïå
, 
a˘i⁄
) \

801 (
c⁄dôi⁄
Ë&& ((
ïå
Ë& 0xc0Ë=0x80Ë
a˘i⁄


	)

803 #ñi‡
deföed
 
COMPILE_PCRE16


807 
	#MAX_VALUE_FOR_SINGLE_CHAR
 65535

	)

811 
	#HAS_EXTRALEN
(
c
Ë(((cË& 0xfc00Ë=0xd800)

	)

816 
	#GET_EXTRALEN
(
c
Ë1

	)

821 
	#NOT_FIRSTCHAR
(
c
Ë(((cË& 0xfc00Ë=0xdc00)

	)

826 
	#GETUTF16
(
c
, 
ïå
) \

827 { 
c
 = (((¯& 0x3ffË<< 10Ë| (
ïå
[1] & 0x3ff)Ë+ 0x10000; }

	)

832 
	#GETCHAR
(
c
, 
ïå
) \

833 
c
 = *
ïå
; \

834 i‡((
c
 & 0xfc00Ë=0xd800Ë
	`GETUTF16
(c, 
ïå
);

	)

839 
	#GETCHARTEST
(
c
, 
ïå
) \

840 
c
 = *
ïå
; \

841 i‡(
utf
 && (
c
 & 0xfc00Ë=0xd800Ë
	`GETUTF16
(c, 
ïå
);

	)

846 
	#GETUTF16INC
(
c
, 
ïå
) \

847 { 
c
 = (((¯& 0x3ffË<< 10Ë| (*
ïå
++ & 0x3ff)Ë+ 0x10000; }

	)

852 
	#GETCHARINC
(
c
, 
ïå
) \

853 
c
 = *
ïå
++; \

854 i‡((
c
 & 0xfc00Ë=0xd800Ë
	`GETUTF16INC
(c, 
ïå
);

	)

859 
	#GETCHARINCTEST
(
c
, 
ïå
) \

860 
c
 = *
ïå
++; \

861 i‡(
utf
 && (
c
 & 0xfc00Ë=0xd800Ë
	`GETUTF16INC
(c, 
ïå
);

	)

866 
	#GETUTF16LEN
(
c
, 
ïå
, 
Àn
) \

867 { 
c
 = (((¯& 0x3ffË<< 10Ë| (
ïå
[1] & 0x3ff)Ë+ 0x10000; 
Àn
++; }

	)

873 
	#GETCHARLEN
(
c
, 
ïå
, 
Àn
) \

874 
c
 = *
ïå
; \

875 i‡((
c
 & 0xfc00Ë=0xd800Ë
	`GETUTF16LEN
(c, 
ïå
, 
Àn
);

	)

881 
	#GETCHARLENTEST
(
c
, 
ïå
, 
Àn
) \

882 
c
 = *
ïå
; \

883 i‡(
utf
 && (
c
 & 0xfc00Ë=0xd800Ë
	`GETUTF16LEN
(c, 
ïå
, 
Àn
);

	)

890 
	#BACKCHAR
(
ïå
Ëi‡((*ïå & 0xfc00Ë=0xdc00Ëïå--

	)

893 
	#FORWARDCHAR
(
ïå
Ëi‡((*ïå & 0xfc00Ë=0xdc00Ëïå++

	)

896 
	#ACROSSCHAR
(
c⁄dôi⁄
, 
ïå
, 
a˘i⁄
) \

897 i‡((
c⁄dôi⁄
Ë&& ((
ïå
Ë& 0xfc00Ë=0xdc00Ë
a˘i⁄


	)

899 #ñi‡
deföed
 
COMPILE_PCRE32


903 
	#MAX_VALUE_FOR_SINGLE_CHAR
 (0x10ffffu)

	)

904 
	#HAS_EXTRALEN
(
c
Ë(0)

	)

905 
	#GET_EXTRALEN
(
c
Ë(0)

	)

906 
	#NOT_FIRSTCHAR
(
c
Ë(0)

	)

911 
	#GETCHAR
(
c
, 
ïå
) \

912 
c
 = *(
ïå
);

	)

917 
	#GETCHARTEST
(
c
, 
ïå
) \

918 
c
 = *(
ïå
);

	)

923 
	#GETCHARINC
(
c
, 
ïå
) \

924 
c
 = *((
ïå
)++);

	)

929 
	#GETCHARINCTEST
(
c
, 
ïå
) \

930 
c
 = *((
ïå
)++);

	)

936 
	#GETCHARLEN
(
c
, 
ïå
, 
Àn
) \

937 
	`GETCHAR
(
c
, 
ïå
)

	)

943 
	#GETCHARLENTEST
(
c
, 
ïå
, 
Àn
) \

944 
	`GETCHARTEST
(
c
, 
ïå
)

	)

952 
	#BACKCHAR
(
ïå
Ëdÿ{ } 0)

	)

955 
	#FORWARDCHAR
(
ïå
Ëdÿ{ } 0)

	)

958 
	#ACROSSCHAR
(
c⁄dôi⁄
, 
ïå
, 
a˘i⁄
Ëdÿ{ } 0)

	)

961 #îr‹ 
Unsuµ‹ãd
 
compûög
 
mode


984 #i‚de‡
EBCDIC


986 
	#HSPACE_LIST
 \

987 
CHAR_HT
, 
CHAR_SPACE
, 0xa0, \

990 
NOTACHAR


	)

992 
	#HSPACE_MULTIBYTE_CASES
 \

1008 0x3000

	)

1010 
	#HSPACE_BYTE_CASES
 \

1011 
CHAR_HT
: \

1012 
CHAR_SPACE
: \

1013 0xa0

	)

1015 
	#HSPACE_CASES
 \

1016 
HSPACE_BYTE_CASES
: \

1017 
HSPACE_MULTIBYTE_CASES


	)

1019 
	#VSPACE_LIST
 \

1020 
CHAR_LF
, 
CHAR_VT
, 
CHAR_FF
, 
CHAR_CR
, 
CHAR_NEL
, 0x2028, 0x2029, 
NOTACHAR


	)

1022 
	#VSPACE_MULTIBYTE_CASES
 \

1024 0x2029

	)

1026 
	#VSPACE_BYTE_CASES
 \

1027 
CHAR_LF
: \

1028 
CHAR_VT
: \

1029 
CHAR_FF
: \

1030 
CHAR_CR
: \

1031 
CHAR_NEL


	)

1033 
	#VSPACE_CASES
 \

1034 
VSPACE_BYTE_CASES
: \

1035 
VSPACE_MULTIBYTE_CASES


	)

1040 
	#HSPACE_LIST
 
CHAR_HT
, 
CHAR_SPACE


	)

1042 
	#HSPACE_BYTE_CASES
 \

1043 
CHAR_HT
: \

1044 
CHAR_SPACE


	)

1046 
	#HSPACE_CASES
 
HSPACE_BYTE_CASES


	)

1048 #ifde‡
EBCDIC_NL25


1049 
	#VSPACE_LIST
 \

1050 
CHAR_VT
, 
CHAR_FF
, 
CHAR_CR
, 
CHAR_NEL
, 
CHAR_LF
, 
NOTACHAR


	)

1052 
	#VSPACE_LIST
 \

1053 
CHAR_VT
, 
CHAR_FF
, 
CHAR_CR
, 
CHAR_LF
, 
CHAR_NEL
, 
NOTACHAR


	)

1056 
	#VSPACE_BYTE_CASES
 \

1057 
CHAR_LF
: \

1058 
CHAR_VT
: \

1059 
CHAR_FF
: \

1060 
CHAR_CR
: \

1061 
CHAR_NEL


	)

1063 
	#VSPACE_CASES
 
VSPACE_BYTE_CASES


	)

1077 
	#PCRE_MODE8
 0x00000001

	)

1078 
	#PCRE_MODE16
 0x00000002

	)

1079 
	#PCRE_MODE32
 0x00000004

	)

1080 
	#PCRE_FIRSTSET
 0x00000010

	)

1081 
	#PCRE_FCH_CASELESS
 0x00000020

	)

1082 
	#PCRE_REQCHSET
 0x00000040

	)

1083 
	#PCRE_RCH_CASELESS
 0x00000080

	)

1084 
	#PCRE_STARTLINE
 0x00000100

	)

1085 
	#PCRE_NOPARTIAL
 0x00000200

	)

1086 
	#PCRE_JCHANGED
 0x00000400

	)

1087 
	#PCRE_HASCRORLF
 0x00000800

	)

1088 
	#PCRE_HASTHEN
 0x00001000

	)

1089 
	#PCRE_MLSET
 0x00002000

	)

1090 
	#PCRE_RLSET
 0x00004000

	)

1091 
	#PCRE_MATCH_EMPTY
 0x00008000

	)

1093 #i‡
deföed
 
COMPILE_PCRE8


1094 
	#PCRE_MODE
 
PCRE_MODE8


	)

1095 #ñi‡
deföed
 
COMPILE_PCRE16


1096 
	#PCRE_MODE
 
PCRE_MODE16


	)

1097 #ñi‡
deföed
 
COMPILE_PCRE32


1098 
	#PCRE_MODE
 
PCRE_MODE32


	)

1100 
	#PCRE_MODE_MASK
 (
PCRE_MODE8
 | 
PCRE_MODE16
 | 
PCRE_MODE32
)

	)

1104 
	#PCRE_STUDY_MAPPED
 0x0001

	)

1105 
	#PCRE_STUDY_MINLEN
 0x0002

	)

1110 
	#PCRE_NEWLINE_BITS
 (
PCRE_NEWLINE_CR
|
PCRE_NEWLINE_LF
|
PCRE_NEWLINE_ANY
| \

1111 
PCRE_NEWLINE_ANYCRLF
)

	)

1113 
	#PUBLIC_COMPILE_OPTIONS
 \

1114 (
PCRE_CASELESS
|
PCRE_EXTENDED
|
PCRE_ANCHORED
|
PCRE_MULTILINE
| \

1115 
PCRE_DOTALL
|
PCRE_DOLLAR_ENDONLY
|
PCRE_EXTRA
|
PCRE_UNGREEDY
|
PCRE_UTF8
| \

1116 
PCRE_NO_AUTO_CAPTURE
|
PCRE_NO_AUTO_POSSESS
| \

1117 
PCRE_NO_UTF8_CHECK
|
PCRE_AUTO_CALLOUT
|
PCRE_FIRSTLINE
| \

1118 
PCRE_DUPNAMES
|
PCRE_NEWLINE_BITS
|
PCRE_BSR_ANYCRLF
|
PCRE_BSR_UNICODE
| \

1119 
PCRE_JAVASCRIPT_COMPAT
|
PCRE_UCP
|
PCRE_NO_START_OPTIMIZE
|
PCRE_NEVER_UTF
)

	)

1121 
	#PUBLIC_EXEC_OPTIONS
 \

1122 (
PCRE_ANCHORED
|
PCRE_NOTBOL
|
PCRE_NOTEOL
|
PCRE_NOTEMPTY
|
PCRE_NOTEMPTY_ATSTART
| \

1123 
PCRE_NO_UTF8_CHECK
|
PCRE_PARTIAL_HARD
|
PCRE_PARTIAL_SOFT
|
PCRE_NEWLINE_BITS
| \

1124 
PCRE_BSR_ANYCRLF
|
PCRE_BSR_UNICODE
|
PCRE_NO_START_OPTIMIZE
)

	)

1126 
	#PUBLIC_DFA_EXEC_OPTIONS
 \

1127 (
PCRE_ANCHORED
|
PCRE_NOTBOL
|
PCRE_NOTEOL
|
PCRE_NOTEMPTY
|
PCRE_NOTEMPTY_ATSTART
| \

1128 
PCRE_NO_UTF8_CHECK
|
PCRE_PARTIAL_HARD
|
PCRE_PARTIAL_SOFT
|
PCRE_DFA_SHORTEST
| \

1129 
PCRE_DFA_RESTART
|
PCRE_NEWLINE_BITS
|
PCRE_BSR_ANYCRLF
|
PCRE_BSR_UNICODE
| \

1130 
PCRE_NO_START_OPTIMIZE
)

	)

1132 
	#PUBLIC_STUDY_OPTIONS
 \

1133 (
PCRE_STUDY_JIT_COMPILE
|
PCRE_STUDY_JIT_PARTIAL_SOFT_COMPILE
| \

1134 
PCRE_STUDY_JIT_PARTIAL_HARD_COMPILE
|
PCRE_STUDY_EXTRA_NEEDED
)

	)

1136 
	#PUBLIC_JIT_EXEC_OPTIONS
 \

1137 (
PCRE_NO_UTF8_CHECK
|
PCRE_NOTBOL
|
PCRE_NOTEOL
|
PCRE_NOTEMPTY
|\

1138 
PCRE_NOTEMPTY_ATSTART
|
PCRE_PARTIAL_SOFT
|
PCRE_PARTIAL_HARD
)

	)

1142 
	#MAGIC_NUMBER
 0x50435245UL

	)

1147 
	#REVERSED_MAGIC_NUMBER
 0x45524350UL

	)

1152 
	#REQ_BYTE_MAX
 1000

	)

1158 
	tBOOL
;

1160 #i‚de‡
FALSE


1161 
	#FALSE
 0

	)

1162 
	#TRUE
 1

	)

1182 #i‚de‡
SUPPORT_UTF


1199 #ifde‡
EBCDIC


1201 #i‚de‡
EBCDIC_NL25


1202 
	#CHAR_NL
 '\x15'

	)

1203 
	#CHAR_NEL
 '\x25'

	)

1204 
	#STR_NL
 "\x15"

	)

1205 
	#STR_NEL
 "\x25"

	)

1207 
	#CHAR_NL
 '\x25'

	)

1208 
	#CHAR_NEL
 '\x15'

	)

1209 
	#STR_NL
 "\x25"

	)

1210 
	#STR_NEL
 "\x15"

	)

1213 
	#CHAR_LF
 
CHAR_NL


	)

1214 
	#STR_LF
 
STR_NL


	)

1216 
	#CHAR_ESC
 '\047'

	)

1217 
	#CHAR_DEL
 '\007'

	)

1218 
	#STR_ESC
 "\047"

	)

1219 
	#STR_DEL
 "\007"

	)

1227 
	#CHAR_LF
 '\n'

	)

1228 
	#CHAR_NL
 
CHAR_LF


	)

1229 
	#CHAR_NEL
 (()'\x85')

	)

1230 
	#CHAR_ESC
 '\033'

	)

1231 
	#CHAR_DEL
 '\177'

	)

1233 
	#STR_LF
 "\n"

	)

1234 
	#STR_NL
 
STR_LF


	)

1235 
	#STR_NEL
 "\x85"

	)

1236 
	#STR_ESC
 "\033"

	)

1237 
	#STR_DEL
 "\177"

	)

1243 
	#CHAR_NULL
 '\0'

	)

1244 
	#CHAR_HT
 '\t'

	)

1245 
	#CHAR_VT
 '\v'

	)

1246 
	#CHAR_FF
 '\f'

	)

1247 
	#CHAR_CR
 '\r'

	)

1248 
	#CHAR_BS
 '\b'

	)

1249 
	#CHAR_BEL
 '\a'

	)

1251 
	#CHAR_SPACE
 ' '

	)

1252 
	#CHAR_EXCLAMATION_MARK
 '!'

	)

1253 
	#CHAR_QUOTATION_MARK
 '"'

	)

1254 
	#CHAR_NUMBER_SIGN
 '#'

	)

1255 
	#CHAR_DOLLAR_SIGN
 '$'

	)

1256 
	#CHAR_PERCENT_SIGN
 '%'

	)

1257 
	#CHAR_AMPERSAND
 '&'

	)

1258 
	#CHAR_APOSTROPHE
 '\''

	)

1259 
	#CHAR_LEFT_PARENTHESIS
 '('

	)

1260 
	#CHAR_RIGHT_PARENTHESIS
 ')'

	)

1261 
	#CHAR_ASTERISK
 '*'

	)

1262 
	#CHAR_PLUS
 '+'

	)

1263 
	#CHAR_COMMA
 ','

	)

1264 
	#CHAR_MINUS
 '-'

	)

1265 
	#CHAR_DOT
 '.'

	)

1266 
	#CHAR_SLASH
 '/'

	)

1267 
	#CHAR_0
 '0'

	)

1268 
	#CHAR_1
 '1'

	)

1269 
	#CHAR_2
 '2'

	)

1270 
	#CHAR_3
 '3'

	)

1271 
	#CHAR_4
 '4'

	)

1272 
	#CHAR_5
 '5'

	)

1273 
	#CHAR_6
 '6'

	)

1274 
	#CHAR_7
 '7'

	)

1275 
	#CHAR_8
 '8'

	)

1276 
	#CHAR_9
 '9'

	)

1277 
	#CHAR_COLON
 ':'

	)

1278 
	#CHAR_SEMICOLON
 ';'

	)

1279 
	#CHAR_LESS_THAN_SIGN
 '<'

	)

1280 
	#CHAR_EQUALS_SIGN
 '='

	)

1281 
	#CHAR_GREATER_THAN_SIGN
 '>'

	)

1282 
	#CHAR_QUESTION_MARK
 '?'

	)

1283 
	#CHAR_COMMERCIAL_AT
 '@'

	)

1284 
	#CHAR_A
 'A'

	)

1285 
	#CHAR_B
 'B'

	)

1286 
	#CHAR_C
 'C'

	)

1287 
	#CHAR_D
 'D'

	)

1288 
	#CHAR_E
 'E'

	)

1289 
	#CHAR_F
 'F'

	)

1290 
	#CHAR_G
 'G'

	)

1291 
	#CHAR_H
 'H'

	)

1292 
	#CHAR_I
 'I'

	)

1293 
	#CHAR_J
 'J'

	)

1294 
	#CHAR_K
 'K'

	)

1295 
	#CHAR_L
 'L'

	)

1296 
	#CHAR_M
 'M'

	)

1297 
	#CHAR_N
 'N'

	)

1298 
	#CHAR_O
 'O'

	)

1299 
	#CHAR_P
 'P'

	)

1300 
	#CHAR_Q
 'Q'

	)

1301 
	#CHAR_R
 'R'

	)

1302 
	#CHAR_S
 'S'

	)

1303 
	#CHAR_T
 'T'

	)

1304 
	#CHAR_U
 'U'

	)

1305 
	#CHAR_V
 'V'

	)

1306 
	#CHAR_W
 'W'

	)

1307 
	#CHAR_X
 'X'

	)

1308 
	#CHAR_Y
 'Y'

	)

1309 
	#CHAR_Z
 'Z'

	)

1310 
	#CHAR_LEFT_SQUARE_BRACKET
 '['

	)

1311 
	#CHAR_BACKSLASH
 '\\'

	)

1312 
	#CHAR_RIGHT_SQUARE_BRACKET
 ']'

	)

1313 
	#CHAR_CIRCUMFLEX_ACCENT
 '^'

	)

1314 
	#CHAR_UNDERSCORE
 '_'

	)

1315 
	#CHAR_GRAVE_ACCENT
 '`'

	)

1316 
	#CHAR_a
 'a'

	)

1317 
	#CHAR_b
 'b'

	)

1318 
	#CHAR_c
 'c'

	)

1319 
	#CHAR_d
 'd'

	)

1320 
	#CHAR_e
 'e'

	)

1321 
	#CHAR_f
 'f'

	)

1322 
	#CHAR_g
 'g'

	)

1323 
	#CHAR_h
 'h'

	)

1324 
	#CHAR_i
 'i'

	)

1325 
	#CHAR_j
 'j'

	)

1326 
	#CHAR_k
 'k'

	)

1327 
	#CHAR_l
 'l'

	)

1328 
	#CHAR_m
 'm'

	)

1329 
	#CHAR_n
 'n'

	)

1330 
	#CHAR_o
 'o'

	)

1331 
	#CHAR_p
 'p'

	)

1332 
	#CHAR_q
 'q'

	)

1333 
	#CHAR_r
 'r'

	)

1334 
	#CHAR_s
 's'

	)

1335 
	#CHAR_t
 't'

	)

1336 
	#CHAR_u
 'u'

	)

1337 
	#CHAR_v
 'v'

	)

1338 
	#CHAR_w
 'w'

	)

1339 
	#CHAR_x
 'x'

	)

1340 
	#CHAR_y
 'y'

	)

1341 
	#CHAR_z
 'z'

	)

1342 
	#CHAR_LEFT_CURLY_BRACKET
 '{'

	)

1343 
	#CHAR_VERTICAL_LINE
 '|'

	)

1344 
	#CHAR_RIGHT_CURLY_BRACKET
 '}'

	)

1345 
	#CHAR_TILDE
 '~'

	)

1347 
	#STR_HT
 "\t"

	)

1348 
	#STR_VT
 "\v"

	)

1349 
	#STR_FF
 "\f"

	)

1350 
	#STR_CR
 "\r"

	)

1351 
	#STR_BS
 "\b"

	)

1352 
	#STR_BEL
 "\a"

	)

1354 
	#STR_SPACE
 " "

	)

1355 
	#STR_EXCLAMATION_MARK
 "!"

	)

1356 
	#STR_QUOTATION_MARK
 "\""

	)

1357 
	#STR_NUMBER_SIGN
 "#"

	)

1358 
	#STR_DOLLAR_SIGN
 "$"

	)

1359 
	#STR_PERCENT_SIGN
 "%"

	)

1360 
	#STR_AMPERSAND
 "&"

	)

1361 
	#STR_APOSTROPHE
 "'"

	)

1362 
	#STR_LEFT_PARENTHESIS
 "("

	)

1363 
	#STR_RIGHT_PARENTHESIS
 ")"

	)

1364 
	#STR_ASTERISK
 "*"

	)

1365 
	#STR_PLUS
 "+"

	)

1366 
	#STR_COMMA
 ","

	)

1367 
	#STR_MINUS
 "-"

	)

1368 
	#STR_DOT
 "."

	)

1369 
	#STR_SLASH
 "/"

	)

1370 
	#STR_0
 "0"

	)

1371 
	#STR_1
 "1"

	)

1372 
	#STR_2
 "2"

	)

1373 
	#STR_3
 "3"

	)

1374 
	#STR_4
 "4"

	)

1375 
	#STR_5
 "5"

	)

1376 
	#STR_6
 "6"

	)

1377 
	#STR_7
 "7"

	)

1378 
	#STR_8
 "8"

	)

1379 
	#STR_9
 "9"

	)

1380 
	#STR_COLON
 ":"

	)

1381 
	#STR_SEMICOLON
 ";"

	)

1382 
	#STR_LESS_THAN_SIGN
 "<"

	)

1383 
	#STR_EQUALS_SIGN
 "="

	)

1384 
	#STR_GREATER_THAN_SIGN
 ">"

	)

1385 
	#STR_QUESTION_MARK
 "?"

	)

1386 
	#STR_COMMERCIAL_AT
 "@"

	)

1387 
	#STR_A
 "A"

	)

1388 
	#STR_B
 "B"

	)

1389 
	#STR_C
 "C"

	)

1390 
	#STR_D
 "D"

	)

1391 
	#STR_E
 "E"

	)

1392 
	#STR_F
 "F"

	)

1393 
	#STR_G
 "G"

	)

1394 
	#STR_H
 "H"

	)

1395 
	#STR_I
 "I"

	)

1396 
	#STR_J
 "J"

	)

1397 
	#STR_K
 "K"

	)

1398 
	#STR_L
 "L"

	)

1399 
	#STR_M
 "M"

	)

1400 
	#STR_N
 "N"

	)

1401 
	#STR_O
 "O"

	)

1402 
	#STR_P
 "P"

	)

1403 
	#STR_Q
 "Q"

	)

1404 
	#STR_R
 "R"

	)

1405 
	#STR_S
 "S"

	)

1406 
	#STR_T
 "T"

	)

1407 
	#STR_U
 "U"

	)

1408 
	#STR_V
 "V"

	)

1409 
	#STR_W
 "W"

	)

1410 
	#STR_X
 "X"

	)

1411 
	#STR_Y
 "Y"

	)

1412 
	#STR_Z
 "Z"

	)

1413 
	#STR_LEFT_SQUARE_BRACKET
 "["

	)

1414 
	#STR_BACKSLASH
 "\\"

	)

1415 
	#STR_RIGHT_SQUARE_BRACKET
 "]"

	)

1416 
	#STR_CIRCUMFLEX_ACCENT
 "^"

	)

1417 
	#STR_UNDERSCORE
 "_"

	)

1418 
	#STR_GRAVE_ACCENT
 "`"

	)

1419 
	#STR_a
 "a"

	)

1420 
	#STR_b
 "b"

	)

1421 
	#STR_c
 "c"

	)

1422 
	#STR_d
 "d"

	)

1423 
	#STR_e
 "e"

	)

1424 
	#STR_f
 "f"

	)

1425 
	#STR_g
 "g"

	)

1426 
	#STR_h
 "h"

	)

1427 
	#STR_i
 "i"

	)

1428 
	#STR_j
 "j"

	)

1429 
	#STR_k
 "k"

	)

1430 
	#STR_l
 "l"

	)

1431 
	#STR_m
 "m"

	)

1432 
	#STR_n
 "n"

	)

1433 
	#STR_o
 "o"

	)

1434 
	#STR_p
 "p"

	)

1435 
	#STR_q
 "q"

	)

1436 
	#STR_r
 "r"

	)

1437 
	#STR_s
 "s"

	)

1438 
	#STR_t
 "t"

	)

1439 
	#STR_u
 "u"

	)

1440 
	#STR_v
 "v"

	)

1441 
	#STR_w
 "w"

	)

1442 
	#STR_x
 "x"

	)

1443 
	#STR_y
 "y"

	)

1444 
	#STR_z
 "z"

	)

1445 
	#STR_LEFT_CURLY_BRACKET
 "{"

	)

1446 
	#STR_VERTICAL_LINE
 "|"

	)

1447 
	#STR_RIGHT_CURLY_BRACKET
 "}"

	)

1448 
	#STR_TILDE
 "~"

	)

1450 
	#STRING_ACCEPT0
 "ACCEPT\0"

	)

1451 
	#STRING_COMMIT0
 "COMMIT\0"

	)

1452 
	#STRING_F0
 "F\0"

	)

1453 
	#STRING_FAIL0
 "FAIL\0"

	)

1454 
	#STRING_MARK0
 "MARK\0"

	)

1455 
	#STRING_PRUNE0
 "PRUNE\0"

	)

1456 
	#STRING_SKIP0
 "SKIP\0"

	)

1457 
	#STRING_THEN
 "THEN"

	)

1459 
	#STRING_Æpha0
 "Æpha\0"

	)

1460 
	#STRING_lowî0
 "lowî\0"

	)

1461 
	#STRING_uµî0
 "uµî\0"

	)

1462 
	#STRING_Ænum0
 "Ænum\0"

	)

1463 
	#STRING_ascii0
 "ascii\0"

	)

1464 
	#STRING_bœnk0
 "bœnk\0"

	)

1465 
	#STRING_˙ål0
 "˙ål\0"

	)

1466 
	#STRING_digô0
 "digô\0"

	)

1467 
	#STRING_gøph0
 "gøph\0"

	)

1468 
	#STRING_¥öt0
 "¥öt\0"

	)

1469 
	#STRING_pun˘0
 "pun˘\0"

	)

1470 
	#STRING_•a˚0
 "•a˚\0"

	)

1471 
	#STRING_w‹d0
 "w‹d\0"

	)

1472 
	#STRING_xdigô
 "xdigô"

	)

1474 
	#STRING_DEFINE
 "DEFINE"

	)

1475 
	#STRING_WEIRD_STARTWORD
 "[:<:]]"

	)

1476 
	#STRING_WEIRD_ENDWORD
 "[:>:]]"

	)

1478 
	#STRING_CR_RIGHTPAR
 "CR)"

	)

1479 
	#STRING_LF_RIGHTPAR
 "LF)"

	)

1480 
	#STRING_CRLF_RIGHTPAR
 "CRLF)"

	)

1481 
	#STRING_ANY_RIGHTPAR
 "ANY)"

	)

1482 
	#STRING_ANYCRLF_RIGHTPAR
 "ANYCRLF)"

	)

1483 
	#STRING_BSR_ANYCRLF_RIGHTPAR
 "BSR_ANYCRLF)"

	)

1484 
	#STRING_BSR_UNICODE_RIGHTPAR
 "BSR_UNICODE)"

	)

1485 
	#STRING_UTF8_RIGHTPAR
 "UTF8)"

	)

1486 
	#STRING_UTF16_RIGHTPAR
 "UTF16)"

	)

1487 
	#STRING_UTF32_RIGHTPAR
 "UTF32)"

	)

1488 
	#STRING_UTF_RIGHTPAR
 "UTF)"

	)

1489 
	#STRING_UCP_RIGHTPAR
 "UCP)"

	)

1490 
	#STRING_NO_AUTO_POSSESS_RIGHTPAR
 "NO_AUTO_POSSESS)"

	)

1491 
	#STRING_NO_START_OPT_RIGHTPAR
 "NO_START_OPT)"

	)

1492 
	#STRING_LIMIT_MATCH_EQ
 "LIMIT_MATCH="

	)

1493 
	#STRING_LIMIT_RECURSION_EQ
 "LIMIT_RECURSION="

	)

1501 
	#CHAR_HT
 '\011'

	)

1502 
	#CHAR_VT
 '\013'

	)

1503 
	#CHAR_FF
 '\014'

	)

1504 
	#CHAR_CR
 '\015'

	)

1505 
	#CHAR_LF
 '\012'

	)

1506 
	#CHAR_NL
 
CHAR_LF


	)

1507 
	#CHAR_NEL
 (()'\x85')

	)

1508 
	#CHAR_BS
 '\010'

	)

1509 
	#CHAR_BEL
 '\007'

	)

1510 
	#CHAR_ESC
 '\033'

	)

1511 
	#CHAR_DEL
 '\177'

	)

1513 
	#CHAR_NULL
 '\0'

	)

1514 
	#CHAR_SPACE
 '\040'

	)

1515 
	#CHAR_EXCLAMATION_MARK
 '\041'

	)

1516 
	#CHAR_QUOTATION_MARK
 '\042'

	)

1517 
	#CHAR_NUMBER_SIGN
 '\043'

	)

1518 
	#CHAR_DOLLAR_SIGN
 '\044'

	)

1519 
	#CHAR_PERCENT_SIGN
 '\045'

	)

1520 
	#CHAR_AMPERSAND
 '\046'

	)

1521 
	#CHAR_APOSTROPHE
 '\047'

	)

1522 
	#CHAR_LEFT_PARENTHESIS
 '\050'

	)

1523 
	#CHAR_RIGHT_PARENTHESIS
 '\051'

	)

1524 
	#CHAR_ASTERISK
 '\052'

	)

1525 
	#CHAR_PLUS
 '\053'

	)

1526 
	#CHAR_COMMA
 '\054'

	)

1527 
	#CHAR_MINUS
 '\055'

	)

1528 
	#CHAR_DOT
 '\056'

	)

1529 
	#CHAR_SLASH
 '\057'

	)

1530 
	#CHAR_0
 '\060'

	)

1531 
	#CHAR_1
 '\061'

	)

1532 
	#CHAR_2
 '\062'

	)

1533 
	#CHAR_3
 '\063'

	)

1534 
	#CHAR_4
 '\064'

	)

1535 
	#CHAR_5
 '\065'

	)

1536 
	#CHAR_6
 '\066'

	)

1537 
	#CHAR_7
 '\067'

	)

1538 
	#CHAR_8
 '\070'

	)

1539 
	#CHAR_9
 '\071'

	)

1540 
	#CHAR_COLON
 '\072'

	)

1541 
	#CHAR_SEMICOLON
 '\073'

	)

1542 
	#CHAR_LESS_THAN_SIGN
 '\074'

	)

1543 
	#CHAR_EQUALS_SIGN
 '\075'

	)

1544 
	#CHAR_GREATER_THAN_SIGN
 '\076'

	)

1545 
	#CHAR_QUESTION_MARK
 '\077'

	)

1546 
	#CHAR_COMMERCIAL_AT
 '\100'

	)

1547 
	#CHAR_A
 '\101'

	)

1548 
	#CHAR_B
 '\102'

	)

1549 
	#CHAR_C
 '\103'

	)

1550 
	#CHAR_D
 '\104'

	)

1551 
	#CHAR_E
 '\105'

	)

1552 
	#CHAR_F
 '\106'

	)

1553 
	#CHAR_G
 '\107'

	)

1554 
	#CHAR_H
 '\110'

	)

1555 
	#CHAR_I
 '\111'

	)

1556 
	#CHAR_J
 '\112'

	)

1557 
	#CHAR_K
 '\113'

	)

1558 
	#CHAR_L
 '\114'

	)

1559 
	#CHAR_M
 '\115'

	)

1560 
	#CHAR_N
 '\116'

	)

1561 
	#CHAR_O
 '\117'

	)

1562 
	#CHAR_P
 '\120'

	)

1563 
	#CHAR_Q
 '\121'

	)

1564 
	#CHAR_R
 '\122'

	)

1565 
	#CHAR_S
 '\123'

	)

1566 
	#CHAR_T
 '\124'

	)

1567 
	#CHAR_U
 '\125'

	)

1568 
	#CHAR_V
 '\126'

	)

1569 
	#CHAR_W
 '\127'

	)

1570 
	#CHAR_X
 '\130'

	)

1571 
	#CHAR_Y
 '\131'

	)

1572 
	#CHAR_Z
 '\132'

	)

1573 
	#CHAR_LEFT_SQUARE_BRACKET
 '\133'

	)

1574 
	#CHAR_BACKSLASH
 '\134'

	)

1575 
	#CHAR_RIGHT_SQUARE_BRACKET
 '\135'

	)

1576 
	#CHAR_CIRCUMFLEX_ACCENT
 '\136'

	)

1577 
	#CHAR_UNDERSCORE
 '\137'

	)

1578 
	#CHAR_GRAVE_ACCENT
 '\140'

	)

1579 
	#CHAR_a
 '\141'

	)

1580 
	#CHAR_b
 '\142'

	)

1581 
	#CHAR_c
 '\143'

	)

1582 
	#CHAR_d
 '\144'

	)

1583 
	#CHAR_e
 '\145'

	)

1584 
	#CHAR_f
 '\146'

	)

1585 
	#CHAR_g
 '\147'

	)

1586 
	#CHAR_h
 '\150'

	)

1587 
	#CHAR_i
 '\151'

	)

1588 
	#CHAR_j
 '\152'

	)

1589 
	#CHAR_k
 '\153'

	)

1590 
	#CHAR_l
 '\154'

	)

1591 
	#CHAR_m
 '\155'

	)

1592 
	#CHAR_n
 '\156'

	)

1593 
	#CHAR_o
 '\157'

	)

1594 
	#CHAR_p
 '\160'

	)

1595 
	#CHAR_q
 '\161'

	)

1596 
	#CHAR_r
 '\162'

	)

1597 
	#CHAR_s
 '\163'

	)

1598 
	#CHAR_t
 '\164'

	)

1599 
	#CHAR_u
 '\165'

	)

1600 
	#CHAR_v
 '\166'

	)

1601 
	#CHAR_w
 '\167'

	)

1602 
	#CHAR_x
 '\170'

	)

1603 
	#CHAR_y
 '\171'

	)

1604 
	#CHAR_z
 '\172'

	)

1605 
	#CHAR_LEFT_CURLY_BRACKET
 '\173'

	)

1606 
	#CHAR_VERTICAL_LINE
 '\174'

	)

1607 
	#CHAR_RIGHT_CURLY_BRACKET
 '\175'

	)

1608 
	#CHAR_TILDE
 '\176'

	)

1610 
	#STR_HT
 "\011"

	)

1611 
	#STR_VT
 "\013"

	)

1612 
	#STR_FF
 "\014"

	)

1613 
	#STR_CR
 "\015"

	)

1614 
	#STR_NL
 "\012"

	)

1615 
	#STR_BS
 "\010"

	)

1616 
	#STR_BEL
 "\007"

	)

1617 
	#STR_ESC
 "\033"

	)

1618 
	#STR_DEL
 "\177"

	)

1620 
	#STR_SPACE
 "\040"

	)

1621 
	#STR_EXCLAMATION_MARK
 "\041"

	)

1622 
	#STR_QUOTATION_MARK
 "\042"

	)

1623 
	#STR_NUMBER_SIGN
 "\043"

	)

1624 
	#STR_DOLLAR_SIGN
 "\044"

	)

1625 
	#STR_PERCENT_SIGN
 "\045"

	)

1626 
	#STR_AMPERSAND
 "\046"

	)

1627 
	#STR_APOSTROPHE
 "\047"

	)

1628 
	#STR_LEFT_PARENTHESIS
 "\050"

	)

1629 
	#STR_RIGHT_PARENTHESIS
 "\051"

	)

1630 
	#STR_ASTERISK
 "\052"

	)

1631 
	#STR_PLUS
 "\053"

	)

1632 
	#STR_COMMA
 "\054"

	)

1633 
	#STR_MINUS
 "\055"

	)

1634 
	#STR_DOT
 "\056"

	)

1635 
	#STR_SLASH
 "\057"

	)

1636 
	#STR_0
 "\060"

	)

1637 
	#STR_1
 "\061"

	)

1638 
	#STR_2
 "\062"

	)

1639 
	#STR_3
 "\063"

	)

1640 
	#STR_4
 "\064"

	)

1641 
	#STR_5
 "\065"

	)

1642 
	#STR_6
 "\066"

	)

1643 
	#STR_7
 "\067"

	)

1644 
	#STR_8
 "\070"

	)

1645 
	#STR_9
 "\071"

	)

1646 
	#STR_COLON
 "\072"

	)

1647 
	#STR_SEMICOLON
 "\073"

	)

1648 
	#STR_LESS_THAN_SIGN
 "\074"

	)

1649 
	#STR_EQUALS_SIGN
 "\075"

	)

1650 
	#STR_GREATER_THAN_SIGN
 "\076"

	)

1651 
	#STR_QUESTION_MARK
 "\077"

	)

1652 
	#STR_COMMERCIAL_AT
 "\100"

	)

1653 
	#STR_A
 "\101"

	)

1654 
	#STR_B
 "\102"

	)

1655 
	#STR_C
 "\103"

	)

1656 
	#STR_D
 "\104"

	)

1657 
	#STR_E
 "\105"

	)

1658 
	#STR_F
 "\106"

	)

1659 
	#STR_G
 "\107"

	)

1660 
	#STR_H
 "\110"

	)

1661 
	#STR_I
 "\111"

	)

1662 
	#STR_J
 "\112"

	)

1663 
	#STR_K
 "\113"

	)

1664 
	#STR_L
 "\114"

	)

1665 
	#STR_M
 "\115"

	)

1666 
	#STR_N
 "\116"

	)

1667 
	#STR_O
 "\117"

	)

1668 
	#STR_P
 "\120"

	)

1669 
	#STR_Q
 "\121"

	)

1670 
	#STR_R
 "\122"

	)

1671 
	#STR_S
 "\123"

	)

1672 
	#STR_T
 "\124"

	)

1673 
	#STR_U
 "\125"

	)

1674 
	#STR_V
 "\126"

	)

1675 
	#STR_W
 "\127"

	)

1676 
	#STR_X
 "\130"

	)

1677 
	#STR_Y
 "\131"

	)

1678 
	#STR_Z
 "\132"

	)

1679 
	#STR_LEFT_SQUARE_BRACKET
 "\133"

	)

1680 
	#STR_BACKSLASH
 "\134"

	)

1681 
	#STR_RIGHT_SQUARE_BRACKET
 "\135"

	)

1682 
	#STR_CIRCUMFLEX_ACCENT
 "\136"

	)

1683 
	#STR_UNDERSCORE
 "\137"

	)

1684 
	#STR_GRAVE_ACCENT
 "\140"

	)

1685 
	#STR_a
 "\141"

	)

1686 
	#STR_b
 "\142"

	)

1687 
	#STR_c
 "\143"

	)

1688 
	#STR_d
 "\144"

	)

1689 
	#STR_e
 "\145"

	)

1690 
	#STR_f
 "\146"

	)

1691 
	#STR_g
 "\147"

	)

1692 
	#STR_h
 "\150"

	)

1693 
	#STR_i
 "\151"

	)

1694 
	#STR_j
 "\152"

	)

1695 
	#STR_k
 "\153"

	)

1696 
	#STR_l
 "\154"

	)

1697 
	#STR_m
 "\155"

	)

1698 
	#STR_n
 "\156"

	)

1699 
	#STR_o
 "\157"

	)

1700 
	#STR_p
 "\160"

	)

1701 
	#STR_q
 "\161"

	)

1702 
	#STR_r
 "\162"

	)

1703 
	#STR_s
 "\163"

	)

1704 
	#STR_t
 "\164"

	)

1705 
	#STR_u
 "\165"

	)

1706 
	#STR_v
 "\166"

	)

1707 
	#STR_w
 "\167"

	)

1708 
	#STR_x
 "\170"

	)

1709 
	#STR_y
 "\171"

	)

1710 
	#STR_z
 "\172"

	)

1711 
	#STR_LEFT_CURLY_BRACKET
 "\173"

	)

1712 
	#STR_VERTICAL_LINE
 "\174"

	)

1713 
	#STR_RIGHT_CURLY_BRACKET
 "\175"

	)

1714 
	#STR_TILDE
 "\176"

	)

1716 
	#STRING_ACCEPT0
 
STR_A
 
STR_C
 STR_C 
STR_E
 
STR_P
 
STR_T
 "\0"

	)

1717 
	#STRING_COMMIT0
 
STR_C
 
STR_O
 
STR_M
 STR_M 
STR_I
 
STR_T
 "\0"

	)

1718 
	#STRING_F0
 
STR_F
 "\0"

	)

1719 
	#STRING_FAIL0
 
STR_F
 
STR_A
 
STR_I
 
STR_L
 "\0"

	)

1720 
	#STRING_MARK0
 
STR_M
 
STR_A
 
STR_R
 
STR_K
 "\0"

	)

1721 
	#STRING_PRUNE0
 
STR_P
 
STR_R
 
STR_U
 
STR_N
 
STR_E
 "\0"

	)

1722 
	#STRING_SKIP0
 
STR_S
 
STR_K
 
STR_I
 
STR_P
 "\0"

	)

1723 
	#STRING_THEN
 
STR_T
 
STR_H
 
STR_E
 
STR_N


	)

1725 
	#STRING_Æpha0
 
STR_a
 
STR_l
 
STR_p
 
STR_h
 STR_®"\0"

	)

1726 
	#STRING_lowî0
 
STR_l
 
STR_o
 
STR_w
 
STR_e
 
STR_r
 "\0"

	)

1727 
	#STRING_uµî0
 
STR_u
 
STR_p
 STR_∞
STR_e
 
STR_r
 "\0"

	)

1728 
	#STRING_Ænum0
 
STR_a
 
STR_l
 
STR_n
 
STR_u
 
STR_m
 "\0"

	)

1729 
	#STRING_ascii0
 
STR_a
 
STR_s
 
STR_c
 
STR_i
 STR_ò"\0"

	)

1730 
	#STRING_bœnk0
 
STR_b
 
STR_l
 
STR_a
 
STR_n
 
STR_k
 "\0"

	)

1731 
	#STRING_˙ål0
 
STR_c
 
STR_n
 
STR_t
 
STR_r
 
STR_l
 "\0"

	)

1732 
	#STRING_digô0
 
STR_d
 
STR_i
 
STR_g
 STR_ò
STR_t
 "\0"

	)

1733 
	#STRING_gøph0
 
STR_g
 
STR_r
 
STR_a
 
STR_p
 
STR_h
 "\0"

	)

1734 
	#STRING_¥öt0
 
STR_p
 
STR_r
 
STR_i
 
STR_n
 
STR_t
 "\0"

	)

1735 
	#STRING_pun˘0
 
STR_p
 
STR_u
 
STR_n
 
STR_c
 
STR_t
 "\0"

	)

1736 
	#STRING_•a˚0
 
STR_s
 
STR_p
 
STR_a
 
STR_c
 
STR_e
 "\0"

	)

1737 
	#STRING_w‹d0
 
STR_w
 
STR_o
 
STR_r
 
STR_d
 "\0"

	)

1738 
	#STRING_xdigô
 
STR_x
 
STR_d
 
STR_i
 
STR_g
 STR_ò
STR_t


	)

1740 
	#STRING_DEFINE
 
STR_D
 
STR_E
 
STR_F
 
STR_I
 
STR_N
 
	)
STR_E

1741 
	#STRING_WEIRD_STARTWORD
 
STR_LEFT_SQUARE_BRACKET
 
STR_COLON
 
STR_LESS_THAN_SIGN
 STR_COLON 
STR_RIGHT_SQUARE_BRACKET
 
	)
STR_RIGHT_SQUARE_BRACKET

1742 
	#STRING_WEIRD_ENDWORD
 
STR_LEFT_SQUARE_BRACKET
 
STR_COLON
 
STR_GREATER_THAN_SIGN
 STR_COLON 
STR_RIGHT_SQUARE_BRACKET
 
	)
STR_RIGHT_SQUARE_BRACKET

1744 
	#STRING_CR_RIGHTPAR
 
STR_C
 
STR_R
 
STR_RIGHT_PARENTHESIS


	)

1745 
	#STRING_LF_RIGHTPAR
 
STR_L
 
STR_F
 
STR_RIGHT_PARENTHESIS


	)

1746 
	#STRING_CRLF_RIGHTPAR
 
STR_C
 
STR_R
 
STR_L
 
STR_F
 
STR_RIGHT_PARENTHESIS


	)

1747 
	#STRING_ANY_RIGHTPAR
 
STR_A
 
STR_N
 
STR_Y
 
STR_RIGHT_PARENTHESIS


	)

1748 
	#STRING_ANYCRLF_RIGHTPAR
 
STR_A
 
STR_N
 
STR_Y
 
STR_C
 
STR_R
 
STR_L
 
STR_F
 
STR_RIGHT_PARENTHESIS


	)

1749 
	#STRING_BSR_ANYCRLF_RIGHTPAR
 
STR_B
 
STR_S
 
STR_R
 
STR_UNDERSCORE
 
STR_A
 
STR_N
 
STR_Y
 
STR_C
 STR_R 
STR_L
 
STR_F
 
STR_RIGHT_PARENTHESIS


	)

1750 
	#STRING_BSR_UNICODE_RIGHTPAR
 
STR_B
 
STR_S
 
STR_R
 
STR_UNDERSCORE
 
STR_U
 
STR_N
 
STR_I
 
STR_C
 
STR_O
 
STR_D
 
STR_E
 
STR_RIGHT_PARENTHESIS


	)

1751 
	#STRING_UTF8_RIGHTPAR
 
STR_U
 
STR_T
 
STR_F
 
STR_8
 
STR_RIGHT_PARENTHESIS


	)

1752 
	#STRING_UTF16_RIGHTPAR
 
STR_U
 
STR_T
 
STR_F
 
STR_1
 
STR_6
 
STR_RIGHT_PARENTHESIS


	)

1753 
	#STRING_UTF32_RIGHTPAR
 
STR_U
 
STR_T
 
STR_F
 
STR_3
 
STR_2
 
STR_RIGHT_PARENTHESIS


	)

1754 
	#STRING_UTF_RIGHTPAR
 
STR_U
 
STR_T
 
STR_F
 
STR_RIGHT_PARENTHESIS


	)

1755 
	#STRING_UCP_RIGHTPAR
 
STR_U
 
STR_C
 
STR_P
 
STR_RIGHT_PARENTHESIS


	)

1756 
	#STRING_NO_AUTO_POSSESS_RIGHTPAR
 
STR_N
 
STR_O
 
STR_UNDERSCORE
 
STR_A
 
STR_U
 
STR_T
 STR_O STR_UNDERSCORE 
STR_P
 STR_O 
STR_S
 STR_S 
STR_E
 STR_S STR_S 
STR_RIGHT_PARENTHESIS


	)

1757 
	#STRING_NO_START_OPT_RIGHTPAR
 
STR_N
 
STR_O
 
STR_UNDERSCORE
 
STR_S
 
STR_T
 
STR_A
 
STR_R
 STR_T STR_UNDERSCORE STR_O 
STR_P
 STR_T 
STR_RIGHT_PARENTHESIS


	)

1758 
	#STRING_LIMIT_MATCH_EQ
 
STR_L
 
STR_I
 
STR_M
 STR_I 
STR_T
 
STR_UNDERSCORE
 STR_M 
STR_A
 STR_T 
STR_C
 
STR_H
 
STR_EQUALS_SIGN


	)

1759 
	#STRING_LIMIT_RECURSION_EQ
 
STR_L
 
STR_I
 
STR_M
 STR_I 
STR_T
 
STR_UNDERSCORE
 
STR_R
 
STR_E
 
STR_C
 
STR_U
 STR_R 
STR_S
 STR_I 
STR_O
 
STR_N
 
STR_EQUALS_SIGN


	)

1765 #i‚de‡
ESC_e


1766 
	#ESC_e
 
CHAR_ESC


	)

1769 #i‚de‡
ESC_f


1770 
	#ESC_f
 
CHAR_FF


	)

1773 #i‚de‡
ESC_n


1774 
	#ESC_n
 
CHAR_LF


	)

1777 #i‚de‡
ESC_r


1778 
	#ESC_r
 
CHAR_CR


	)

1784 #i‚de‡
ESC_ãe


1785 
	#ESC_ãe
 
CHAR_HT


	)

1790 
	#PT_ANY
 0

	)

1791 
	#PT_LAMP
 1

	)

1792 
	#PT_GC
 2

	)

1793 
	#PT_PC
 3

	)

1794 
	#PT_SC
 4

	)

1795 
	#PT_ALNUM
 5

	)

1796 
	#PT_SPACE
 6

	)

1797 
	#PT_PXSPACE
 7

	)

1798 
	#PT_WORD
 8

	)

1799 
	#PT_CLIST
 9

	)

1800 
	#PT_UCNC
 10

	)

1801 
	#PT_TABSIZE
 11

	)

1809 
	#PT_PXGRAPH
 11

	)

1810 
	#PT_PXPRINT
 12

	)

1811 
	#PT_PXPUNCT
 13

	)

1816 
	#XCL_NOT
 0x01

	)

1817 
	#XCL_MAP
 0x02

	)

1818 
	#XCL_HASPROP
 0x04

	)

1820 
	#XCL_END
 0

	)

1821 
	#XCL_SINGLE
 1

	)

1822 
	#XCL_RANGE
 2

	)

1823 
	#XCL_PROP
 3

	)

1824 
	#XCL_NOTPROP
 4

	)

1846 íum { 
	mESC_A
 = 1, 
	mESC_G
, 
	mESC_K
, 
	mESC_B
, 
	mESC_b
, 
	mESC_D
, 
	mESC_d
, 
	mESC_S
, 
	mESC_s
,

1847 
	mESC_W
, 
	mESC_w
, 
	mESC_N
, 
	mESC_dum
, 
	mESC_C
, 
	mESC_P
, 
	mESC_p
, 
	mESC_R
, 
	mESC_H
,

1848 
	mESC_h
, 
	mESC_V
, 
	mESC_v
, 
	mESC_X
, 
	mESC_Z
, 
	mESC_z
,

1849 
	mESC_E
, 
	mESC_Q
, 
	mESC_g
, 
	mESC_k
,

1850 
	mESC_DU
, 
	mESC_du
, 
	mESC_SU
, 
	mESC_su
, 
	mESC_WU
, 
	mESC_wu
 };

1874 
	#FIRST_AUTOTAB_OP
 
OP_NOT_DIGIT


	)

1875 
	#LAST_AUTOTAB_LEFT_OP
 
OP_EXTUNI


	)

1876 
	#LAST_AUTOTAB_RIGHT_OP
 
OP_DOLLM


	)

1879 
	mOP_END
,

1883 
	mOP_SOD
,

1884 
	mOP_SOM
,

1885 
	mOP_SET_SOM
,

1886 
	mOP_NOT_WORD_BOUNDARY
,

1887 
	mOP_WORD_BOUNDARY
,

1888 
	mOP_NOT_DIGIT
,

1889 
	mOP_DIGIT
,

1890 
	mOP_NOT_WHITESPACE
,

1891 
	mOP_WHITESPACE
,

1892 
	mOP_NOT_WORDCHAR
,

1893 
	mOP_WORDCHAR
,

1895 
	mOP_ANY
,

1896 
	mOP_ALLANY
,

1897 
	mOP_ANYBYTE
,

1898 
	mOP_NOTPROP
,

1899 
	mOP_PROP
,

1900 
	mOP_ANYNL
,

1901 
	mOP_NOT_HSPACE
,

1902 
	mOP_HSPACE
,

1903 
	mOP_NOT_VSPACE
,

1904 
	mOP_VSPACE
,

1905 
	mOP_EXTUNI
,

1906 
	mOP_EODN
,

1907 
	mOP_EOD
,

1911 
	mOP_DOLL
,

1912 
	mOP_DOLLM
,

1913 
	mOP_CIRC
,

1914 
	mOP_CIRCM
,

1918 
	mOP_CHAR
,

1919 
	mOP_CHARI
,

1920 
	mOP_NOT
,

1921 
	mOP_NOTI
,

1928 
	mOP_STAR
,

1929 
	mOP_MINSTAR
,

1930 
	mOP_PLUS
,

1931 
	mOP_MINPLUS
,

1932 
	mOP_QUERY
,

1933 
	mOP_MINQUERY
,

1935 
	mOP_UPTO
,

1936 
	mOP_MINUPTO
,

1937 
	mOP_EXACT
,

1939 
	mOP_POSSTAR
,

1940 
	mOP_POSPLUS
,

1941 
	mOP_POSQUERY
,

1942 
	mOP_POSUPTO
,

1946 
	mOP_STARI
,

1947 
	mOP_MINSTARI
,

1948 
	mOP_PLUSI
,

1949 
	mOP_MINPLUSI
,

1950 
	mOP_QUERYI
,

1951 
	mOP_MINQUERYI
,

1953 
	mOP_UPTOI
,

1954 
	mOP_MINUPTOI
,

1955 
	mOP_EXACTI
,

1957 
	mOP_POSSTARI
,

1958 
	mOP_POSPLUSI
,

1959 
	mOP_POSQUERYI
,

1960 
	mOP_POSUPTOI
,

1965 
	mOP_NOTSTAR
,

1966 
	mOP_NOTMINSTAR
,

1967 
	mOP_NOTPLUS
,

1968 
	mOP_NOTMINPLUS
,

1969 
	mOP_NOTQUERY
,

1970 
	mOP_NOTMINQUERY
,

1972 
	mOP_NOTUPTO
,

1973 
	mOP_NOTMINUPTO
,

1974 
	mOP_NOTEXACT
,

1976 
	mOP_NOTPOSSTAR
,

1977 
	mOP_NOTPOSPLUS
,

1978 
	mOP_NOTPOSQUERY
,

1979 
	mOP_NOTPOSUPTO
,

1983 
	mOP_NOTSTARI
,

1984 
	mOP_NOTMINSTARI
,

1985 
	mOP_NOTPLUSI
,

1986 
	mOP_NOTMINPLUSI
,

1987 
	mOP_NOTQUERYI
,

1988 
	mOP_NOTMINQUERYI
,

1990 
	mOP_NOTUPTOI
,

1991 
	mOP_NOTMINUPTOI
,

1992 
	mOP_NOTEXACTI
,

1994 
	mOP_NOTPOSSTARI
,

1995 
	mOP_NOTPOSPLUSI
,

1996 
	mOP_NOTPOSQUERYI
,

1997 
	mOP_NOTPOSUPTOI
,

2001 
	mOP_TYPESTAR
,

2002 
	mOP_TYPEMINSTAR
,

2003 
	mOP_TYPEPLUS
,

2004 
	mOP_TYPEMINPLUS
,

2005 
	mOP_TYPEQUERY
,

2006 
	mOP_TYPEMINQUERY
,

2008 
	mOP_TYPEUPTO
,

2009 
	mOP_TYPEMINUPTO
,

2010 
	mOP_TYPEEXACT
,

2012 
	mOP_TYPEPOSSTAR
,

2013 
	mOP_TYPEPOSPLUS
,

2014 
	mOP_TYPEPOSQUERY
,

2015 
	mOP_TYPEPOSUPTO
,

2020 
	mOP_CRSTAR
,

2021 
	mOP_CRMINSTAR
,

2022 
	mOP_CRPLUS
,

2023 
	mOP_CRMINPLUS
,

2024 
	mOP_CRQUERY
,

2025 
	mOP_CRMINQUERY
,

2027 
	mOP_CRRANGE
,

2028 
	mOP_CRMINRANGE
,

2030 
	mOP_CRPOSSTAR
,

2031 
	mOP_CRPOSPLUS
,

2032 
	mOP_CRPOSQUERY
,

2033 
	mOP_CRPOSRANGE
,

2037 
	mOP_CLASS
,

2038 
	mOP_NCLASS
,

2041 
	mOP_XCLASS
,

2043 
	mOP_REF
,

2044 
	mOP_REFI
,

2045 
	mOP_DNREF
,

2046 
	mOP_DNREFI
,

2047 
	mOP_RECURSE
,

2048 
	mOP_CALLOUT
,

2050 
	mOP_ALT
,

2051 
	mOP_KET
,

2052 
	mOP_KETRMAX
,

2053 
	mOP_KETRMIN
,

2054 
	mOP_KETRPOS
,

2059 
	mOP_REVERSE
,

2060 
	mOP_ASSERT
,

2061 
	mOP_ASSERT_NOT
,

2062 
	mOP_ASSERTBACK
,

2063 
	mOP_ASSERTBACK_NOT
,

2070 
	mOP_ONCE
,

2071 
	mOP_ONCE_NC
,

2072 
	mOP_BRA
,

2073 
	mOP_BRAPOS
,

2074 
	mOP_CBRA
,

2075 
	mOP_CBRAPOS
,

2076 
	mOP_COND
,

2081 
	mOP_SBRA
,

2082 
	mOP_SBRAPOS
,

2083 
	mOP_SCBRA
,

2084 
	mOP_SCBRAPOS
,

2085 
	mOP_SCOND
,

2089 
	mOP_CREF
,

2090 
	mOP_DNCREF
,

2091 
	mOP_RREF
,

2092 
	mOP_DNRREF
,

2093 
	mOP_DEF
,

2095 
	mOP_BRAZERO
,

2096 
	mOP_BRAMINZERO
,

2097 
	mOP_BRAPOSZERO
,

2101 
	mOP_MARK
,

2102 
	mOP_PRUNE
,

2103 
	mOP_PRUNE_ARG
,

2104 
	mOP_SKIP
,

2105 
	mOP_SKIP_ARG
,

2106 
	mOP_THEN
,

2107 
	mOP_THEN_ARG
,

2108 
	mOP_COMMIT
,

2112 
	mOP_FAIL
,

2113 
	mOP_ACCEPT
,

2114 
	mOP_ASSERT_ACCEPT
,

2115 
	mOP_CLOSE
,

2119 
	mOP_SKIPZERO
,

2125 
	mOP_TABLE_LENGTH


2139 
	#OP_NAME_LIST
 \

2175 "Clo£", "Skù zîo"

	)

2187 
	#OP_LENGTHS
 \

2202 2+
IMM2_SIZE
, 2+IMM2_SIZE, \

2203 2+
IMM2_SIZE
, \

2204 2, 2, 2, 2+
IMM2_SIZE
, \

2206 2+
IMM2_SIZE
, 2+IMM2_SIZE, \

2207 2+
IMM2_SIZE
, \

2208 2, 2, 2, 2+
IMM2_SIZE
, \

2211 2+
IMM2_SIZE
, 2+IMM2_SIZE, \

2212 2+
IMM2_SIZE
, \

2213 2, 2, 2, 2+
IMM2_SIZE
, \

2215 2+
IMM2_SIZE
, 2+IMM2_SIZE, \

2216 2+
IMM2_SIZE
, \

2217 2, 2, 2, 2+
IMM2_SIZE
, \

2220 2+
IMM2_SIZE
, 2+IMM2_SIZE, \

2221 2+
IMM2_SIZE
, \

2222 2, 2, 2, 2+
IMM2_SIZE
, \

2225 1+2*
IMM2_SIZE
, 1+2*IMM2_SIZE, \

2226 1, 1, 1, 1+2*
IMM2_SIZE
, \

2227 1+(32/(
p¸e_uch¨
)), \

2228 1+(32/(
p¸e_uch¨
)), \

2230 1+
IMM2_SIZE
, \

2231 1+
IMM2_SIZE
, \

2232 1+2*
IMM2_SIZE
, \

2233 1+2*
IMM2_SIZE
, \

2234 1+
LINK_SIZE
, \

2235 2+2*
LINK_SIZE
, \

2236 1+
LINK_SIZE
, \

2237 1+
LINK_SIZE
, \

2238 1+
LINK_SIZE
, \

2239 1+
LINK_SIZE
, \

2240 1+
LINK_SIZE
, \

2241 1+
LINK_SIZE
, \

2242 1+
LINK_SIZE
, \

2243 1+
LINK_SIZE
, \

2244 1+
LINK_SIZE
, \

2245 1+
LINK_SIZE
, \

2246 1+
LINK_SIZE
, \

2247 1+
LINK_SIZE
, \

2248 1+
LINK_SIZE
, \

2249 1+
LINK_SIZE
, \

2250 1+
LINK_SIZE
+
IMM2_SIZE
, \

2251 1+
LINK_SIZE
+
IMM2_SIZE
, \

2252 1+
LINK_SIZE
, \

2253 1+
LINK_SIZE
, \

2254 1+
LINK_SIZE
, \

2255 1+
LINK_SIZE
+
IMM2_SIZE
, \

2256 1+
LINK_SIZE
+
IMM2_SIZE
, \

2257 1+
LINK_SIZE
, \

2258 1+
IMM2_SIZE
, 1+2*IMM2_SIZE, \

2259 1+
IMM2_SIZE
, 1+2*IMM2_SIZE, \

2266 1+
IMM2_SIZE
, 1

	)

2270 
	#RREF_ANY
 0xffff

	)

2276 íum { 
	mERR0
, 
	mERR1
, 
	mERR2
, 
	mERR3
, 
	mERR4
, 
	mERR5
, 
	mERR6
, 
	mERR7
, 
	mERR8
, 
	mERR9
,

2277 
	mERR10
, 
	mERR11
, 
	mERR12
, 
	mERR13
, 
	mERR14
, 
	mERR15
, 
	mERR16
, 
	mERR17
, 
	mERR18
, 
	mERR19
,

2278 
	mERR20
, 
	mERR21
, 
	mERR22
, 
	mERR23
, 
	mERR24
, 
	mERR25
, 
	mERR26
, 
	mERR27
, 
	mERR28
, 
	mERR29
,

2279 
	mERR30
, 
	mERR31
, 
	mERR32
, 
	mERR33
, 
	mERR34
, 
	mERR35
, 
	mERR36
, 
	mERR37
, 
	mERR38
, 
	mERR39
,

2280 
	mERR40
, 
	mERR41
, 
	mERR42
, 
	mERR43
, 
	mERR44
, 
	mERR45
, 
	mERR46
, 
	mERR47
, 
	mERR48
, 
	mERR49
,

2281 
	mERR50
, 
	mERR51
, 
	mERR52
, 
	mERR53
, 
	mERR54
, 
	mERR55
, 
	mERR56
, 
	mERR57
, 
	mERR58
, 
	mERR59
,

2282 
	mERR60
, 
	mERR61
, 
	mERR62
, 
	mERR63
, 
	mERR64
, 
	mERR65
, 
	mERR66
, 
	mERR67
, 
	mERR68
, 
	mERR69
,

2283 
	mERR70
, 
	mERR71
, 
	mERR72
, 
	mERR73
, 
	mERR74
, 
	mERR75
, 
	mERR76
, 
	mERR77
, 
	mERR78
, 
	mERR79
,

2284 
	mERR80
, 
	mERR81
, 
	mERR82
, 
	mERR83
, 
	mERR84
, 
	mERR85
, 
	mERR86
, 
	mERRCOUNT
 };

2288 íum { 
	mJIT_COMPILE
, 
	mJIT_PARTIAL_SOFT_COMPILE
, 
	mJIT_PARTIAL_HARD_COMPILE
,

2289 
	mJIT_NUMBER_OF_COMPILE_MODES
 };

2317 
	sªÆ_p¸e8_‹_16
 {

2318 
p¸e_uöt32
 
	mmagic_numbî
;

2319 
p¸e_uöt32
 
	msize
;

2320 
p¸e_uöt32
 
	m›ti⁄s
;

2321 
p¸e_uöt32
 
	mÊags
;

2322 
p¸e_uöt32
 
	mlimô_m©ch
;

2323 
p¸e_uöt32
 
	mlimô_ªcursi⁄
;

2324 
p¸e_uöt16
 
	mfú°_ch¨
;

2325 
p¸e_uöt16
 
	mªq_ch¨
;

2326 
p¸e_uöt16
 
	mmax_lookbehöd
;

2327 
p¸e_uöt16
 
	mt›_bøckë
;

2328 
p¸e_uöt16
 
	mt›_backªf
;

2329 
p¸e_uöt16
 
	m«me_èbÀ_off£t
;

2330 
p¸e_uöt16
 
	m«me_íåy_size
;

2331 
p¸e_uöt16
 
	m«me_cou¡
;

2332 
p¸e_uöt16
 
	mªf_cou¡
;

2333 
p¸e_uöt16
 
	mdummy1
;

2334 
p¸e_uöt16
 
	mdummy2
;

2335 
p¸e_uöt16
 
	mdummy3
;

2336 c⁄° 
p¸e_uöt8
 *
	mèbÀs
;

2337 *
	mnuŒ∑d
;

2338 } 
	tªÆ_p¸e8_‹_16
;

2340 
ªÆ_p¸e8_‹_16
 
	tªÆ_p¸e
;

2341 
ªÆ_p¸e8_‹_16
 
	tªÆ_p¸e16
;

2343 
	sªÆ_p¸e32
 {

2344 
p¸e_uöt32
 
	mmagic_numbî
;

2345 
p¸e_uöt32
 
	msize
;

2346 
p¸e_uöt32
 
	m›ti⁄s
;

2347 
p¸e_uöt32
 
	mÊags
;

2348 
p¸e_uöt32
 
	mlimô_m©ch
;

2349 
p¸e_uöt32
 
	mlimô_ªcursi⁄
;

2350 
p¸e_uöt32
 
	mfú°_ch¨
;

2351 
p¸e_uöt32
 
	mªq_ch¨
;

2352 
p¸e_uöt16
 
	mmax_lookbehöd
;

2353 
p¸e_uöt16
 
	mt›_bøckë
;

2354 
p¸e_uöt16
 
	mt›_backªf
;

2355 
p¸e_uöt16
 
	m«me_èbÀ_off£t
;

2356 
p¸e_uöt16
 
	m«me_íåy_size
;

2357 
p¸e_uöt16
 
	m«me_cou¡
;

2358 
p¸e_uöt16
 
	mªf_cou¡
;

2359 
p¸e_uöt16
 
	mdummy
;

2360 c⁄° 
p¸e_uöt8
 *
	mèbÀs
;

2361 *
	mnuŒ∑d
;

2362 } 
	tªÆ_p¸e32
;

2364 #i‡
deföed
 
COMPILE_PCRE8


2365 
	#REAL_PCRE
 
ªÆ_p¸e


	)

2366 #ñi‡
deföed
 
COMPILE_PCRE16


2367 
	#REAL_PCRE
 
ªÆ_p¸e16


	)

2368 #ñi‡
deföed
 
COMPILE_PCRE32


2369 
	#REAL_PCRE
 
ªÆ_p¸e32


	)

2373 
	t__as£π_ªÆ_p¸e_size_divisibÀ_8
[((
REAL_PCRE
) % 8) == 0 ? 1 : -1];

2379 
	#REAL_PCRE_MAGIC
(
ª
Ë(((
REAL_PCRE
*Ïe)->
magic_numbî
)

	)

2380 
	#REAL_PCRE_SIZE
(
ª
Ë(((
REAL_PCRE
*Ïe)->
size
)

	)

2381 
	#REAL_PCRE_OPTIONS
(
ª
Ë(((
REAL_PCRE
*Ïe)->
›ti⁄s
)

	)

2382 
	#REAL_PCRE_FLAGS
(
ª
Ë(((
REAL_PCRE
*Ïe)->
Êags
)

	)

2387 
	sp¸e_°udy_d©a
 {

2388 
p¸e_uöt32
 
	msize
;

2389 
p¸e_uöt32
 
	mÊags
;

2390 
p¸e_uöt8
 
	m°¨t_bôs
[32];

2391 
p¸e_uöt32
 
	mmöÀngth
;

2392 } 
	tp¸e_°udy_d©a
;

2399 
	s›í_ˇpôem
 {

2400 
›í_ˇpôem
 *
	m√xt
;

2401 
p¸e_uöt16
 
	mnumbî
;

2402 
p¸e_uöt16
 
	mÊag
;

2403 } 
	t›í_ˇpôem
;

2408 
	s«med_group
 {

2409 c⁄° 
p¸e_uch¨
 *
	m«me
;

2410 
	mÀngth
;

2411 
p¸e_uöt32
 
	mnumbî
;

2412 } 
	t«med_group
;

2417 
	scompûe_d©a
 {

2418 c⁄° 
p¸e_uöt8
 *
	mlcc
;

2419 c⁄° 
p¸e_uöt8
 *
	mfcc
;

2420 c⁄° 
p¸e_uöt8
 *
	mcbôs
;

2421 c⁄° 
p¸e_uöt8
 *
	m˘y≥s
;

2422 c⁄° 
p¸e_uch¨
 *
	m°¨t_w‹k•a˚
;

2423 c⁄° 
p¸e_uch¨
 *
	m°¨t_code
;

2424 c⁄° 
p¸e_uch¨
 *
	m°¨t_∑âîn
;

2425 c⁄° 
p¸e_uch¨
 *
	míd_∑âîn
;

2426 
p¸e_uch¨
 *
	mhwm
;

2427 
›í_ˇpôem
 *
	m›í_ˇps
;

2428 
«med_group
 *
	m«med_groups
;

2429 
p¸e_uch¨
 *
	m«me_èbÀ
;

2430 
	m«mes_found
;

2431 
	m«me_íåy_size
;

2432 
	m«med_group_li°_size
;

2433 
	mw‹k•a˚_size
;

2434 
	mbøcou¡
;

2435 
	mföÆ_bøcou¡
;

2436 
	mmax_lookbehöd
;

2437 
	mt›_backªf
;

2438 
	mbackªf_m≠
;

2439 
	m«medªfcou¡
;

2440 
	m∑ªns_dïth
;

2441 
	mas£π_dïth
;

2442 
p¸e_uöt32
 
	mexã∫Æ_›ti⁄s
;

2443 
p¸e_uöt32
 
	mexã∫Æ_Êags
;

2444 
	mªq_v¨y›t
;

2445 
BOOL
 
	mhad_ac˚±
;

2446 
BOOL
 
	mhad_¥u√‹skù
;

2447 
BOOL
 
	mcheck_lookbehöd
;

2448 
BOOL
 
	mdu≤ames
;

2449 
BOOL
 
	misc⁄das£π
;

2450 
	m∆ty≥
;

2451 
	m∆Àn
;

2452 
p¸e_uch¨
 
	m∆
[4];

2453 } 
	tcompûe_d©a
;

2458 
	sbønch_chaö
 {

2459 
bønch_chaö
 *
	mouãr
;

2460 
p¸e_uch¨
 *
	mcuºít_bønch
;

2461 } 
	tbønch_chaö
;

2465 
	sªcur£_check
 {

2466 
ªcur£_check
 *
	m¥ev
;

2467 c⁄° 
p¸e_uch¨
 *
	mgroup
;

2468 } 
	tªcur£_check
;

2473 
	sªcursi⁄_öfo
 {

2474 
ªcursi⁄_öfo
 *
	m¥evªc
;

2475 
	mgroup_num
;

2476 *
	moff£t_ßve
;

2477 
	mßved_max
;

2478 
	mßved_ˇ±uª_œ°
;

2479 
PCRE_PUCHAR
 
	msubje˘_posôi⁄
;

2480 } 
	tªcursi⁄_öfo
;

2484 
	sdÁ_ªcursi⁄_öfo
 {

2485 
dÁ_ªcursi⁄_öfo
 *
	m¥evªc
;

2486 
	mgroup_num
;

2487 
PCRE_PUCHAR
 
	msubje˘_posôi⁄
;

2488 } 
	tdÁ_ªcursi⁄_öfo
;

2495 
	sïåblock
 {

2496 
ïåblock
 *
	mïb_¥ev
;

2497 
PCRE_PUCHAR
 
	mïb_ßved_ïå
;

2498 } 
	tïåblock
;

2504 
	sm©ch_d©a
 {

2505 
	mm©ch_ˇŒ_cou¡
;

2506 
	mm©ch_limô
;

2507 
	mm©ch_limô_ªcursi⁄
;

2508 *
	moff£t_ve˘‹
;

2509 
	moff£t_íd
;

2510 
	moff£t_max
;

2511 
	m∆ty≥
;

2512 
	m∆Àn
;

2513 
	m«me_cou¡
;

2514 
	m«me_íåy_size
;

2515 
	mskù_¨g_cou¡
;

2516 
	mign‹e_skù_¨g
;

2517 
p¸e_uch¨
 *
	m«me_èbÀ
;

2518 
p¸e_uch¨
 
	m∆
[4];

2519 c⁄° 
p¸e_uöt8
 *
	mlcc
;

2520 c⁄° 
p¸e_uöt8
 *
	mfcc
;

2521 c⁄° 
p¸e_uöt8
 *
	m˘y≥s
;

2522 
BOOL
 
	mnŸbﬁ
;

2523 
BOOL
 
	mnŸeﬁ
;

2524 
BOOL
 
	mutf
;

2525 
BOOL
 
	mjs¸ùt_com∑t
;

2526 
BOOL
 
	mu£_u˝
;

2527 
BOOL
 
	míd⁄ly
;

2528 
BOOL
 
	mnŸem±y
;

2529 
BOOL
 
	mnŸem±y_©°¨t
;

2530 
BOOL
 
	mhôíd
;

2531 
BOOL
 
	mb§_™y¸lf
;

2532 
BOOL
 
	mha°hí
;

2533 c⁄° 
p¸e_uch¨
 *
	m°¨t_code
;

2534 
PCRE_PUCHAR
 
	m°¨t_subje˘
;

2535 
PCRE_PUCHAR
 
	míd_subje˘
;

2536 
PCRE_PUCHAR
 
	m°¨t_m©ch_±r
;

2537 
PCRE_PUCHAR
 
	míd_m©ch_±r
;

2538 
PCRE_PUCHAR
 
	m°¨t_u£d_±r
;

2539 
	m∑πül
;

2540 
	míd_off£t_t›
;

2541 
p¸e_öt32
 
	mˇ±uª_œ°
;

2542 
	m°¨t_off£t
;

2543 
	mm©ch_fun˘i⁄_ty≥
;

2544 
ïåblock
 *
	mïåchaö
;

2545 
	mïån
;

2546 
ªcursi⁄_öfo
 *
	mªcursive
;

2547 *
	mˇŒout_d©a
;

2548 c⁄° 
p¸e_uch¨
 *
	mm¨k
;

2549 c⁄° 
p¸e_uch¨
 *
	mnom©ch_m¨k
;

2550 c⁄° 
p¸e_uch¨
 *
	m⁄˚_èrgë
;

2551 #ifde‡
NO_RECURSE


2552 *
	mm©ch_‰ames_ba£
;

2554 } 
	tm©ch_d©a
;

2559 
	sdÁ_m©ch_d©a
 {

2560 c⁄° 
p¸e_uch¨
 *
	m°¨t_code
;

2561 c⁄° 
p¸e_uch¨
 *
	m°¨t_subje˘
 ;

2562 c⁄° 
p¸e_uch¨
 *
	míd_subje˘
;

2563 c⁄° 
p¸e_uch¨
 *
	m°¨t_u£d_±r
;

2564 c⁄° 
p¸e_uöt8
 *
	mèbÀs
;

2565 
	m°¨t_off£t
;

2566 
	mm›ti⁄s
;

2567 
	mp›ti⁄s
;

2568 
	m∆ty≥
;

2569 
	m∆Àn
;

2570 
p¸e_uch¨
 
	m∆
[4];

2571 *
	mˇŒout_d©a
;

2572 
dÁ_ªcursi⁄_öfo
 *
	mªcursive
;

2573 } 
	tdÁ_m©ch_d©a
;

2577 
	#˘y≥_•a˚
 0x01

	)

2578 
	#˘y≥_Àâî
 0x02

	)

2579 
	#˘y≥_digô
 0x04

	)

2580 
	#˘y≥_xdigô
 0x08

	)

2581 
	#˘y≥_w‹d
 0x10

	)

2582 
	#˘y≥_mëa
 0x80

	)

2587 
	#cbô_•a˚
 0

	)

2588 
	#cbô_xdigô
 32

	)

2589 
	#cbô_digô
 64

	)

2590 
	#cbô_uµî
 96

	)

2591 
	#cbô_lowî
 128

	)

2592 
	#cbô_w‹d
 160

	)

2593 
	#cbô_gøph
 192

	)

2594 
	#cbô_¥öt
 224

	)

2595 
	#cbô_pun˘
 256

	)

2596 
	#cbô_˙ål
 288

	)

2597 
	#cbô_Àngth
 320

	)

2602 
	#lcc_off£t
 0

	)

2603 
	#fcc_off£t
 256

	)

2604 
	#cbôs_off£t
 512

	)

2605 
	#˘y≥s_off£t
 (
cbôs_off£t
 + 
cbô_Àngth
)

	)

2606 
	#èbÀs_Àngth
 (
˘y≥s_off£t
 + 256)

	)

2610 #i‡
deföed
 
COMPILE_PCRE8


2611 #i‚de‡
PUBL


2612 
	#PUBL
(
«me
Ë
p¸e_
##
	)
name

2614 #i‚de‡
PRIV


2615 
	#PRIV
(
«me
Ë
_p¸e_
##
	)
name

2617 #ñi‡
deföed
 
COMPILE_PCRE16


2618 #i‚de‡
PUBL


2619 
	#PUBL
(
«me
Ë
p¸e16_
##
	)
name

2621 #i‚de‡
PRIV


2622 
	#PRIV
(
«me
Ë
_p¸e16_
##
	)
name

2624 #ñi‡
deföed
 
COMPILE_PCRE32


2625 #i‚de‡
PUBL


2626 
	#PUBL
(
«me
Ë
p¸e32_
##
	)
name

2628 #i‚de‡
PRIV


2629 
	#PRIV
(
«me
Ë
_p¸e32_
##
	)
name

2632 #îr‹ 
Unsuµ‹ãd
 
compûög
 
mode


2641 
p¸e_uöt16
 
	m«me_off£t
;

2642 
p¸e_uöt16
 
	mty≥
;

2643 
p¸e_uöt16
 
	mvÆue
;

2644 } 
	tu˝_ty≥_èbÀ
;

2652 #ifde‡
COMPILE_PCRE8


2653 c⁄° 
PRIV
(
utf8_èbÀ1
)[];

2654 c⁄° 
PRIV
(
utf8_èbÀ1_size
);

2655 c⁄° 
PRIV
(
utf8_èbÀ2
)[];

2656 c⁄° 
PRIV
(
utf8_èbÀ3
)[];

2657 c⁄° 
p¸e_uöt8
 
PRIV
(
utf8_èbÀ4
)[];

2660 c⁄° 
PRIV
(
uâ_«mes
)[];

2661 c⁄° 
u˝_ty≥_èbÀ
 
PRIV
(
uâ
)[];

2662 c⁄° 
PRIV
(
uâ_size
);

2664 c⁄° 
p¸e_uöt8
 
PRIV
(
OP_Àngths
)[];

2665 c⁄° 
p¸e_uöt8
 
PRIV
(
deÁu…_èbÀs
)[];

2667 c⁄° 
p¸e_uöt32
 
PRIV
(
h•a˚_li°
)[];

2668 c⁄° 
p¸e_uöt32
 
PRIV
(
v•a˚_li°
)[];

2676 #i‡
deföed
 
COMPILE_PCRE8


2678 
	#STRCMP_UC_UC
(
°r1
, 
°r2
) \

2679 
	`°rcmp
((*)(
°r1
), (*)(
°r2
))

	)

2680 
	#STRCMP_UC_C8
(
°r1
, 
°r2
) \

2681 
	`°rcmp
((*)(
°r1
), (
°r2
))

	)

2682 
	#STRNCMP_UC_UC
(
°r1
, 
°r2
, 
num
) \

2683 
	`°∫cmp
((*)(
°r1
), (*)(
°r2
), (
num
))

	)

2684 
	#STRNCMP_UC_C8
(
°r1
, 
°r2
, 
num
) \

2685 
	`°∫cmp
((*)(
°r1
), (
°r2
), (
num
))

	)

2686 
	#STRLEN_UC
(
°r
Ë
	`°æí
((c⁄° *)°r)

	)

2688 #ñi‡
deföed
 
COMPILE_PCRE16
 || deföed 
COMPILE_PCRE32


2690 
	$PRIV
(
°rcmp_uc_uc
)(c⁄° 
p¸e_uch¨
 *,

2691 c⁄° 
p¸e_uch¨
 *);

2692 
	$PRIV
(
°rcmp_uc_c8
)(c⁄° 
p¸e_uch¨
 *,

2694 
	$PRIV
(
°∫cmp_uc_uc
)(c⁄° 
p¸e_uch¨
 *,

2695 c⁄° 
p¸e_uch¨
 *, 
num
);

2696 
	$PRIV
(
°∫cmp_uc_c8
)(c⁄° 
p¸e_uch¨
 *,

2697 c⁄° *, 
num
);

2698 
	$PRIV
(
°æí_uc
)(c⁄° 
p¸e_uch¨
 *
°r
);

2700 
	#STRCMP_UC_UC
(
°r1
, 
°r2
) \

2701 
	`PRIV
(
°rcmp_uc_uc
)((
°r1
), (
°r2
))

	)

2702 
	#STRCMP_UC_C8
(
°r1
, 
°r2
) \

2703 
	`PRIV
(
°rcmp_uc_c8
)((
°r1
), (
°r2
))

	)

2704 
	#STRNCMP_UC_UC
(
°r1
, 
°r2
, 
num
) \

2705 
	`PRIV
(
°∫cmp_uc_uc
)((
°r1
), (
°r2
), (
num
))

	)

2706 
	#STRNCMP_UC_C8
(
°r1
, 
°r2
, 
num
) \

2707 
	`PRIV
(
°∫cmp_uc_c8
)((
°r1
), (
°r2
), (
num
))

	)

2708 
	#STRLEN_UC
(
°r
Ë
	`PRIV
(
°æí_uc
)(°r)

	)

2712 #i‡
deföed
 
COMPILE_PCRE8
 || deföed 
COMPILE_PCRE16


2714 
	#STRCMP_UC_UC_TEST
(
°r1
, 
°r2
Ë
	`STRCMP_UC_UC
(°r1, så2)

	)

2715 
	#STRCMP_UC_C8_TEST
(
°r1
, 
°r2
Ë
	`STRCMP_UC_C8
(°r1, så2)

	)

2717 #ñi‡
deföed
 
COMPILE_PCRE32


2719 
	$PRIV
(
°rcmp_uc_uc_utf
)(c⁄° 
p¸e_uch¨
 *,

2720 c⁄° 
p¸e_uch¨
 *);

2721 
	$PRIV
(
°rcmp_uc_c8_utf
)(c⁄° 
p¸e_uch¨
 *,

2724 
	#STRCMP_UC_UC_TEST
(
°r1
, 
°r2
) \

2725 (
utf
 ? 
	`PRIV
(
°rcmp_uc_uc_utf
)((
°r1
), (
°r2
)Ë: PRIV(
°rcmp_uc_uc
)((°r1), (°r2)))

	)

2726 
	#STRCMP_UC_C8_TEST
(
°r1
, 
°r2
) \

2727 (
utf
 ? 
	`PRIV
(
°rcmp_uc_c8_utf
)((
°r1
), (
°r2
)Ë: PRIV(
°rcmp_uc_c8
)((°r1), (°r2)))

	)

2731 c⁄° 
p¸e_uch¨
 *
	$PRIV
(
föd_bøckë
)(c⁄° 
p¸e_uch¨
 *, 
BOOL
, );

2732 
BOOL
 
	$PRIV
(
is_√wlöe
)(
PCRE_PUCHAR
, , PCRE_PUCHAR,

2733 *, 
BOOL
);

2734 
	$PRIV
(
‹d2utf
)(
p¸e_uöt32
, 
p¸e_uch¨
 *);

2735 
	$PRIV
(
vÆid_utf
)(
PCRE_PUCHAR
, , *);

2736 
BOOL
 
	$PRIV
(
was_√wlöe
)(
PCRE_PUCHAR
, , PCRE_PUCHAR,

2737 *, 
BOOL
);

2738 
BOOL
 
	$PRIV
(
x˛ass
)(
p¸e_uöt32
, c⁄° 
p¸e_uch¨
 *, 
BOOL
);

2740 #ifde‡
SUPPORT_JIT


2741 
	$PRIV
(
jô_compûe
)(c⁄° 
REAL_PCRE
 *,

2742 
	`PUBL
(
exåa
) *, );

2743 
	$PRIV
(
jô_exec
)(c⁄° 
	`PUBL
(
exåa
) *,

2744 c⁄° 
p¸e_uch¨
 *, , , , *, );

2745 
	$PRIV
(
jô_‰ì
)(*);

2746 
	$PRIV
(
jô_gë_size
)(*);

2747 c⁄° * 
	$PRIV
(
jô_gë_èrgë
)();

2753 
p¸e_uöt8
 
s¸ùt
;

2754 
p¸e_uöt8
 
ch¨ty≥
;

2755 
p¸e_uöt8
 
gb¥›
;

2756 
p¸e_uöt8
 
ˇ££t
;

2757 
p¸e_öt32
 
Ÿhî_ˇ£
;

2758 } 
	tucd_ªc‹d
;

2760 c⁄° 
p¸e_uöt32
 
	`PRIV
(
ucd_ˇ£Àss_£ts
)[];

2761 c⁄° 
ucd_ªc‹d
 
	`PRIV
(
ucd_ªc‹ds
)[];

2762 c⁄° 
p¸e_uöt8
 
	`PRIV
(
ucd_°age1
)[];

2763 c⁄° 
p¸e_uöt16
 
	`PRIV
(
ucd_°age2
)[];

2764 c⁄° 
p¸e_uöt32
 
	`PRIV
(
u˝_gíty≥
)[];

2765 c⁄° 
p¸e_uöt32
 
	`PRIV
(
u˝_gbèbÀ
)[];

2766 #ifde‡
SUPPORT_JIT


2767 c⁄° 
	`PRIV
(
u˝_ty≥ønge
)[];

2770 #ifde‡
SUPPORT_UCP


2773 
	#UCD_BLOCK_SIZE
 128

	)

2774 
	#GET_UCD
(
ch
Ë(
	`PRIV
(
ucd_ªc‹ds
) + \

2775 
	`PRIV
(
ucd_°age2
)[PRIV(
ucd_°age1
)[()(
ch
Ë/ 
UCD_BLOCK_SIZE
] * \

2776 
UCD_BLOCK_SIZE
 + ()(
ch
Ë% UCD_BLOCK_SIZE])

	)

2778 
	#UCD_CHARTYPE
(
ch
Ë
	`GET_UCD
(ch)->
ch¨ty≥


	)

2779 
	#UCD_SCRIPT
(
ch
Ë
	`GET_UCD
(ch)->
s¸ùt


	)

2780 
	#UCD_CATEGORY
(
ch
Ë
	`PRIV
(
u˝_gíty≥
)[
	`UCD_CHARTYPE
(ch)]

	)

2781 
	#UCD_GRAPHBREAK
(
ch
Ë
	`GET_UCD
(ch)->
gb¥›


	)

2782 
	#UCD_CASESET
(
ch
Ë
	`GET_UCD
(ch)->
ˇ££t


	)

2783 
	#UCD_OTHERCASE
(
ch
Ë((
p¸e_uöt32
)(()ch + ()(
	`GET_UCD
(ch)->
Ÿhî_ˇ£
)))

	)

	@pcre_newline.c

50 #ifde‡
HAVE_CONFIG_H


51 
	~"c⁄fig.h
"

54 
	~"p¸e_öã∫Æ.h
"

75 
BOOL


76 
	$PRIV
(
is_√wlöe
)(
PCRE_PUCHAR
 
±r
, 
ty≥
, PCRE_PUCHAR 
íd±r
, *
À≈å
,

77 
BOOL
 
utf
)

79 
p¸e_uöt32
 
c
;

80 ()
utf
;

81 #ifde‡
SUPPORT_UTF


82 i‡(
utf
)

84 
	`GETCHAR
(
c
, 
±r
);

88 
c
 = *
±r
;

92 i‡(
ty≥
 =
NLTYPE_ANYCRLF
Ë
c
)

94 
CHAR_LF
: *
À≈å
 = 1;  
TRUE
;

95 
CHAR_CR
: *
À≈å
 = (
±r
 < 
íd±r
 - 1 &&Öå[1] =
CHAR_LF
)? 2 : 1;

96  
TRUE
;

97 :  
FALSE
;

102 
c
)

104 #ifde‡
EBCDIC


105 
CHAR_NEL
:

107 
CHAR_LF
:

108 
CHAR_VT
:

109 
CHAR_FF
: *
À≈å
 = 1;  
TRUE
;

111 
CHAR_CR
:

112 *
À≈å
 = (
±r
 < 
íd±r
 - 1 &&Öå[1] =
CHAR_LF
)? 2 : 1;

113  
TRUE
;

115 #i‚de‡
EBCDIC


116 #ifde‡
COMPILE_PCRE8


117 
CHAR_NEL
: *
À≈å
 = 
utf
? 2 : 1;  
TRUE
;

119 0x2029: *
À≈å
 = 3;  
TRUE
;

121 
CHAR_NEL
:

123 0x2029: *
À≈å
 = 1;  
TRUE
;

127 :  
FALSE
;

129 
	}
}

150 
BOOL


151 
	$PRIV
(
was_√wlöe
)(
PCRE_PUCHAR
 
±r
, 
ty≥
, PCRE_PUCHAR 
°¨çå
, *
À≈å
,

152 
BOOL
 
utf
)

154 
p¸e_uöt32
 
c
;

155 ()
utf
;

156 
±r
--;

157 #ifde‡
SUPPORT_UTF


158 i‡(
utf
)

160 
	`BACKCHAR
(
±r
);

161 
	`GETCHAR
(
c
, 
±r
);

165 
c
 = *
±r
;

169 i‡(
ty≥
 =
NLTYPE_ANYCRLF
Ë
c
)

171 
CHAR_LF
:

172 *
À≈å
 = (
±r
 > 
°¨çå
 &&Öå[-1] =
CHAR_CR
)? 2 : 1;

173  
TRUE
;

175 
CHAR_CR
: *
À≈å
 = 1;  
TRUE
;

176 :  
FALSE
;

181 
c
)

183 
CHAR_LF
:

184 *
À≈å
 = (
±r
 > 
°¨çå
 &&Öå[-1] =
CHAR_CR
)? 2 : 1;

185  
TRUE
;

187 #ifde‡
EBCDIC


188 
CHAR_NEL
:

190 
CHAR_VT
:

191 
CHAR_FF
:

192 
CHAR_CR
: *
À≈å
 = 1;  
TRUE
;

194 #i‚de‡
EBCDIC


195 #ifde‡
COMPILE_PCRE8


196 
CHAR_NEL
: *
À≈å
 = 
utf
? 2 : 1;  
TRUE
;

198 0x2029: *
À≈å
 = 3;  
TRUE
;

200 
CHAR_NEL
:

202 0x2029: *
À≈å
 = 1;  
TRUE
;

206 :  
FALSE
;

208 
	}
}

	@pcre_tables.c

40 #i‚de‡
PCRE_INCLUDED


48 #ifde‡
HAVE_CONFIG_H


49 
	~"c⁄fig.h
"

52 
	~"p¸e_öã∫Æ.h
"

59 c⁄° 
p¸e_uöt8
 
PRIV
(
OP_Àngths
)[] = { 
OP_LENGTHS
 };

64 c⁄° 
p¸e_uöt32
 
PRIV
(
h•a˚_li°
)[] = { 
HSPACE_LIST
 };

65 c⁄° 
p¸e_uöt32
 
PRIV
(
v•a˚_li°
)[] = { 
VSPACE_LIST
 };

76 #i‡(
deföed
 
SUPPORT_UTF
 && deföed 
COMPILE_PCRE8
) \

77 || (
deföed
 
	gPCRE_INCLUDED
 && (deföed 
	gSUPPORT_PCRE16
 || deföed 
	gSUPPORT_PCRE32
))

81 c⁄° 
PRIV
(
utf8_èbÀ1
)[] =

84 c⁄° 
PRIV
(
utf8_èbÀ1_size
Ë(PRIV(
utf8_èbÀ1
)) / ();

89 c⁄° 
PRIV
(
utf8_èbÀ2
)[] = { 0, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc};

90 c⁄° 
PRIV
(
utf8_èbÀ3
)[] = { 0xff, 0x1f, 0x0f, 0x07, 0x03, 0x01};

95 c⁄° 
p¸e_uöt8
 
PRIV
(
utf8_èbÀ4
)[] = {

103 #ifde‡
SUPPORT_UTF


107 c⁄° 
p¸e_uöt32
 
PRIV
(
u˝_gíty≥
)[] = {

108 
u˝_C
, ucp_C, ucp_C, ucp_C, ucp_C,

109 
u˝_L
, ucp_L, ucp_L, ucp_L, ucp_L,

110 
u˝_M
, ucp_M, ucp_M,

111 
u˝_N
, ucp_N, ucp_N,

112 
u˝_P
, ucp_P, ucp_P, ucp_P, ucp_P,

113 
u˝_P
, ucp_P,

114 
u˝_S
, ucp_S, ucp_S, ucp_S,

115 
u˝_Z
, ucp_Z, ucp_Z

152 c⁄° 
p¸e_uöt32
 
PRIV
(
u˝_gbèbÀ
[]) = {

153 (1<<
u˝_gbLF
),

156 (1<<
u˝_gbExãnd
)|(1<<
u˝_gbS∑cögM¨k
),

157 (1<<
u˝_gbExãnd
)|(1<<
u˝_gbPª≥nd
)|

158 (1<<
u˝_gbS∑cögM¨k
)|(1<<
u˝_gbL
)|

159 (1<<
u˝_gbV
)|(1<<
u˝_gbT
)|(1<<
u˝_gbLV
)|

160 (1<<
u˝_gbLVT
)|(1<<
u˝_gbOthî
),

162 (1<<
u˝_gbExãnd
)|(1<<
u˝_gbS∑cögM¨k
),

163 (1<<
u˝_gbExãnd
)|(1<<
u˝_gbS∑cögM¨k
)|(1<<
u˝_gbL
)|

164 (1<<
u˝_gbL
)|(1<<
u˝_gbV
)|(1<<
u˝_gbLV
)|(1<<
u˝_gbLVT
),

166 (1<<
u˝_gbExãnd
)|(1<<
u˝_gbS∑cögM¨k
)|(1<<
u˝_gbV
)|

167 (1<<
u˝_gbT
),

169 (1<<
u˝_gbExãnd
)|(1<<
u˝_gbS∑cögM¨k
)|(1<<
u˝_gbT
),

170 (1<<
u˝_gbExãnd
)|(1<<
u˝_gbS∑cögM¨k
)|(1<<
u˝_gbV
)|

171 (1<<
u˝_gbT
),

173 (1<<
u˝_gbExãnd
)|(1<<
u˝_gbS∑cögM¨k
)|(1<<
u˝_gbT
),

174 (1<<
u˝_gbRegi⁄ÆIndiˇt‹
),

175 (1<<
u˝_gbExãnd
)|(1<<
u˝_gbS∑cögM¨k
)

178 #ifde‡
SUPPORT_JIT


182 c⁄° 
PRIV
(
u˝_ty≥ønge
)[] = {

183 
u˝_Cc
, 
u˝_Cs
,

184 
u˝_Ll
, 
u˝_Lu
,

185 
u˝_Mc
, 
u˝_Mn
,

186 
u˝_Nd
, 
u˝_No
,

187 
u˝_Pc
, 
u˝_Ps
,

188 
u˝_Sc
, 
u˝_So
,

189 
u˝_Zl
, 
u˝_Zs
,

210 
	#STRING_Any0
 
STR_A
 
STR_n
 
STR_y
 "\0"

	)

211 
	#STRING_Aøbic0
 
STR_A
 
STR_r
 
STR_a
 
STR_b
 
STR_i
 
STR_c
 "\0"

	)

212 
	#STRING_Armíün0
 
STR_A
 
STR_r
 
STR_m
 
STR_e
 
STR_n
 
STR_i
 
STR_a
 STR_¿"\0"

	)

213 
	#STRING_Ave°™0
 
STR_A
 
STR_v
 
STR_e
 
STR_s
 
STR_t
 
STR_a
 
STR_n
 "\0"

	)

214 
	#STRING_BÆöe£0
 
STR_B
 
STR_a
 
STR_l
 
STR_i
 
STR_n
 
STR_e
 
STR_s
 STR_ê"\0"

	)

215 
	#STRING_Bamum0
 
STR_B
 
STR_a
 
STR_m
 
STR_u
 STR_m "\0"

	)

216 
	#STRING_Basß_Vah0
 
STR_B
 
STR_a
 
STR_s
 STR_†STR_®
STR_UNDERSCORE
 
STR_V
 STR_®
STR_h
 "\0"

	)

217 
	#STRING_B©ak0
 
STR_B
 
STR_a
 
STR_t
 STR_®
STR_k
 "\0"

	)

218 
	#STRING_BígÆi0
 
STR_B
 
STR_e
 
STR_n
 
STR_g
 
STR_a
 
STR_l
 
STR_i
 "\0"

	)

219 
	#STRING_B›omofo0
 
STR_B
 
STR_o
 
STR_p
 STR_ÿ
STR_m
 STR_ÿ
STR_f
 STR_ÿ"\0"

	)

220 
	#STRING_Bøhmi0
 
STR_B
 
STR_r
 
STR_a
 
STR_h
 
STR_m
 
STR_i
 "\0"

	)

221 
	#STRING_BøûÀ0
 
STR_B
 
STR_r
 
STR_a
 
STR_i
 
STR_l
 STR_»
STR_e
 "\0"

	)

222 
	#STRING_Bugöe£0
 
STR_B
 
STR_u
 
STR_g
 
STR_i
 
STR_n
 
STR_e
 
STR_s
 STR_ê"\0"

	)

223 
	#STRING_Buhid0
 
STR_B
 
STR_u
 
STR_h
 
STR_i
 
STR_d
 "\0"

	)

224 
	#STRING_C0
 
STR_C
 "\0"

	)

225 
	#STRING_C™adün_Ab‹igöÆ0
 
STR_C
 
STR_a
 
STR_n
 STR_®
STR_d
 
STR_i
 STR_®STR_¿
STR_UNDERSCORE
 
STR_A
 
STR_b
 
STR_o
 
STR_r
 STR_ò
STR_g
 STR_òSTR_¿STR_®
STR_l
 "\0"

	)

226 
	#STRING_C¨ün0
 
STR_C
 
STR_a
 
STR_r
 
STR_i
 STR_®
STR_n
 "\0"

	)

227 
	#STRING_Cauˇsün_Alb™ün0
 
STR_C
 
STR_a
 
STR_u
 
STR_c
 STR_®
STR_s
 
STR_i
 STR_®
STR_n
 
STR_UNDERSCORE
 
STR_A
 
STR_l
 
STR_b
 STR_®STR_¿STR_òSTR_®STR_¿"\0"

	)

228 
	#STRING_Cc0
 
STR_C
 
STR_c
 "\0"

	)

229 
	#STRING_Cf0
 
STR_C
 
STR_f
 "\0"

	)

230 
	#STRING_Chakma0
 
STR_C
 
STR_h
 
STR_a
 
STR_k
 
STR_m
 STR_®"\0"

	)

231 
	#STRING_Cham0
 
STR_C
 
STR_h
 
STR_a
 
STR_m
 "\0"

	)

232 
	#STRING_Chîokì0
 
STR_C
 
STR_h
 
STR_e
 
STR_r
 
STR_o
 
STR_k
 STR_êSTR_ê"\0"

	)

233 
	#STRING_Cn0
 
STR_C
 
STR_n
 "\0"

	)

234 
	#STRING_Co0
 
STR_C
 
STR_o
 "\0"

	)

235 
	#STRING_Comm⁄0
 
STR_C
 
STR_o
 
STR_m
 STR_m STR_ÿ
STR_n
 "\0"

	)

236 
	#STRING_C›tic0
 
STR_C
 
STR_o
 
STR_p
 
STR_t
 
STR_i
 
STR_c
 "\0"

	)

237 
	#STRING_Cs0
 
STR_C
 
STR_s
 "\0"

	)

238 
	#STRING_Cu√if‹m0
 
STR_C
 
STR_u
 
STR_n
 
STR_e
 
STR_i
 
STR_f
 
STR_o
 
STR_r
 
STR_m
 "\0"

	)

239 
	#STRING_Cy¥iŸ0
 
STR_C
 
STR_y
 
STR_p
 
STR_r
 
STR_i
 
STR_o
 
STR_t
 "\0"

	)

240 
	#STRING_Cyrûlic0
 
STR_C
 
STR_y
 
STR_r
 
STR_i
 
STR_l
 STR_»STR_ò
STR_c
 "\0"

	)

241 
	#STRING_De£ªt0
 
STR_D
 
STR_e
 
STR_s
 STR_ê
STR_r
 STR_ê
STR_t
 "\0"

	)

242 
	#STRING_Dev™ag¨i0
 
STR_D
 
STR_e
 
STR_v
 
STR_a
 
STR_n
 STR_®
STR_g
 STR_®
STR_r
 
STR_i
 "\0"

	)

243 
	#STRING_Du∂oy™0
 
STR_D
 
STR_u
 
STR_p
 
STR_l
 
STR_o
 
STR_y
 
STR_a
 
STR_n
 "\0"

	)

244 
	#STRING_Egy±ün_Hõroglyphs0
 
STR_E
 
STR_g
 
STR_y
 
STR_p
 
STR_t
 
STR_i
 
STR_a
 
STR_n
 
STR_UNDERSCORE
 
STR_H
 STR_ò
STR_e
 
STR_r
 
STR_o
 STR_g 
STR_l
 STR_y STR_∞
STR_h
 
STR_s
 "\0"

	)

245 
	#STRING_Elbaßn0
 
STR_E
 
STR_l
 
STR_b
 
STR_a
 
STR_s
 STR_®
STR_n
 "\0"

	)

246 
	#STRING_Ethi›ic0
 
STR_E
 
STR_t
 
STR_h
 
STR_i
 
STR_o
 
STR_p
 STR_ò
STR_c
 "\0"

	)

247 
	#STRING_Ge‹gün0
 
STR_G
 
STR_e
 
STR_o
 
STR_r
 
STR_g
 
STR_i
 
STR_a
 
STR_n
 "\0"

	)

248 
	#STRING_Gœgﬁôic0
 
STR_G
 
STR_l
 
STR_a
 
STR_g
 
STR_o
 STR_»
STR_i
 
STR_t
 STR_ò
STR_c
 "\0"

	)

249 
	#STRING_GŸhic0
 
STR_G
 
STR_o
 
STR_t
 
STR_h
 
STR_i
 
STR_c
 "\0"

	)

250 
	#STRING_Gø¡ha0
 
STR_G
 
STR_r
 
STR_a
 
STR_n
 
STR_t
 
STR_h
 STR_®"\0"

	)

251 
	#STRING_Gªek0
 
STR_G
 
STR_r
 
STR_e
 STR_ê
STR_k
 "\0"

	)

252 
	#STRING_Guj¨©i0
 
STR_G
 
STR_u
 
STR_j
 
STR_a
 
STR_r
 STR_®
STR_t
 
STR_i
 "\0"

	)

253 
	#STRING_Gurmukhi0
 
STR_G
 
STR_u
 
STR_r
 
STR_m
 STR_u 
STR_k
 
STR_h
 
STR_i
 "\0"

	)

254 
	#STRING_H™0
 
STR_H
 
STR_a
 
STR_n
 "\0"

	)

255 
	#STRING_H™gul0
 
STR_H
 
STR_a
 
STR_n
 
STR_g
 
STR_u
 
STR_l
 "\0"

	)

256 
	#STRING_H™unoo0
 
STR_H
 
STR_a
 
STR_n
 
STR_u
 STR_¿
STR_o
 STR_ÿ"\0"

	)

257 
	#STRING_Hebªw0
 
STR_H
 
STR_e
 
STR_b
 
STR_r
 STR_ê
STR_w
 "\0"

	)

258 
	#STRING_Húag™a0
 
STR_H
 
STR_i
 
STR_r
 
STR_a
 
STR_g
 STR_®
STR_n
 STR_®"\0"

	)

259 
	#STRING_Im≥rül_Aømaic0
 
STR_I
 
STR_m
 
STR_p
 
STR_e
 
STR_r
 
STR_i
 
STR_a
 
STR_l
 
STR_UNDERSCORE
 
STR_A
 STR_∏STR_®STR_m STR_®STR_ò
STR_c
 "\0"

	)

260 
	#STRING_Inhîôed0
 
STR_I
 
STR_n
 
STR_h
 
STR_e
 
STR_r
 
STR_i
 
STR_t
 STR_ê
STR_d
 "\0"

	)

261 
	#STRING_Ins¸ùti⁄Æ_Pahœvi0
 
STR_I
 
STR_n
 
STR_s
 
STR_c
 
STR_r
 
STR_i
 
STR_p
 
STR_t
 STR_ò
STR_o
 STR_¿
STR_a
 
STR_l
 
STR_UNDERSCORE
 
STR_P
 STR_®
STR_h
 STR_»STR_®
STR_v
 STR_ò"\0"

	)

262 
	#STRING_Ins¸ùti⁄Æ_P¨thün0
 
STR_I
 
STR_n
 
STR_s
 
STR_c
 
STR_r
 
STR_i
 
STR_p
 
STR_t
 STR_ò
STR_o
 STR_¿
STR_a
 
STR_l
 
STR_UNDERSCORE
 
STR_P
 STR_®STR_∏STR_à
STR_h
 STR_òSTR_®STR_¿"\0"

	)

263 
	#STRING_Jav™e£0
 
STR_J
 
STR_a
 
STR_v
 STR_®
STR_n
 
STR_e
 
STR_s
 STR_ê"\0"

	)

264 
	#STRING_Kaôhi0
 
STR_K
 
STR_a
 
STR_i
 
STR_t
 
STR_h
 STR_ò"\0"

	)

265 
	#STRING_K™«da0
 
STR_K
 
STR_a
 
STR_n
 STR_¿STR_®
STR_d
 STR_®"\0"

	)

266 
	#STRING_K©ak™a0
 
STR_K
 
STR_a
 
STR_t
 STR_®
STR_k
 STR_®
STR_n
 STR_®"\0"

	)

267 
	#STRING_Kayah_Li0
 
STR_K
 
STR_a
 
STR_y
 STR_®
STR_h
 
STR_UNDERSCORE
 
STR_L
 
STR_i
 "\0"

	)

268 
	#STRING_Kh¨oshthi0
 
STR_K
 
STR_h
 
STR_a
 
STR_r
 
STR_o
 
STR_s
 STR_h 
STR_t
 STR_h 
STR_i
 "\0"

	)

269 
	#STRING_Khmî0
 
STR_K
 
STR_h
 
STR_m
 
STR_e
 
STR_r
 "\0"

	)

270 
	#STRING_Khojki0
 
STR_K
 
STR_h
 
STR_o
 
STR_j
 
STR_k
 
STR_i
 "\0"

	)

271 
	#STRING_Khudawadi0
 
STR_K
 
STR_h
 
STR_u
 
STR_d
 
STR_a
 
STR_w
 STR_®STR_d 
STR_i
 "\0"

	)

272 
	#STRING_L0
 
STR_L
 "\0"

	)

273 
	#STRING_L_AMPERSAND0
 
STR_L
 
STR_AMPERSAND
 "\0"

	)

274 
	#STRING_Lao0
 
STR_L
 
STR_a
 
STR_o
 "\0"

	)

275 
	#STRING_L©ö0
 
STR_L
 
STR_a
 
STR_t
 
STR_i
 
STR_n
 "\0"

	)

276 
	#STRING_Lïcha0
 
STR_L
 
STR_e
 
STR_p
 
STR_c
 
STR_h
 
STR_a
 "\0"

	)

277 
	#STRING_Limbu0
 
STR_L
 
STR_i
 
STR_m
 
STR_b
 
STR_u
 "\0"

	)

278 
	#STRING_Löór_A0
 
STR_L
 
STR_i
 
STR_n
 
STR_e
 
STR_a
 
STR_r
 
STR_UNDERSCORE
 
STR_A
 "\0"

	)

279 
	#STRING_Löór_B0
 
STR_L
 
STR_i
 
STR_n
 
STR_e
 
STR_a
 
STR_r
 
STR_UNDERSCORE
 
STR_B
 "\0"

	)

280 
	#STRING_Lisu0
 
STR_L
 
STR_i
 
STR_s
 
STR_u
 "\0"

	)

281 
	#STRING_Ll0
 
STR_L
 
STR_l
 "\0"

	)

282 
	#STRING_Lm0
 
STR_L
 
STR_m
 "\0"

	)

283 
	#STRING_Lo0
 
STR_L
 
STR_o
 "\0"

	)

284 
	#STRING_Lt0
 
STR_L
 
STR_t
 "\0"

	)

285 
	#STRING_Lu0
 
STR_L
 
STR_u
 "\0"

	)

286 
	#STRING_Lycün0
 
STR_L
 
STR_y
 
STR_c
 
STR_i
 
STR_a
 
STR_n
 "\0"

	)

287 
	#STRING_Lydün0
 
STR_L
 
STR_y
 
STR_d
 
STR_i
 
STR_a
 
STR_n
 "\0"

	)

288 
	#STRING_M0
 
STR_M
 "\0"

	)

289 
	#STRING_Mahaj™i0
 
STR_M
 
STR_a
 
STR_h
 STR_®
STR_j
 STR_®
STR_n
 
STR_i
 "\0"

	)

290 
	#STRING_MÆayÆam0
 
STR_M
 
STR_a
 
STR_l
 STR_®
STR_y
 STR_®STR_»STR_®
STR_m
 "\0"

	)

291 
	#STRING_M™daic0
 
STR_M
 
STR_a
 
STR_n
 
STR_d
 STR_®
STR_i
 
STR_c
 "\0"

	)

292 
	#STRING_M™ich´™0
 
STR_M
 
STR_a
 
STR_n
 
STR_i
 
STR_c
 
STR_h
 STR_®
STR_e
 STR_®STR_¿"\0"

	)

293 
	#STRING_Mc0
 
STR_M
 
STR_c
 "\0"

	)

294 
	#STRING_Me0
 
STR_M
 
STR_e
 "\0"

	)

295 
	#STRING_Mìãi_Mayek0
 
STR_M
 
STR_e
 STR_ê
STR_t
 STR_ê
STR_i
 
STR_UNDERSCORE
 STR_M 
STR_a
 
STR_y
 STR_ê
STR_k
 "\0"

	)

296 
	#STRING_Míde_Kikakui0
 
STR_M
 
STR_e
 
STR_n
 
STR_d
 STR_ê
STR_UNDERSCORE
 
STR_K
 
STR_i
 
STR_k
 
STR_a
 STR_k 
STR_u
 STR_ò"\0"

	)

297 
	#STRING_Mîoôic_Cursive0
 
STR_M
 
STR_e
 
STR_r
 
STR_o
 
STR_i
 
STR_t
 STR_ò
STR_c
 
STR_UNDERSCORE
 
STR_C
 
STR_u
 STR_∏
STR_s
 STR_ò
STR_v
 STR_ê"\0"

	)

298 
	#STRING_Mîoôic_Hõroglyphs0
 
STR_M
 
STR_e
 
STR_r
 
STR_o
 
STR_i
 
STR_t
 STR_ò
STR_c
 
STR_UNDERSCORE
 
STR_H
 STR_òSTR_êSTR_∏STR_ÿ
STR_g
 
STR_l
 
STR_y
 
STR_p
 
STR_h
 
STR_s
 "\0"

	)

299 
	#STRING_Müo0
 
STR_M
 
STR_i
 
STR_a
 
STR_o
 "\0"

	)

300 
	#STRING_Mn0
 
STR_M
 
STR_n
 "\0"

	)

301 
	#STRING_Modi0
 
STR_M
 
STR_o
 
STR_d
 
STR_i
 "\0"

	)

302 
	#STRING_M⁄gﬁün0
 
STR_M
 
STR_o
 
STR_n
 
STR_g
 STR_ÿ
STR_l
 
STR_i
 
STR_a
 STR_¿"\0"

	)

303 
	#STRING_Mro0
 
STR_M
 
STR_r
 
STR_o
 "\0"

	)

304 
	#STRING_My™m¨0
 
STR_M
 
STR_y
 
STR_a
 
STR_n
 
STR_m
 STR_®
STR_r
 "\0"

	)

305 
	#STRING_N0
 
STR_N
 "\0"

	)

306 
	#STRING_Nab©´™0
 
STR_N
 
STR_a
 
STR_b
 STR_®
STR_t
 STR_®
STR_e
 STR_®
STR_n
 "\0"

	)

307 
	#STRING_Nd0
 
STR_N
 
STR_d
 "\0"

	)

308 
	#STRING_New_Tai_Lue0
 
STR_N
 
STR_e
 
STR_w
 
STR_UNDERSCORE
 
STR_T
 
STR_a
 
STR_i
 STR_UNDERSCORE 
STR_L
 
STR_u
 STR_ê"\0"

	)

309 
	#STRING_Nko0
 
STR_N
 
STR_k
 
STR_o
 "\0"

	)

310 
	#STRING_Nl0
 
STR_N
 
STR_l
 "\0"

	)

311 
	#STRING_No0
 
STR_N
 
STR_o
 "\0"

	)

312 
	#STRING_Ogham0
 
STR_O
 
STR_g
 
STR_h
 
STR_a
 
STR_m
 "\0"

	)

313 
	#STRING_Ol_Chiki0
 
STR_O
 
STR_l
 
STR_UNDERSCORE
 
STR_C
 
STR_h
 
STR_i
 
STR_k
 STR_ò"\0"

	)

314 
	#STRING_Old_Ièlic0
 
STR_O
 
STR_l
 
STR_d
 
STR_UNDERSCORE
 
STR_I
 
STR_t
 
STR_a
 STR_»
STR_i
 
STR_c
 "\0"

	)

315 
	#STRING_Old_N‹th_Aøbün0
 
STR_O
 
STR_l
 
STR_d
 
STR_UNDERSCORE
 
STR_N
 
STR_o
 
STR_r
 
STR_t
 
STR_h
 STR_UNDERSCORE 
STR_A
 STR_∏
STR_a
 
STR_b
 
STR_i
 STR_®
STR_n
 "\0"

	)

316 
	#STRING_Old_Pîmic0
 
STR_O
 
STR_l
 
STR_d
 
STR_UNDERSCORE
 
STR_P
 
STR_e
 
STR_r
 
STR_m
 
STR_i
 
STR_c
 "\0"

	)

317 
	#STRING_Old_Pîsün0
 
STR_O
 
STR_l
 
STR_d
 
STR_UNDERSCORE
 
STR_P
 
STR_e
 
STR_r
 
STR_s
 
STR_i
 
STR_a
 
STR_n
 "\0"

	)

318 
	#STRING_Old_South_Aøbün0
 
STR_O
 
STR_l
 
STR_d
 
STR_UNDERSCORE
 
STR_S
 
STR_o
 
STR_u
 
STR_t
 
STR_h
 STR_UNDERSCORE 
STR_A
 
STR_r
 
STR_a
 
STR_b
 
STR_i
 STR_®
STR_n
 "\0"

	)

319 
	#STRING_Old_Turkic0
 
STR_O
 
STR_l
 
STR_d
 
STR_UNDERSCORE
 
STR_T
 
STR_u
 
STR_r
 
STR_k
 
STR_i
 
STR_c
 "\0"

	)

320 
	#STRING_Oriya0
 
STR_O
 
STR_r
 
STR_i
 
STR_y
 
STR_a
 "\0"

	)

321 
	#STRING_Osm™ya0
 
STR_O
 
STR_s
 
STR_m
 
STR_a
 
STR_n
 
STR_y
 STR_®"\0"

	)

322 
	#STRING_P0
 
STR_P
 "\0"

	)

323 
	#STRING_Pahawh_Hm⁄g0
 
STR_P
 
STR_a
 
STR_h
 STR_®
STR_w
 STR_h 
STR_UNDERSCORE
 
STR_H
 
STR_m
 
STR_o
 
STR_n
 
STR_g
 "\0"

	)

324 
	#STRING_PÆmyª√0
 
STR_P
 
STR_a
 
STR_l
 
STR_m
 
STR_y
 
STR_r
 
STR_e
 
STR_n
 STR_ê"\0"

	)

325 
	#STRING_Pau_Cö_Hau0
 
STR_P
 
STR_a
 
STR_u
 
STR_UNDERSCORE
 
STR_C
 
STR_i
 
STR_n
 STR_UNDERSCORE 
STR_H
 STR_®STR_u "\0"

	)

326 
	#STRING_Pc0
 
STR_P
 
STR_c
 "\0"

	)

327 
	#STRING_Pd0
 
STR_P
 
STR_d
 "\0"

	)

328 
	#STRING_Pe0
 
STR_P
 
STR_e
 "\0"

	)

329 
	#STRING_Pf0
 
STR_P
 
STR_f
 "\0"

	)

330 
	#STRING_Phags_Pa0
 
STR_P
 
STR_h
 
STR_a
 
STR_g
 
STR_s
 
STR_UNDERSCORE
 STR_P STR_®"\0"

	)

331 
	#STRING_Ph€nicün0
 
STR_P
 
STR_h
 
STR_o
 
STR_e
 
STR_n
 
STR_i
 
STR_c
 STR_ò
STR_a
 STR_¿"\0"

	)

332 
	#STRING_Pi0
 
STR_P
 
STR_i
 "\0"

	)

333 
	#STRING_Po0
 
STR_P
 
STR_o
 "\0"

	)

334 
	#STRING_Ps0
 
STR_P
 
STR_s
 "\0"

	)

335 
	#STRING_Pß…î_Pahœvi0
 
STR_P
 
STR_s
 
STR_a
 
STR_l
 
STR_t
 
STR_e
 
STR_r
 
STR_UNDERSCORE
 STR_P STR_®
STR_h
 STR_»STR_®
STR_v
 
STR_i
 "\0"

	)

336 
	#STRING_Rej™g0
 
STR_R
 
STR_e
 
STR_j
 
STR_a
 
STR_n
 
STR_g
 "\0"

	)

337 
	#STRING_Runic0
 
STR_R
 
STR_u
 
STR_n
 
STR_i
 
STR_c
 "\0"

	)

338 
	#STRING_S0
 
STR_S
 "\0"

	)

339 
	#STRING_Sam¨ô™0
 
STR_S
 
STR_a
 
STR_m
 STR_®
STR_r
 
STR_i
 
STR_t
 STR_®
STR_n
 "\0"

	)

340 
	#STRING_Sauøshåa0
 
STR_S
 
STR_a
 
STR_u
 
STR_r
 STR_®
STR_s
 
STR_h
 
STR_t
 STR_∏STR_®"\0"

	)

341 
	#STRING_Sc0
 
STR_S
 
STR_c
 "\0"

	)

342 
	#STRING_Sh¨ada0
 
STR_S
 
STR_h
 
STR_a
 
STR_r
 STR_®
STR_d
 STR_®"\0"

	)

343 
	#STRING_Shavün0
 
STR_S
 
STR_h
 
STR_a
 
STR_v
 
STR_i
 STR_®
STR_n
 "\0"

	)

344 
	#STRING_Siddham0
 
STR_S
 
STR_i
 
STR_d
 STR_d 
STR_h
 
STR_a
 
STR_m
 "\0"

	)

345 
	#STRING_SöhÆa0
 
STR_S
 
STR_i
 
STR_n
 
STR_h
 
STR_a
 
STR_l
 STR_®"\0"

	)

346 
	#STRING_Sk0
 
STR_S
 
STR_k
 "\0"

	)

347 
	#STRING_Sm0
 
STR_S
 
STR_m
 "\0"

	)

348 
	#STRING_So0
 
STR_S
 
STR_o
 "\0"

	)

349 
	#STRING_S‹a_Som≥ng0
 
STR_S
 
STR_o
 
STR_r
 
STR_a
 
STR_UNDERSCORE
 STR_S STR_ÿ
STR_m
 
STR_p
 
STR_e
 
STR_n
 
STR_g
 "\0"

	)

350 
	#STRING_Sund™e£0
 
STR_S
 
STR_u
 
STR_n
 
STR_d
 
STR_a
 STR_¿
STR_e
 
STR_s
 STR_ê"\0"

	)

351 
	#STRING_SylŸi_Nagri0
 
STR_S
 
STR_y
 
STR_l
 
STR_o
 
STR_t
 
STR_i
 
STR_UNDERSCORE
 
STR_N
 
STR_a
 
STR_g
 
STR_r
 STR_ò"\0"

	)

352 
	#STRING_Syrüc0
 
STR_S
 
STR_y
 
STR_r
 
STR_i
 
STR_a
 
STR_c
 "\0"

	)

353 
	#STRING_TagÆog0
 
STR_T
 
STR_a
 
STR_g
 STR_®
STR_l
 
STR_o
 STR_g "\0"

	)

354 
	#STRING_Tagb™wa0
 
STR_T
 
STR_a
 
STR_g
 
STR_b
 STR_®
STR_n
 
STR_w
 STR_®"\0"

	)

355 
	#STRING_Tai_Le0
 
STR_T
 
STR_a
 
STR_i
 
STR_UNDERSCORE
 
STR_L
 
STR_e
 "\0"

	)

356 
	#STRING_Tai_Tham0
 
STR_T
 
STR_a
 
STR_i
 
STR_UNDERSCORE
 STR_T 
STR_h
 STR_®
STR_m
 "\0"

	)

357 
	#STRING_Tai_Võt0
 
STR_T
 
STR_a
 
STR_i
 
STR_UNDERSCORE
 
STR_V
 STR_ò
STR_e
 
STR_t
 "\0"

	)

358 
	#STRING_Takri0
 
STR_T
 
STR_a
 
STR_k
 
STR_r
 
STR_i
 "\0"

	)

359 
	#STRING_Tamû0
 
STR_T
 
STR_a
 
STR_m
 
STR_i
 
STR_l
 "\0"

	)

360 
	#STRING_Tñugu0
 
STR_T
 
STR_e
 
STR_l
 
STR_u
 
STR_g
 STR_u "\0"

	)

361 
	#STRING_ThØ«0
 
STR_T
 
STR_h
 
STR_a
 STR_®
STR_n
 STR_®"\0"

	)

362 
	#STRING_Thai0
 
STR_T
 
STR_h
 
STR_a
 
STR_i
 "\0"

	)

363 
	#STRING_Tibë™0
 
STR_T
 
STR_i
 
STR_b
 
STR_e
 
STR_t
 
STR_a
 
STR_n
 "\0"

	)

364 
	#STRING_Tiföagh0
 
STR_T
 
STR_i
 
STR_f
 STR_ò
STR_n
 
STR_a
 
STR_g
 
STR_h
 "\0"

	)

365 
	#STRING_Túhuè0
 
STR_T
 
STR_i
 
STR_r
 
STR_h
 
STR_u
 
STR_t
 
STR_a
 "\0"

	)

366 
	#STRING_Ug¨ôic0
 
STR_U
 
STR_g
 
STR_a
 
STR_r
 
STR_i
 
STR_t
 STR_ò
STR_c
 "\0"

	)

367 
	#STRING_Vai0
 
STR_V
 
STR_a
 
STR_i
 "\0"

	)

368 
	#STRING_W¨™g_Côi0
 
STR_W
 
STR_a
 
STR_r
 STR_®
STR_n
 
STR_g
 
STR_UNDERSCORE
 
STR_C
 
STR_i
 
STR_t
 STR_ò"\0"

	)

369 
	#STRING_X™0
 
STR_X
 
STR_a
 
STR_n
 "\0"

	)

370 
	#STRING_Xps0
 
STR_X
 
STR_p
 
STR_s
 "\0"

	)

371 
	#STRING_X•0
 
STR_X
 
STR_s
 
STR_p
 "\0"

	)

372 
	#STRING_Xuc0
 
STR_X
 
STR_u
 
STR_c
 "\0"

	)

373 
	#STRING_Xwd0
 
STR_X
 
STR_w
 
STR_d
 "\0"

	)

374 
	#STRING_Yi0
 
STR_Y
 
STR_i
 "\0"

	)

375 
	#STRING_Z0
 
STR_Z
 "\0"

	)

376 
	#STRING_Zl0
 
STR_Z
 
STR_l
 "\0"

	)

377 
	#STRING_Zp0
 
STR_Z
 
STR_p
 "\0"

	)

378 
	#STRING_Zs0
 
STR_Z
 
STR_s
 "\0"

	)

380 c⁄° 
PRIV
(
uâ_«mes
)[] =

381 
STRING_Any0


382 
STRING_Aøbic0


383 
STRING_Armíün0


384 
STRING_Ave°™0


385 
STRING_BÆöe£0


386 
STRING_Bamum0


387 
STRING_Basß_Vah0


388 
STRING_B©ak0


389 
STRING_BígÆi0


390 
STRING_B›omofo0


391 
STRING_Bøhmi0


392 
STRING_BøûÀ0


393 
STRING_Bugöe£0


394 
STRING_Buhid0


395 
STRING_C0


396 
STRING_C™adün_Ab‹igöÆ0


397 
STRING_C¨ün0


398 
STRING_Cauˇsün_Alb™ün0


399 
STRING_Cc0


400 
STRING_Cf0


401 
STRING_Chakma0


402 
STRING_Cham0


403 
STRING_Chîokì0


404 
STRING_Cn0


405 
STRING_Co0


406 
STRING_Comm⁄0


407 
STRING_C›tic0


408 
STRING_Cs0


409 
STRING_Cu√if‹m0


410 
STRING_Cy¥iŸ0


411 
STRING_Cyrûlic0


412 
STRING_De£ªt0


413 
STRING_Dev™ag¨i0


414 
STRING_Du∂oy™0


415 
STRING_Egy±ün_Hõroglyphs0


416 
STRING_Elbaßn0


417 
STRING_Ethi›ic0


418 
STRING_Ge‹gün0


419 
STRING_Gœgﬁôic0


420 
STRING_GŸhic0


421 
STRING_Gø¡ha0


422 
STRING_Gªek0


423 
STRING_Guj¨©i0


424 
STRING_Gurmukhi0


425 
STRING_H™0


426 
STRING_H™gul0


427 
STRING_H™unoo0


428 
STRING_Hebªw0


429 
STRING_Húag™a0


430 
STRING_Im≥rül_Aømaic0


431 
STRING_Inhîôed0


432 
STRING_Ins¸ùti⁄Æ_Pahœvi0


433 
STRING_Ins¸ùti⁄Æ_P¨thün0


434 
STRING_Jav™e£0


435 
STRING_Kaôhi0


436 
STRING_K™«da0


437 
STRING_K©ak™a0


438 
STRING_Kayah_Li0


439 
STRING_Kh¨oshthi0


440 
STRING_Khmî0


441 
STRING_Khojki0


442 
STRING_Khudawadi0


443 
STRING_L0


444 
STRING_L_AMPERSAND0


445 
STRING_Lao0


446 
STRING_L©ö0


447 
STRING_Lïcha0


448 
STRING_Limbu0


449 
STRING_Löór_A0


450 
STRING_Löór_B0


451 
STRING_Lisu0


452 
STRING_Ll0


453 
STRING_Lm0


454 
STRING_Lo0


455 
STRING_Lt0


456 
STRING_Lu0


457 
STRING_Lycün0


458 
STRING_Lydün0


459 
STRING_M0


460 
STRING_Mahaj™i0


461 
STRING_MÆayÆam0


462 
STRING_M™daic0


463 
STRING_M™ich´™0


464 
STRING_Mc0


465 
STRING_Me0


466 
STRING_Mìãi_Mayek0


467 
STRING_Míde_Kikakui0


468 
STRING_Mîoôic_Cursive0


469 
STRING_Mîoôic_Hõroglyphs0


470 
STRING_Müo0


471 
STRING_Mn0


472 
STRING_Modi0


473 
STRING_M⁄gﬁün0


474 
STRING_Mro0


475 
STRING_My™m¨0


476 
STRING_N0


477 
STRING_Nab©´™0


478 
STRING_Nd0


479 
STRING_New_Tai_Lue0


480 
STRING_Nko0


481 
STRING_Nl0


482 
STRING_No0


483 
STRING_Ogham0


484 
STRING_Ol_Chiki0


485 
STRING_Old_Ièlic0


486 
STRING_Old_N‹th_Aøbün0


487 
STRING_Old_Pîmic0


488 
STRING_Old_Pîsün0


489 
STRING_Old_South_Aøbün0


490 
STRING_Old_Turkic0


491 
STRING_Oriya0


492 
STRING_Osm™ya0


493 
STRING_P0


494 
STRING_Pahawh_Hm⁄g0


495 
STRING_PÆmyª√0


496 
STRING_Pau_Cö_Hau0


497 
STRING_Pc0


498 
STRING_Pd0


499 
STRING_Pe0


500 
STRING_Pf0


501 
STRING_Phags_Pa0


502 
STRING_Ph€nicün0


503 
STRING_Pi0


504 
STRING_Po0


505 
STRING_Ps0


506 
STRING_Pß…î_Pahœvi0


507 
STRING_Rej™g0


508 
STRING_Runic0


509 
STRING_S0


510 
STRING_Sam¨ô™0


511 
STRING_Sauøshåa0


512 
STRING_Sc0


513 
STRING_Sh¨ada0


514 
STRING_Shavün0


515 
STRING_Siddham0


516 
STRING_SöhÆa0


517 
STRING_Sk0


518 
STRING_Sm0


519 
STRING_So0


520 
STRING_S‹a_Som≥ng0


521 
STRING_Sund™e£0


522 
STRING_SylŸi_Nagri0


523 
STRING_Syrüc0


524 
STRING_TagÆog0


525 
STRING_Tagb™wa0


526 
STRING_Tai_Le0


527 
STRING_Tai_Tham0


528 
STRING_Tai_Võt0


529 
STRING_Takri0


530 
STRING_Tamû0


531 
STRING_Tñugu0


532 
STRING_ThØ«0


533 
STRING_Thai0


534 
STRING_Tibë™0


535 
STRING_Tiföagh0


536 
STRING_Túhuè0


537 
STRING_Ug¨ôic0


538 
STRING_Vai0


539 
STRING_W¨™g_Côi0


540 
STRING_X™0


541 
STRING_Xps0


542 
STRING_X•0


543 
STRING_Xuc0


544 
STRING_Xwd0


545 
STRING_Yi0


546 
STRING_Z0


547 
STRING_Zl0


548 
STRING_Zp0


549 
STRING_Zs0
;

551 c⁄° 
u˝_ty≥_èbÀ
 
PRIV
(
uâ
)[] = {

552 { 0, 
PT_ANY
, 0 },

553 { 4, 
PT_SC
, 
u˝_Aøbic
 },

554 { 11, 
PT_SC
, 
u˝_Armíün
 },

555 { 20, 
PT_SC
, 
u˝_Ave°™
 },

556 { 28, 
PT_SC
, 
u˝_BÆöe£
 },

557 { 37, 
PT_SC
, 
u˝_Bamum
 },

558 { 43, 
PT_SC
, 
u˝_Basß_Vah
 },

559 { 53, 
PT_SC
, 
u˝_B©ak
 },

560 { 59, 
PT_SC
, 
u˝_BígÆi
 },

561 { 67, 
PT_SC
, 
u˝_B›omofo
 },

562 { 76, 
PT_SC
, 
u˝_Bøhmi
 },

563 { 83, 
PT_SC
, 
u˝_BøûÀ
 },

564 { 91, 
PT_SC
, 
u˝_Bugöe£
 },

565 { 100, 
PT_SC
, 
u˝_Buhid
 },

566 { 106, 
PT_GC
, 
u˝_C
 },

567 { 108, 
PT_SC
, 
u˝_C™adün_Ab‹igöÆ
 },

568 { 128, 
PT_SC
, 
u˝_C¨ün
 },

569 { 135, 
PT_SC
, 
u˝_Cauˇsün_Alb™ün
 },

570 { 154, 
PT_PC
, 
u˝_Cc
 },

571 { 157, 
PT_PC
, 
u˝_Cf
 },

572 { 160, 
PT_SC
, 
u˝_Chakma
 },

573 { 167, 
PT_SC
, 
u˝_Cham
 },

574 { 172, 
PT_SC
, 
u˝_Chîokì
 },

575 { 181, 
PT_PC
, 
u˝_Cn
 },

576 { 184, 
PT_PC
, 
u˝_Co
 },

577 { 187, 
PT_SC
, 
u˝_Comm⁄
 },

578 { 194, 
PT_SC
, 
u˝_C›tic
 },

579 { 201, 
PT_PC
, 
u˝_Cs
 },

580 { 204, 
PT_SC
, 
u˝_Cu√if‹m
 },

581 { 214, 
PT_SC
, 
u˝_Cy¥iŸ
 },

582 { 222, 
PT_SC
, 
u˝_Cyrûlic
 },

583 { 231, 
PT_SC
, 
u˝_De£ªt
 },

584 { 239, 
PT_SC
, 
u˝_Dev™ag¨i
 },

585 { 250, 
PT_SC
, 
u˝_Du∂oy™
 },

586 { 259, 
PT_SC
, 
u˝_Egy±ün_Hõroglyphs
 },

587 { 280, 
PT_SC
, 
u˝_Elbaßn
 },

588 { 288, 
PT_SC
, 
u˝_Ethi›ic
 },

589 { 297, 
PT_SC
, 
u˝_Ge‹gün
 },

590 { 306, 
PT_SC
, 
u˝_Gœgﬁôic
 },

591 { 317, 
PT_SC
, 
u˝_GŸhic
 },

592 { 324, 
PT_SC
, 
u˝_Gø¡ha
 },

593 { 332, 
PT_SC
, 
u˝_Gªek
 },

594 { 338, 
PT_SC
, 
u˝_Guj¨©i
 },

595 { 347, 
PT_SC
, 
u˝_Gurmukhi
 },

596 { 356, 
PT_SC
, 
u˝_H™
 },

597 { 360, 
PT_SC
, 
u˝_H™gul
 },

598 { 367, 
PT_SC
, 
u˝_H™unoo
 },

599 { 375, 
PT_SC
, 
u˝_Hebªw
 },

600 { 382, 
PT_SC
, 
u˝_Húag™a
 },

601 { 391, 
PT_SC
, 
u˝_Im≥rül_Aømaic
 },

602 { 408, 
PT_SC
, 
u˝_Inhîôed
 },

603 { 418, 
PT_SC
, 
u˝_Ins¸ùti⁄Æ_Pahœvi
 },

604 { 440, 
PT_SC
, 
u˝_Ins¸ùti⁄Æ_P¨thün
 },

605 { 463, 
PT_SC
, 
u˝_Jav™e£
 },

606 { 472, 
PT_SC
, 
u˝_Kaôhi
 },

607 { 479, 
PT_SC
, 
u˝_K™«da
 },

608 { 487, 
PT_SC
, 
u˝_K©ak™a
 },

609 { 496, 
PT_SC
, 
u˝_Kayah_Li
 },

610 { 505, 
PT_SC
, 
u˝_Kh¨oshthi
 },

611 { 516, 
PT_SC
, 
u˝_Khmî
 },

612 { 522, 
PT_SC
, 
u˝_Khojki
 },

613 { 529, 
PT_SC
, 
u˝_Khudawadi
 },

614 { 539, 
PT_GC
, 
u˝_L
 },

615 { 541, 
PT_LAMP
, 0 },

616 { 544, 
PT_SC
, 
u˝_Lao
 },

617 { 548, 
PT_SC
, 
u˝_L©ö
 },

618 { 554, 
PT_SC
, 
u˝_Lïcha
 },

619 { 561, 
PT_SC
, 
u˝_Limbu
 },

620 { 567, 
PT_SC
, 
u˝_Löór_A
 },

621 { 576, 
PT_SC
, 
u˝_Löór_B
 },

622 { 585, 
PT_SC
, 
u˝_Lisu
 },

623 { 590, 
PT_PC
, 
u˝_Ll
 },

624 { 593, 
PT_PC
, 
u˝_Lm
 },

625 { 596, 
PT_PC
, 
u˝_Lo
 },

626 { 599, 
PT_PC
, 
u˝_Lt
 },

627 { 602, 
PT_PC
, 
u˝_Lu
 },

628 { 605, 
PT_SC
, 
u˝_Lycün
 },

629 { 612, 
PT_SC
, 
u˝_Lydün
 },

630 { 619, 
PT_GC
, 
u˝_M
 },

631 { 621, 
PT_SC
, 
u˝_Mahaj™i
 },

632 { 630, 
PT_SC
, 
u˝_MÆayÆam
 },

633 { 640, 
PT_SC
, 
u˝_M™daic
 },

634 { 648, 
PT_SC
, 
u˝_M™ich´™
 },

635 { 659, 
PT_PC
, 
u˝_Mc
 },

636 { 662, 
PT_PC
, 
u˝_Me
 },

637 { 665, 
PT_SC
, 
u˝_Mìãi_Mayek
 },

638 { 678, 
PT_SC
, 
u˝_Míde_Kikakui
 },

639 { 692, 
PT_SC
, 
u˝_Mîoôic_Cursive
 },

640 { 709, 
PT_SC
, 
u˝_Mîoôic_Hõroglyphs
 },

641 { 730, 
PT_SC
, 
u˝_Müo
 },

642 { 735, 
PT_PC
, 
u˝_Mn
 },

643 { 738, 
PT_SC
, 
u˝_Modi
 },

644 { 743, 
PT_SC
, 
u˝_M⁄gﬁün
 },

645 { 753, 
PT_SC
, 
u˝_Mro
 },

646 { 757, 
PT_SC
, 
u˝_My™m¨
 },

647 { 765, 
PT_GC
, 
u˝_N
 },

648 { 767, 
PT_SC
, 
u˝_Nab©´™
 },

649 { 777, 
PT_PC
, 
u˝_Nd
 },

650 { 780, 
PT_SC
, 
u˝_New_Tai_Lue
 },

651 { 792, 
PT_SC
, 
u˝_Nko
 },

652 { 796, 
PT_PC
, 
u˝_Nl
 },

653 { 799, 
PT_PC
, 
u˝_No
 },

654 { 802, 
PT_SC
, 
u˝_Ogham
 },

655 { 808, 
PT_SC
, 
u˝_Ol_Chiki
 },

656 { 817, 
PT_SC
, 
u˝_Old_Ièlic
 },

657 { 828, 
PT_SC
, 
u˝_Old_N‹th_Aøbün
 },

658 { 846, 
PT_SC
, 
u˝_Old_Pîmic
 },

659 { 857, 
PT_SC
, 
u˝_Old_Pîsün
 },

660 { 869, 
PT_SC
, 
u˝_Old_South_Aøbün
 },

661 { 887, 
PT_SC
, 
u˝_Old_Turkic
 },

662 { 898, 
PT_SC
, 
u˝_Oriya
 },

663 { 904, 
PT_SC
, 
u˝_Osm™ya
 },

664 { 912, 
PT_GC
, 
u˝_P
 },

665 { 914, 
PT_SC
, 
u˝_Pahawh_Hm⁄g
 },

666 { 927, 
PT_SC
, 
u˝_PÆmyª√
 },

667 { 937, 
PT_SC
, 
u˝_Pau_Cö_Hau
 },

668 { 949, 
PT_PC
, 
u˝_Pc
 },

669 { 952, 
PT_PC
, 
u˝_Pd
 },

670 { 955, 
PT_PC
, 
u˝_Pe
 },

671 { 958, 
PT_PC
, 
u˝_Pf
 },

672 { 961, 
PT_SC
, 
u˝_Phags_Pa
 },

673 { 970, 
PT_SC
, 
u˝_Ph€nicün
 },

674 { 981, 
PT_PC
, 
u˝_Pi
 },

675 { 984, 
PT_PC
, 
u˝_Po
 },

676 { 987, 
PT_PC
, 
u˝_Ps
 },

677 { 990, 
PT_SC
, 
u˝_Pß…î_Pahœvi
 },

678 { 1006, 
PT_SC
, 
u˝_Rej™g
 },

679 { 1013, 
PT_SC
, 
u˝_Runic
 },

680 { 1019, 
PT_GC
, 
u˝_S
 },

681 { 1021, 
PT_SC
, 
u˝_Sam¨ô™
 },

682 { 1031, 
PT_SC
, 
u˝_Sauøshåa
 },

683 { 1042, 
PT_PC
, 
u˝_Sc
 },

684 { 1045, 
PT_SC
, 
u˝_Sh¨ada
 },

685 { 1053, 
PT_SC
, 
u˝_Shavün
 },

686 { 1061, 
PT_SC
, 
u˝_Siddham
 },

687 { 1069, 
PT_SC
, 
u˝_SöhÆa
 },

688 { 1077, 
PT_PC
, 
u˝_Sk
 },

689 { 1080, 
PT_PC
, 
u˝_Sm
 },

690 { 1083, 
PT_PC
, 
u˝_So
 },

691 { 1086, 
PT_SC
, 
u˝_S‹a_Som≥ng
 },

692 { 1099, 
PT_SC
, 
u˝_Sund™e£
 },

693 { 1109, 
PT_SC
, 
u˝_SylŸi_Nagri
 },

694 { 1122, 
PT_SC
, 
u˝_Syrüc
 },

695 { 1129, 
PT_SC
, 
u˝_TagÆog
 },

696 { 1137, 
PT_SC
, 
u˝_Tagb™wa
 },

697 { 1146, 
PT_SC
, 
u˝_Tai_Le
 },

698 { 1153, 
PT_SC
, 
u˝_Tai_Tham
 },

699 { 1162, 
PT_SC
, 
u˝_Tai_Võt
 },

700 { 1171, 
PT_SC
, 
u˝_Takri
 },

701 { 1177, 
PT_SC
, 
u˝_Tamû
 },

702 { 1183, 
PT_SC
, 
u˝_Tñugu
 },

703 { 1190, 
PT_SC
, 
u˝_ThØ«
 },

704 { 1197, 
PT_SC
, 
u˝_Thai
 },

705 { 1202, 
PT_SC
, 
u˝_Tibë™
 },

706 { 1210, 
PT_SC
, 
u˝_Tiföagh
 },

707 { 1219, 
PT_SC
, 
u˝_Túhuè
 },

708 { 1227, 
PT_SC
, 
u˝_Ug¨ôic
 },

709 { 1236, 
PT_SC
, 
u˝_Vai
 },

710 { 1240, 
PT_SC
, 
u˝_W¨™g_Côi
 },

711 { 1252, 
PT_ALNUM
, 0 },

712 { 1256, 
PT_PXSPACE
, 0 },

713 { 1260, 
PT_SPACE
, 0 },

714 { 1264, 
PT_UCNC
, 0 },

715 { 1268, 
PT_WORD
, 0 },

716 { 1272, 
PT_SC
, 
u˝_Yi
 },

717 { 1275, 
PT_GC
, 
u˝_Z
 },

718 { 1277, 
PT_PC
, 
u˝_Zl
 },

719 { 1280, 
PT_PC
, 
u˝_Zp
 },

720 { 1283, 
PT_PC
, 
u˝_Zs
 }

723 c⁄° 
PRIV
(
uâ_size
Ë(PRIV(
uâ
)Ë/ (
u˝_ty≥_èbÀ
);

	@pcrecomp.c

1 
	~<Pyth⁄.h
>

2 
	~<°dboﬁ.h
>

3 
	~<°döt.h
>

5 
	~"p¸e.h
"

6 
	~"p¸e_öã∫Æ.h
"

8 
PyObje˘
 *
p¸ecomp_compûe
(PyObject *, PyObject *);

10 #i‡
PCRE_MINOR
 == 37 || PCRE_MINOR == 36 || PCRE_MINOR == 35 || PCRE_MINOR == 34 || PCRE_MINOR == 33

11 
	sªÆp¸e
 {

12 
uöt32_t
 
	mmagic_numbî
;

13 
uöt32_t
 
	msize
;

14 
uöt32_t
 
	m›ti⁄s
;

15 
uöt32_t
 
	mÊags
;

16 
uöt32_t
 
	mlimô_m©ch
;

17 
uöt32_t
 
	mlimô_ªcursi⁄
;

18 
uöt16_t
 
	mfú°_ch¨
;

19 
uöt16_t
 
	mªq_ch¨
;

20 
uöt16_t
 
	mmax_lookbehöd
;

21 
uöt16_t
 
	mt›_bøckë
;

22 
uöt16_t
 
	mt›_backªf
;

23 
uöt16_t
 
	m«me_èbÀ_off£t
;

24 
uöt16_t
 
	m«me_íåy_size
;

25 
uöt16_t
 
	m«me_cou¡
;

27 #ñi‡
PCRE_MINOR
 == 31

28 
	sªÆp¸e
 {

29 
uöt32_t
 
	mmagic_numbî
;

30 
uöt32_t
 
	msize
;

31 
uöt32_t
 
	m›ti⁄s
;

32 
uöt16_t
 
	mÊags
;

33 
uöt16_t
 
	mmax_lookbehöd
;

34 
uöt16_t
 
	mt›_bøckë
;

35 
uöt16_t
 
	mt›_backªf
;

36 
uöt16_t
 
	mfú°_ch¨
;

37 
uöt16_t
 
	mªq_ch¨
;

38 
uöt16_t
 
	m«me_èbÀ_off£t
;

39 
uöt16_t
 
	m«me_íåy_size
;

40 
uöt16_t
 
	m«me_cou¡
;

41 
uöt16_t
 
	mªf_cou¡
;

42 c⁄° 
uöt8_t
 *
	mèbÀs
;

43 c⁄° 
uöt8_t
 *
	mnuŒ∑d
;

45 #ñi‡
PCRE_MINOR
 == 12

46 
	sªÆp¸e
 {

47 
uöt32_t
 
	mmagic_numbî
;

48 
uöt32_t
 
	msize
;

49 
uöt32_t
 
	m›ti⁄s
;

50 
uöt16_t
 
	mÊags
;

51 
uöt16_t
 
	mdummy1
;

52 
uöt16_t
 
	mt›_bøckë
;

53 
uöt16_t
 
	mt›_backªf
;

54 
uöt16_t
 
	mfú°_byã
;

55 
uöt16_t
 
	mªq_byã
;

56 
uöt16_t
 
	m«me_èbÀ_off£t
;

57 
uöt16_t
 
	m«me_íåy_size
;

58 
uöt16_t
 
	m«me_cou¡
;

62 
PyMëhodDef
 
	gP¸eCompMëhods
[] = {

63 {"compûe", 
p¸ecomp_compûe
, 
METH_VARARGS
,

65 {
NULL
, NULL, 0, NULL}

68 
PyModuÀDef
 
	gp¸ecompmoduÀ
 = {

69 
PyModuÀDef_HEAD_INIT
,

71 
NULL
,

73 
P¸eCompMëhods


76 
PyObje˘
 *
	gPCREEº‹
;

78 
PyMODINIT_FUNC
 
	$PyInô_p¸ecomp
()

80 
PyObje˘
 *
m
 = 
	`PyModuÀ_Cª©e
(&
p¸ecompmoduÀ
);

81 i‡(
m
 =
NULL
)  NULL;

82 
	`PyModuÀ_AddI¡C⁄°™t
(
m
, "PCRE_MAJOR", 
PCRE_MAJOR
);

83 
	`PyModuÀ_AddI¡C⁄°™t
(
m
, "PCRE_MINOR", 
PCRE_MINOR
);

84 
PCREEº‹
 = 
	`PyEº_NewEx˚±i⁄
("p¸ecomp.PCREEº‹", 
NULL
, NULL);

85 
	`Py_INCREF
(
PCREEº‹
);

86 
	`PyModuÀ_AddObje˘
(
m
, "PCREEº‹", 
PCREEº‹
);

87  
m
;

88 
	}
}

90 
PyObje˘
 *
	$p¸ecomp_compûe
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

92 c⁄° *
∑âîn
 = 
NULL
;

93 
›ti⁄s
 = 0;

94 i‡(
	`PyArg_P¨£Tu∂e
(
¨gs
, "s|i", &
∑âîn
, &
›ti⁄s
Ë!
åue
)

95  
NULL
;

97 c⁄° *
îr‹
;

98 
îroff£t
;

99 
ªÆp¸e
 *
ª
 =

100 (
ªÆp¸e
 *)
	`p¸e_compûe
(
∑âîn
, 
›ti⁄s
,

101 &
îr‹
, &
îroff£t
, 
NULL
);

102 i‡(!
ª
) {

103 
	`PyEº_SëSåög
(
PCREEº‹
, 
îr‹
);

104  
NULL
;

107 
off£t
 = 
ª
->
«me_èbÀ_off£t
;

108 
cou¡
 = 
ª
->
«me_cou¡
;

109 
size
 = 
ª
->
«me_íåy_size
;

110 i‡(
ª
->
magic_numbî
 != 0x50435245UL) {

111 
off£t
 = ((offset << 8) & 0xff00) | ((offset >> 8) & 0xff);

112 
cou¡
 = ((count << 8) & 0xff00) | ((count >> 8) & 0xff);

113 
size
 = ((size << 8) & 0xff00) | ((size >> 8) & 0xff);

115 
ªbö_off£t
 = 
off£t
 + 
cou¡
 * 
size
;

116 c⁄° *
code°¨t
 = (c⁄° *)
ª
 + 
ªbö_off£t
;

117 i‡(*(*)
code°¨t
 !
OP_BRA
) {

118 
	`p¸e_‰ì
(
ª
);

119 
	`PyEº_SëSåög
(
PCREEº‹
, "Incompatible PCREÜibrary.");

120  
NULL
;

122 
codesize
 = 
ª
->
size
 - 
ªbö_off£t
;

123 
PyObje˘
 *
ªbö
 = 
	`PyByãs_FromSåögAndSize
(
code°¨t
, 
codesize
);

124  
ªbö
;

125 
	}
}

	@ucp.h

5 #i‚de‡
_UCP_H


6 
	#_UCP_H


	)

22 
	mu˝_C
,

23 
	mu˝_L
,

24 
	mu˝_M
,

25 
	mu˝_N
,

26 
	mu˝_P
,

27 
	mu˝_S
,

28 
	mu˝_Z


34 
	mu˝_Cc
,

35 
	mu˝_Cf
,

36 
	mu˝_Cn
,

37 
	mu˝_Co
,

38 
	mu˝_Cs
,

39 
	mu˝_Ll
,

40 
	mu˝_Lm
,

41 
	mu˝_Lo
,

42 
	mu˝_Lt
,

43 
	mu˝_Lu
,

44 
	mu˝_Mc
,

45 
	mu˝_Me
,

46 
	mu˝_Mn
,

47 
	mu˝_Nd
,

48 
	mu˝_Nl
,

49 
	mu˝_No
,

50 
	mu˝_Pc
,

51 
	mu˝_Pd
,

52 
	mu˝_Pe
,

53 
	mu˝_Pf
,

54 
	mu˝_Pi
,

55 
	mu˝_Po
,

56 
	mu˝_Ps
,

57 
	mu˝_Sc
,

58 
	mu˝_Sk
,

59 
	mu˝_Sm
,

60 
	mu˝_So
,

61 
	mu˝_Zl
,

62 
	mu˝_Zp
,

63 
	mu˝_Zs


71 
	mu˝_gbCR
,

72 
	mu˝_gbLF
,

73 
	mu˝_gbC⁄åﬁ
,

74 
	mu˝_gbExãnd
,

75 
	mu˝_gbPª≥nd
,

76 
	mu˝_gbS∑cögM¨k
,

77 
	mu˝_gbL
,

78 
	mu˝_gbV
,

79 
	mu˝_gbT
,

80 
	mu˝_gbLV
,

81 
	mu˝_gbLVT
,

82 
	mu˝_gbRegi⁄ÆIndiˇt‹
,

83 
	mu˝_gbOthî


89 
	mu˝_Aøbic
,

90 
	mu˝_Armíün
,

91 
	mu˝_BígÆi
,

92 
	mu˝_B›omofo
,

93 
	mu˝_BøûÀ
,

94 
	mu˝_Bugöe£
,

95 
	mu˝_Buhid
,

96 
	mu˝_C™adün_Ab‹igöÆ
,

97 
	mu˝_Chîokì
,

98 
	mu˝_Comm⁄
,

99 
	mu˝_C›tic
,

100 
	mu˝_Cy¥iŸ
,

101 
	mu˝_Cyrûlic
,

102 
	mu˝_De£ªt
,

103 
	mu˝_Dev™ag¨i
,

104 
	mu˝_Ethi›ic
,

105 
	mu˝_Ge‹gün
,

106 
	mu˝_Gœgﬁôic
,

107 
	mu˝_GŸhic
,

108 
	mu˝_Gªek
,

109 
	mu˝_Guj¨©i
,

110 
	mu˝_Gurmukhi
,

111 
	mu˝_H™
,

112 
	mu˝_H™gul
,

113 
	mu˝_H™unoo
,

114 
	mu˝_Hebªw
,

115 
	mu˝_Húag™a
,

116 
	mu˝_Inhîôed
,

117 
	mu˝_K™«da
,

118 
	mu˝_K©ak™a
,

119 
	mu˝_Kh¨oshthi
,

120 
	mu˝_Khmî
,

121 
	mu˝_Lao
,

122 
	mu˝_L©ö
,

123 
	mu˝_Limbu
,

124 
	mu˝_Löór_B
,

125 
	mu˝_MÆayÆam
,

126 
	mu˝_M⁄gﬁün
,

127 
	mu˝_My™m¨
,

128 
	mu˝_New_Tai_Lue
,

129 
	mu˝_Ogham
,

130 
	mu˝_Old_Ièlic
,

131 
	mu˝_Old_Pîsün
,

132 
	mu˝_Oriya
,

133 
	mu˝_Osm™ya
,

134 
	mu˝_Runic
,

135 
	mu˝_Shavün
,

136 
	mu˝_SöhÆa
,

137 
	mu˝_SylŸi_Nagri
,

138 
	mu˝_Syrüc
,

139 
	mu˝_TagÆog
,

140 
	mu˝_Tagb™wa
,

141 
	mu˝_Tai_Le
,

142 
	mu˝_Tamû
,

143 
	mu˝_Tñugu
,

144 
	mu˝_ThØ«
,

145 
	mu˝_Thai
,

146 
	mu˝_Tibë™
,

147 
	mu˝_Tiföagh
,

148 
	mu˝_Ug¨ôic
,

149 
	mu˝_Yi
,

151 
	mu˝_BÆöe£
,

152 
	mu˝_Cu√if‹m
,

153 
	mu˝_Nko
,

154 
	mu˝_Phags_Pa
,

155 
	mu˝_Ph€nicün
,

157 
	mu˝_C¨ün
,

158 
	mu˝_Cham
,

159 
	mu˝_Kayah_Li
,

160 
	mu˝_Lïcha
,

161 
	mu˝_Lycün
,

162 
	mu˝_Lydün
,

163 
	mu˝_Ol_Chiki
,

164 
	mu˝_Rej™g
,

165 
	mu˝_Sauøshåa
,

166 
	mu˝_Sund™e£
,

167 
	mu˝_Vai
,

169 
	mu˝_Ave°™
,

170 
	mu˝_Bamum
,

171 
	mu˝_Egy±ün_Hõroglyphs
,

172 
	mu˝_Im≥rül_Aømaic
,

173 
	mu˝_Ins¸ùti⁄Æ_Pahœvi
,

174 
	mu˝_Ins¸ùti⁄Æ_P¨thün
,

175 
	mu˝_Jav™e£
,

176 
	mu˝_Kaôhi
,

177 
	mu˝_Lisu
,

178 
	mu˝_Mìãi_Mayek
,

179 
	mu˝_Old_South_Aøbün
,

180 
	mu˝_Old_Turkic
,

181 
	mu˝_Sam¨ô™
,

182 
	mu˝_Tai_Tham
,

183 
	mu˝_Tai_Võt
,

185 
	mu˝_B©ak
,

186 
	mu˝_Bøhmi
,

187 
	mu˝_M™daic
,

189 
	mu˝_Chakma
,

190 
	mu˝_Mîoôic_Cursive
,

191 
	mu˝_Mîoôic_Hõroglyphs
,

192 
	mu˝_Müo
,

193 
	mu˝_Sh¨ada
,

194 
	mu˝_S‹a_Som≥ng
,

195 
	mu˝_Takri
,

197 
	mu˝_Basß_Vah
,

198 
	mu˝_Cauˇsün_Alb™ün
,

199 
	mu˝_Du∂oy™
,

200 
	mu˝_Elbaßn
,

201 
	mu˝_Gø¡ha
,

202 
	mu˝_Khojki
,

203 
	mu˝_Khudawadi
,

204 
	mu˝_Löór_A
,

205 
	mu˝_Mahaj™i
,

206 
	mu˝_M™ich´™
,

207 
	mu˝_Míde_Kikakui
,

208 
	mu˝_Modi
,

209 
	mu˝_Mro
,

210 
	mu˝_Nab©´™
,

211 
	mu˝_Old_N‹th_Aøbün
,

212 
	mu˝_Old_Pîmic
,

213 
	mu˝_Pahawh_Hm⁄g
,

214 
	mu˝_PÆmyª√
,

215 
	mu˝_Pß…î_Pahœvi
,

216 
	mu˝_Pau_Cö_Hau
,

217 
	mu˝_Siddham
,

218 
	mu˝_Túhuè
,

219 
	mu˝_W¨™g_Côi


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
27
521
pcre.h
pcre_chartables.c
pcre_compile.c
pcre_globals.c
pcre_internal.h
pcre_newline.c
pcre_tables.c
pcrecomp.c
ucp.h
/usr/include/ctype.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
